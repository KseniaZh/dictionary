{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\containers\\\\Navigation\\\\Header.js\";\nimport React, { useState } from 'react';\nimport { connect, useDispatch } from \"react-redux\";\nimport ButtonLink from '../../UserInterface/Buttons/Button/ButtonLink';\nimport NavigationWindowBlind from '../../UserInterface/Navigation/NavigationWindowBlind';\nimport NavigationLinkAbout from '../../UserInterface/Navigation/NavigationLinkAbout';\nimport NavigationToggle from '../../UserInterface/Navigation/NavigationToggle';\nimport { startGetRequestServer } from '../../store/serverViewType/actions/actionViewType'; //import iceBaikal from '../../image/iceBaikal.jpg';\n//import { NavLink } from 'react-router-dom';\n\nimport { Navigation } from \"../../styles/Navigation.scss\";\nimport { aboutLinks } from \"../../constans/aboutLinks\";\n\nfunction Header() {\n  const dispatch = useDispatch();\n  const navStyle = [\"Navigation\"];\n  const [linkAbout, setLinkAbout] = useState({\n    text: \"\"\n  });\n  const [isOpen, setIsOpen] = useState(false);\n\n  const hendlerHoverLink = data => {\n    setLinkAbout({\n      text: aboutLinks[data]\n    });\n    console.log('hendlerHoverLink ', aboutLinks[data].h);\n  };\n\n  const hendlerLeaveLink = () => {\n    setLinkAbout({\n      text: \"\"\n    });\n  };\n\n  const hendlerToggleNavigation = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    className: navStyle.join(' '),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ButtonLink, {\n    to: \"/\",\n    name: \"Home\",\n    onclick: () => console.log(\"GO HOME\"),\n    onmouseover: () => hendlerHoverLink('Home'),\n    onmouseleave: hendlerLeaveLink,\n    classname: \"NavigationButtonLink\",\n    tabIndex: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(ButtonLink, {\n    to: \"/ViewType\",\n    name: \"ViewType\",\n    onclick: () => console.log(\"ViewType\"),\n    onmouseover: () => hendlerHoverLink('ViewType'),\n    onmouseleave: hendlerLeaveLink,\n    classname: \"NavigationButtonLink\",\n    tabIndex: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(ButtonLink, {\n    to: \"/EltypeClass\",\n    name: \"EltypeClass\",\n    onclick: () => console.log(\"EltypeClass\"),\n    onmouseover: () => hendlerHoverLink('EltypeClass'),\n    onmouseleave: hendlerLeaveLink,\n    classname: \"NavigationButtonLink\",\n    tabIndex: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(NavigationLinkAbout, {\n    aboutLink: linkAbout.text,\n    classname: \"navigationLinkAbout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(NavigationWindowBlind, {\n    onClick: () => console.log('NavigationWindowBlind'),\n    classname: \"navigationWindowBlind\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(NavigationToggle, {\n    openNavigation: hendlerToggleNavigation,\n    isOpen: isOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default connect()(Header); //{ this.props.isOpen ? <WindowBlind onClick={this.props.onClose} /> : null }","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/containers/Navigation/Header.js"],"names":["React","useState","connect","useDispatch","ButtonLink","NavigationWindowBlind","NavigationLinkAbout","NavigationToggle","startGetRequestServer","Navigation","aboutLinks","Header","dispatch","navStyle","linkAbout","setLinkAbout","text","isOpen","setIsOpen","hendlerHoverLink","data","console","log","h","hendlerLeaveLink","hendlerToggleNavigation","join"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport ButtonLink from '../../UserInterface/Buttons/Button/ButtonLink';\r\nimport NavigationWindowBlind from '../../UserInterface/Navigation/NavigationWindowBlind';\r\nimport NavigationLinkAbout from '../../UserInterface/Navigation/NavigationLinkAbout';\r\nimport NavigationToggle from '../../UserInterface/Navigation/NavigationToggle';\r\nimport { startGetRequestServer } from '../../store/serverViewType/actions/actionViewType';\r\n//import iceBaikal from '../../image/iceBaikal.jpg';\r\n//import { NavLink } from 'react-router-dom';\r\n\r\nimport { Navigation } from \"../../styles/Navigation.scss\";\r\nimport { aboutLinks } from \"../../constans/aboutLinks\";\r\n\r\n\r\nfunction Header() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const navStyle = [\"Navigation\"];\r\n    const [linkAbout, setLinkAbout] = useState({ text: \"\" });\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const hendlerHoverLink = (data) => {\r\n        setLinkAbout({ text: aboutLinks[data] });\r\n        console.log('hendlerHoverLink ', aboutLinks[data].h )\r\n    }\r\n    const hendlerLeaveLink = () => {\r\n        setLinkAbout({text: \"\"});\r\n    }\r\n    const hendlerToggleNavigation = () => {\r\n        setIsOpen(!isOpen);\r\n        }\r\n\r\n    return (\r\n        <header>\r\n            <nav className={navStyle.join(' ')}>\r\n \r\n                    <ButtonLink\r\n                        to='/'\r\n                        name='Home'\r\n                        onclick={() => console.log(\"GO HOME\")}\r\n                        onmouseover={() => hendlerHoverLink('Home')}\r\n                        onmouseleave={hendlerLeaveLink}\r\n                        classname='NavigationButtonLink'\r\n                        tabIndex='1'\r\n                    />\r\n                    <ButtonLink\r\n                        to='/ViewType'\r\n                        name='ViewType'\r\n                        onclick={() => console.log(\"ViewType\")}\r\n                        onmouseover={() => hendlerHoverLink('ViewType')}\r\n                        onmouseleave={hendlerLeaveLink}\r\n                    classname='NavigationButtonLink'\r\n                        tabIndex='2'\r\n                    />\r\n                    <ButtonLink\r\n                        to='/EltypeClass'\r\n                        name='EltypeClass'\r\n                        onclick={() => console.log(\"EltypeClass\")}\r\n                        onmouseover={() => hendlerHoverLink('EltypeClass')}\r\n                        onmouseleave={hendlerLeaveLink}\r\n                    classname='NavigationButtonLink'\r\n                        tabIndex='3'\r\n                 />\r\n\r\n                    <NavigationLinkAbout\r\n                        aboutLink={linkAbout.text}\r\n                        classname=\"navigationLinkAbout\"\r\n                    />\r\n            </nav>\r\n            <NavigationWindowBlind\r\n                onClick={() => console.log('NavigationWindowBlind')}\r\n                classname=\"navigationWindowBlind\"\r\n            />\r\n            <NavigationToggle\r\n                openNavigation={hendlerToggleNavigation}\r\n                isOpen={isOpen}\r\n            />\r\n\r\n        </header>\r\n    )\r\n}\r\nexport default connect()(Header)\r\n\r\n//{ this.props.isOpen ? <WindowBlind onClick={this.props.onClose} /> : null }"]},"metadata":{},"sourceType":"module"}