{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\containers\\\\User\\\\User.js\";\nimport React from 'react';\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport Basis from '../Basis/Basis';\nimport { startUser_GET_RequestServer } from '../../store/User/actions/actionUser';\nimport { saveDataStore } from '../../store/BasisReport/actions/actionFocusData';\nimport { saveTypeRequest, saveNameWindow } from '../../store/User/actions/actionEditWindowUser';\nimport { deleteDataCompareArr } from '../../store/User/actions/actionsCompareUser';\nimport { changeFlagOpenCompareWindow } from '../../store/User/actions/actionsFlagsUser';\nimport { changeAdressOpenTable } from '../../store/User/actions/actionsLinksUser';\nimport { addDataCompareArr } from '../../store/User/actions/actionsCompareUser';\n\nfunction User(props) {\n  const dispatch = useDispatch();\n  const visibleNameСolumns = useSelector(state => state.stateInputEditWindowUser.nameСolumnsTableList); // наименования ключей для заполнения колонок в таблице\n\n  const searchСolumnsName = useSelector(state => state.stateInputEditWindowUser.searchСolumnsName); // объект с разрешением отображения поиска в колонках в таблице\n\n  const sortСolumns = useSelector(state => state.stateInputEditWindowUser.sortСolumns); // объект с разрешением отображения сортировки в колонках в таблице\n\n  const searchKey = useSelector(state => state.stateInputEditWindowUser.searchKey); // ключ для типа поиска в окошке в шапке таблицы\n\n  const typeDataColumns = useSelector(state => state.stateInputEditWindowUser.typeData); // тип данных значений, заполняющих колонки\n\n  const focusData = useSelector(state => state.focusData); // фокус. запомнить данные выбранной строки\n\n  const compareArr = useSelector(state => state.stateCompareUser); // массив строк, избранных для сравнения\n\n  const links = useSelector(state => state.stateLinksUser); //список ссылок для переходов между окнами\n\n  const flagOpenCompareWindow = useSelector(state => state.stateFlagsUser.flagOpenCompareWindow); // флаг открытия таблицы сравнения\n  //переменные и функции для передачи в Basis\n\n  const funcStartGetRequestServer = () => dispatch(startUser_GET_RequestServer());\n\n  const compareArrUid = compareArr.map(obj => obj.uid);\n  const nullFocusData = {\n    \"uid\": \"\",\n    \"login\": \"\",\n    \"name\": \"\",\n    \"password\": \"\",\n    \"isDeleted\": false,\n    \"isSuperUser\": false,\n    \"docInfo\": [],\n    \"projectAuthorU\": [],\n    \"projectUpdaterU\": [],\n    \"userProjects\": []\n  };\n\n  const focusNull = () => {\n    dispatch(saveDataStore(nullFocusData));\n  };\n\n  const hendlerOpenWindow = (nameWindow, typeRequest) => {\n    dispatch(saveTypeRequest(typeRequest));\n    dispatch(saveNameWindow(nameWindow));\n\n    if (typeRequest === \"post\") {\n      focusNull();\n    }\n  };\n\n  const hendlerAddCompareData = () => {\n    if (focusData.uid === '' || focusData.uid === null || focusData.uid === undefined) {\n      return;\n    }\n\n    ;\n    dispatch(addDataCompareArr(focusData, compareArr));\n  };\n\n  const hendlerButtonRowClickAddCompareData = data => {\n    if ([data].uid === '' || [data] === null || [data] === undefined) {\n      return;\n    }\n\n    ;\n    dispatch(addDataCompareArr(data, compareArr));\n  };\n\n  const hendlerOpenCompareWindow = () => {\n    dispatch(changeFlagOpenCompareWindow(true));\n    focusNull();\n    dispatch(changeAdressOpenTable(links.linkCompare));\n  };\n\n  const hendlerButtonRowClickDeleteCompareData = data => {\n    if ([data].uid === '' || [data] === null || [data] === undefined) {\n      return;\n    }\n\n    ;\n    dispatch(deleteDataCompareArr(data, compareArr));\n  };\n\n  const stateConsoleButton = [{\n    text: \"Обновить\",\n    name: 'update',\n    icon: \"fa fa-download fa-lg\",\n    onclick: funcStartGetRequestServer,\n    link: links.linkBase\n  }, {\n    text: \"Добавить новые данные\",\n    name: 'add',\n    icon: \"fa fa-plus fa-lg\",\n    onclick: () => hendlerOpenWindow(\"Новые данные\", \"post\"),\n    link: links.linkEditWindow\n  }, {\n    text: \"Внести изменения\",\n    name: 'edit',\n    icon: \"fa fa-pencil-square-o fa-lg\",\n    onclick: () => hendlerOpenWindow(\"Внести изменения\", \"put\"),\n    link: links.linkEditWindow\n  }, {\n    text: \"Удалить\",\n    name: 'delete',\n    icon: \"fa fa-times fa-lg\",\n    onclick: () => {},\n    link: links.linkWindowConfirmDeleting\n  }, {\n    text: \"Сравнить\",\n    name: 'compare',\n    icon: \"fa fa-balance-scale\",\n    onclick: hendlerOpenCompareWindow,\n    link: links.linkCompare\n  }, {\n    text: \"Добавить к сравнению\",\n    name: 'addCompare',\n    icon: \"fa fa-filter fa-lg\",\n    onclick: hendlerAddCompareData,\n    link: links.linkBase\n  }];\n  return /*#__PURE__*/React.createElement(Basis, {\n    funcStartGetRequestServer: funcStartGetRequestServer,\n    stateConsoleButton: stateConsoleButton,\n    focusNull: focusNull,\n    hendlerButtonRowClickDeleteCompareData: hendlerButtonRowClickDeleteCompareData,\n    visibleNameСolumns: visibleNameСolumns,\n    searchСolumnsName: searchСolumnsName,\n    sortСolumns: sortСolumns,\n    searchKey: searchKey,\n    typeDataColumns: typeDataColumns,\n    flagOpenCompareWindow: flagOpenCompareWindow,\n    nameHeader: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439\",\n    onclickButtonRowClickAddCompareData: hendlerButtonRowClickAddCompareData,\n    compareArrUid: compareArrUid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  });\n}\n\nexport default connect()(User);","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/containers/User/User.js"],"names":["React","connect","useDispatch","useSelector","Basis","startUser_GET_RequestServer","saveDataStore","saveTypeRequest","saveNameWindow","deleteDataCompareArr","changeFlagOpenCompareWindow","changeAdressOpenTable","addDataCompareArr","User","props","dispatch","visibleNameСolumns","state","stateInputEditWindowUser","nameСolumnsTableList","searchСolumnsName","sortСolumns","searchKey","typeDataColumns","typeData","focusData","compareArr","stateCompareUser","links","stateLinksUser","flagOpenCompareWindow","stateFlagsUser","funcStartGetRequestServer","compareArrUid","map","obj","uid","nullFocusData","focusNull","hendlerOpenWindow","nameWindow","typeRequest","hendlerAddCompareData","undefined","hendlerButtonRowClickAddCompareData","data","hendlerOpenCompareWindow","linkCompare","hendlerButtonRowClickDeleteCompareData","stateConsoleButton","text","name","icon","onclick","link","linkBase","linkEditWindow","linkWindowConfirmDeleting"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Basis from '../Basis/Basis';\r\n\r\nimport { startUser_GET_RequestServer } from '../../store/User/actions/actionUser';\r\nimport { saveDataStore } from '../../store/BasisReport/actions/actionFocusData';\r\nimport {\r\n    saveTypeRequest,\r\n    saveNameWindow\r\n} from '../../store/User/actions/actionEditWindowUser';\r\nimport {\r\n    deleteDataCompareArr\r\n} from '../../store/User/actions/actionsCompareUser';\r\nimport { changeFlagOpenCompareWindow } from '../../store/User/actions/actionsFlagsUser';\r\nimport { changeAdressOpenTable } from '../../store/User/actions/actionsLinksUser';\r\nimport { addDataCompareArr } from '../../store/User/actions/actionsCompareUser';\r\n\r\n\r\n\r\nfunction User(props) {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const visibleNameСolumns = useSelector(state => state.stateInputEditWindowUser.nameСolumnsTableList); // наименования ключей для заполнения колонок в таблице\r\n\r\n    const searchСolumnsName = useSelector(state => state.stateInputEditWindowUser.searchСolumnsName); // объект с разрешением отображения поиска в колонках в таблице\r\n\r\n    const sortСolumns = useSelector(state => state.stateInputEditWindowUser.sortСolumns); // объект с разрешением отображения сортировки в колонках в таблице\r\n\r\n    const searchKey = useSelector(state => state.stateInputEditWindowUser.searchKey); // ключ для типа поиска в окошке в шапке таблицы\r\n\r\n    const typeDataColumns = useSelector(state => state.stateInputEditWindowUser.typeData); // тип данных значений, заполняющих колонки\r\n\r\n    const focusData = useSelector(state => state.focusData); // фокус. запомнить данные выбранной строки\r\n\r\n    const compareArr = useSelector(state => state.stateCompareUser); // массив строк, избранных для сравнения\r\n\r\n    const links = useSelector(state => state.stateLinksUser); //список ссылок для переходов между окнами\r\n\r\n    const flagOpenCompareWindow = useSelector(state => state.stateFlagsUser.flagOpenCompareWindow); // флаг открытия таблицы сравнения\r\n\r\n\r\n    //переменные и функции для передачи в Basis\r\n\r\n    const funcStartGetRequestServer = () => dispatch(startUser_GET_RequestServer());\r\n\r\n    const compareArrUid = compareArr.map(obj => obj.uid);\r\n\r\n    const nullFocusData = {\r\n        \"uid\": \"\",\r\n        \"login\": \"\",\r\n        \"name\": \"\",\r\n        \"password\": \"\",\r\n        \"isDeleted\": false,\r\n        \"isSuperUser\": false,\r\n        \"docInfo\": [],\r\n        \"projectAuthorU\": [],\r\n        \"projectUpdaterU\": [],\r\n        \"userProjects\": []\r\n    };\r\n\r\n    const focusNull = () => {\r\n        dispatch(saveDataStore(nullFocusData));\r\n        }\r\n\r\n    const hendlerOpenWindow = (nameWindow, typeRequest) => {\r\n\r\n        dispatch(saveTypeRequest(typeRequest));\r\n        dispatch(saveNameWindow(nameWindow));\r\n        if (typeRequest === \"post\") {\r\n            focusNull();\r\n        }\r\n    }\r\n\r\n    const hendlerAddCompareData = () => {\r\n        if (focusData.uid === '' || focusData.uid === null || focusData.uid === undefined) {\r\n            return\r\n        };\r\n        dispatch(addDataCompareArr(focusData, compareArr));\r\n    }\r\n    const hendlerButtonRowClickAddCompareData = (data) => {\r\n        if ([data].uid === '' || [data] === null || [data] === undefined) {\r\n            return\r\n        };\r\n        dispatch(addDataCompareArr(data, compareArr));\r\n    }\r\n\r\n    const hendlerOpenCompareWindow = () => {\r\n        dispatch(changeFlagOpenCompareWindow(true)); \r\n        focusNull();\r\n        dispatch(changeAdressOpenTable(links.linkCompare)); \r\n    }\r\n\r\n    const hendlerButtonRowClickDeleteCompareData = (data) => {\r\n        if ([data].uid === '' || [data] === null || [data] === undefined) {\r\n            return\r\n        };\r\n        dispatch(deleteDataCompareArr(data, compareArr));\r\n    }\r\n\r\n    const stateConsoleButton = [\r\n        {\r\n            text: \"Обновить\",\r\n            name: 'update',\r\n            icon: \"fa fa-download fa-lg\",\r\n            onclick: funcStartGetRequestServer,\r\n            link: links.linkBase\r\n        },\r\n        {\r\n            text: \"Добавить новые данные\",\r\n            name: 'add',\r\n            icon: \"fa fa-plus fa-lg\",\r\n            onclick: () => hendlerOpenWindow(\"Новые данные\", \"post\"),\r\n            link: links.linkEditWindow\r\n        },\r\n        {\r\n            text: \"Внести изменения\",\r\n            name: 'edit',\r\n            icon: \"fa fa-pencil-square-o fa-lg\",\r\n            onclick: () => hendlerOpenWindow(\"Внести изменения\", \"put\"),\r\n            link: links.linkEditWindow\r\n        },\r\n        {\r\n            text: \"Удалить\",\r\n            name: 'delete',\r\n            icon: \"fa fa-times fa-lg\",\r\n            onclick: () => { },\r\n            link: links.linkWindowConfirmDeleting\r\n        },\r\n        {\r\n            text: \"Сравнить\",\r\n            name: 'compare',\r\n            icon: \"fa fa-balance-scale\",\r\n            onclick: hendlerOpenCompareWindow,\r\n            link: links.linkCompare\r\n        },\r\n        {\r\n            text: \"Добавить к сравнению\",\r\n            name: 'addCompare',\r\n            icon: \"fa fa-filter fa-lg\",\r\n            onclick: hendlerAddCompareData,\r\n            link: links.linkBase\r\n        }\r\n    ];  \r\n\r\n    return (\r\n\r\n        <Basis\r\n            funcStartGetRequestServer={funcStartGetRequestServer}\r\n            stateConsoleButton={stateConsoleButton}\r\n            focusNull={focusNull}\r\n            hendlerButtonRowClickDeleteCompareData={hendlerButtonRowClickDeleteCompareData}\r\n            visibleNameСolumns={visibleNameСolumns}\r\n            searchСolumnsName={searchСolumnsName}\r\n            sortСolumns={sortСolumns}\r\n            searchKey={searchKey}\r\n            typeDataColumns={typeDataColumns}\r\n            flagOpenCompareWindow={flagOpenCompareWindow}\r\n            nameHeader=\"Список пользователей\"\r\n            onclickButtonRowClickAddCompareData={hendlerButtonRowClickAddCompareData}\r\n            compareArrUid={compareArrUid}\r\n        />\r\n    )\r\n}\r\n\r\nexport default connect()(User)"]},"metadata":{},"sourceType":"module"}