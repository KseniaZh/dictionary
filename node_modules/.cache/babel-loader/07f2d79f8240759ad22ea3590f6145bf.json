{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\containers\\\\Personalize\\\\Personalize.js\";\nimport React, { useState } from 'react';\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport Checkbox from '../../UserInterface/Input/Checkbox';\nimport { haveDescriptionAll } from '../../store/Flags/actionsFlags';\nimport Select from '../../UserInterface/Select/Select';\n\nfunction Personalize(props) {\n  const stylesList = [{\n    value: \"STYLE_1\",\n    text: \"Coffee\"\n  }, {\n    value: \"STYLE_2\",\n    text: \"GreyBlue\"\n  }];\n  const [styleValue, setStyleValue] = useState(\"STYLE_1\");\n\n  const hendlerSelect = event => {\n    event.preventDefault();\n    if (event.target.tagName != 'SELECT') return;\n    setStyleValue(event.target.value);\n    console.log('Select ', event.target.value);\n  }; //переключение подсказок во всем приложении\n\n\n  const flagHaveDescription = useSelector(state => state.stateFlagsAll.haveDescriptionAll);\n  const dispatch = useDispatch();\n\n  const inputChecked = flag => {\n    if (flag == true) {\n      return \"checked\";\n    } else {\n      return \"\";\n    }\n  };\n\n  const hendlerHaveDescription = event => {\n    if (event.target.type == \"checkbox\") {\n      dispatch(haveDescriptionAll(!flagHaveDescription));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Personalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    id: \"styleSelect\",\n    onchange: hendlerSelect,\n    value: styleValue,\n    tabindex: \"1\",\n    arrOptionSelect: stylesList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Checkbox, {\n    label: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u044B\\u0432\\u0430\\u0442\\u044C \\u0432\\u0441\\u043F\\u043B\\u044B\\u0432\\u0430\\u044E\\u0449\\u0438\\u0435 \\u043F\\u043E\\u0434\\u0441\\u043A\\u0430\\u0437\\u043A\\u0438\",\n    id: \"haveDescription\",\n    type: \"checkbox\",\n    onchange: hendlerHaveDescription,\n    checked: inputChecked(flagHaveDescription),\n    classNameLabel: \"\",\n    classNameCheckbox: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }));\n}\n\nexport default connect()(Personalize);","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/containers/Personalize/Personalize.js"],"names":["React","useState","connect","useDispatch","useSelector","Checkbox","haveDescriptionAll","Select","Personalize","props","stylesList","value","text","styleValue","setStyleValue","hendlerSelect","event","preventDefault","target","tagName","console","log","flagHaveDescription","state","stateFlagsAll","dispatch","inputChecked","flag","hendlerHaveDescription","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,WAA/B,QAAkD,aAAlD;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,SAASC,kBAAT,QAAmC,gCAAnC;AACA,OAAOC,MAAP,MAAmB,mCAAnB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAExB,QAAMC,UAAU,GAAG,CACf;AACIC,IAAAA,KAAK,EAAE,SADX;AAEIC,IAAAA,IAAI,EAAE;AAFV,GADe,EAIf;AACID,IAAAA,KAAK,EAAE,SADX;AAEIC,IAAAA,IAAI,EAAC;AAFT,GAJe,CAAnB;AASA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,SAAD,CAA5C;;AAEA,QAAMc,aAAa,GAAIC,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAID,KAAK,CAACE,MAAN,CAAaC,OAAb,IAAwB,QAA5B,EAAsC;AACtCL,IAAAA,aAAa,CAACE,KAAK,CAACE,MAAN,CAAaP,KAAd,CAAb;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBL,KAAK,CAACE,MAAN,CAAaP,KAApC;AACH,GALD,CAbwB,CAoBxB;;;AACA,QAAMW,mBAAmB,GAAGlB,WAAW,CAACmB,KAAK,IAAIA,KAAK,CAACC,aAAN,CAAoBlB,kBAA9B,CAAvC;AAEA,QAAMmB,QAAQ,GAAGtB,WAAW,EAA5B;;AAEA,QAAMuB,YAAY,GAAGC,IAAI,IAAI;AACzB,QAAIA,IAAI,IAAI,IAAZ,EAAkB;AACd,aAAO,SAAP;AACH,KAFD,MAEO;AACH,aAAO,EAAP;AACH;AACJ,GAND;;AAOA,QAAMC,sBAAsB,GAAIZ,KAAD,IAAW;AACtC,QAAIA,KAAK,CAACE,MAAN,CAAaW,IAAb,IAAqB,UAAzB,EAAqC;AACjCJ,MAAAA,QAAQ,CAACnB,kBAAkB,CAAC,CAACgB,mBAAF,CAAnB,CAAR;AACH;AACJ,GAJD;;AAKA,sBACQ;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,EAAE,EAAC,aADP;AAEI,IAAA,QAAQ,EAAEP,aAFd;AAGI,IAAA,KAAK,EAAEF,UAHX;AAII,IAAA,QAAQ,EAAC,GAJb;AAKI,IAAA,eAAe,EAAEH,UALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAUI,oBAAC,QAAD;AACI,IAAA,KAAK,EAAC,wLADV;AAEI,IAAA,EAAE,EAAC,iBAFP;AAGI,IAAA,IAAI,EAAC,UAHT;AAKI,IAAA,QAAQ,EAAEkB,sBALd;AAMI,IAAA,OAAO,EAAEF,YAAY,CAACJ,mBAAD,CANzB;AAOI,IAAA,cAAc,EAAC,EAPnB;AAQI,IAAA,iBAAiB,EAAC,EARtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADR;AAwBH;;AAED,eAAepB,OAAO,GAAGM,WAAH,CAAtB","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport Checkbox from '../../UserInterface/Input/Checkbox';\r\nimport { haveDescriptionAll } from '../../store/Flags/actionsFlags';\r\nimport Select from '../../UserInterface/Select/Select';\r\n\r\nfunction Personalize(props) {\r\n\r\n    const stylesList = [\r\n        {\r\n            value: \"STYLE_1\",\r\n            text: \"Coffee\"},\r\n        {\r\n            value: \"STYLE_2\",\r\n            text:\"GreyBlue\"}\r\n    ];\r\n\r\n    const [styleValue, setStyleValue] = useState(\"STYLE_1\");\r\n\r\n    const hendlerSelect = (event) => {\r\n        event.preventDefault();\r\n        if (event.target.tagName != 'SELECT') return;\r\n        setStyleValue(event.target.value);\r\n        console.log('Select ', event.target.value);\r\n    }\r\n\r\n    //переключение подсказок во всем приложении\r\n    const flagHaveDescription = useSelector(state => state.stateFlagsAll.haveDescriptionAll);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const inputChecked = flag => {\r\n        if (flag == true) {\r\n            return \"checked\"\r\n        } else {\r\n            return \"\"\r\n        }\r\n    }\r\n    const hendlerHaveDescription = (event) => {\r\n        if (event.target.type == \"checkbox\") {\r\n            dispatch(haveDescriptionAll(!flagHaveDescription));\r\n        }\r\n    }\r\n    return (\r\n            <div className=\"Personalize\">\r\n                <div>\r\n                    <Select\r\n                        id=\"styleSelect\"\r\n                        onchange={hendlerSelect}\r\n                        value={styleValue}\r\n                        tabindex='1'\r\n                        arrOptionSelect={stylesList}\r\n                     />\r\n                </div>\r\n                <Checkbox\r\n                    label=\"Показывать всплывающие подсказки\"\r\n                    id=\"haveDescription\"\r\n                    type='checkbox'\r\n\r\n                    onchange={hendlerHaveDescription}\r\n                    checked={inputChecked(flagHaveDescription)}\r\n                    classNameLabel=''\r\n                    classNameCheckbox=''\r\n                />\r\n            </div>\r\n\r\n    )\r\n}\r\n\r\nexport default connect()(Personalize)"]},"metadata":{},"sourceType":"module"}