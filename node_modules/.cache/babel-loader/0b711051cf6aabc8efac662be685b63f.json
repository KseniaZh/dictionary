{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\containers\\\\Basis\\\\BasisCompare.js\";\nimport React, { useEffect } from 'react';\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport HeaderCompare from '../../components/Header/HeaderCompare';\nimport TableList from '../../components/Table/TableList';\nimport WarningCompare from '../../components/WarningWindow/WarningCompare';\nimport ContextMenuCompare from '../../components/ContextMenuWindow/ContextMenuCompare';\nimport { sortingCompareArr } from '../../store/User/actions/actionsCompareUser';\nimport { addDescription } from \"../../store/Description/actionsDescription\";\nimport withContextMenuWindow from '../../hoc/withContextMenuWindow';\n\nfunction BasisCompare(props) {\n  const dispatch = useDispatch();\n  const visibleNameСolumns = useSelector(state => state.stateInputEditWindowUser.nameСolumnsTableList); // наименования ключей для заполнения колонок в таблице\n\n  const typeDataColumns = useSelector(state => state.stateInputEditWindowUser.typeData); // тип данных значений, заполняющих колонки\n\n  const flagEmployDescription = useSelector(state => state.stateFlagsAll.employDescriptionAll); // разрешен ли пользователем показ подсказок\n\n  const arrDescription = useSelector(state => state.stateDescription); // массив подсказок из store (пока без кнопок консоли, заполнится после рединга)\n  //переключение цветового решения приложения\n\n  const stateStylesAll = useSelector(state => state.stateStyle.stylesAll);\n  const staleSelect = useSelector(state => state.stateStyle.styleSelect);\n\n  const haveDescription = dataStateConsoleButton => {\n    //добавляем подсказки на кнопки консоли\n    if (flagEmployDescription === true) {\n      let aboutDescription = {};\n      dataStateConsoleButton.map(obj => {\n        aboutDescription[obj.name] = [obj.text];\n      });\n      dispatch(addDescription(aboutDescription, arrDescription));\n    }\n\n    ;\n  }; //логика добавления контекстного меню через hoc\n\n\n  const CompareTableWithContextMenu = withContextMenuWindow(TableList, ContextMenuCompare, props.stateConsoleButton, \"ContextMenuWindow\");\n  useEffect(() => {\n    haveDescription(props.stateConsoleButton);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: stateStylesAll[staleSelect].dataBaseContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HeaderCompare, {\n    classnameHeaderContainer: stateStylesAll[staleSelect].dataBaseHeaderContainer,\n    classnameHeader: stateStylesAll[staleSelect].dataBaseHeaderHeader,\n    classnameHeaderConsole: stateStylesAll[staleSelect].dataBaseHeaderConsole,\n    stateConsoleButton: props.stateConsoleButton,\n    classnameDescription: stateStylesAll[staleSelect].descriptionButton,\n    nameBase: props.nameBase,\n    nameHeader: props.nameHeader,\n    hendlerCloseWindow: props.hendlerCloseWindow,\n    to: props.linkBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), props.compareArr.length > 1 ? /*#__PURE__*/React.createElement(CompareTableWithContextMenu, {\n    classname: stateStylesAll[staleSelect].dataBaseTableContainer,\n    colorRowTableBackground: stateStylesAll[staleSelect].rowTableBackground,\n    colorFocusRowBackground: stateStylesAll[staleSelect].focusRowBackground,\n    flagOpenCompareWindow: props.flagOpenCompareWindow,\n    stateTable: props.compareArr,\n    dataTable: props.compareArr,\n    CountRow: props.compareArr.length + 1,\n    onclickDelete: props.hendlerDeleteContext,\n    visibleNameСolumns: visibleNameСolumns,\n    typeDataColumns: typeDataColumns,\n    funcSorting: data => dispatch(sortingCompareArr(data)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(WarningCompare, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 23\n    }\n  }));\n}\n\nexport default connect()(BasisCompare);","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/containers/Basis/BasisCompare.js"],"names":["React","useEffect","connect","useDispatch","useSelector","HeaderCompare","TableList","WarningCompare","ContextMenuCompare","sortingCompareArr","addDescription","withContextMenuWindow","BasisCompare","props","dispatch","visibleNameСolumns","state","stateInputEditWindowUser","nameСolumnsTableList","typeDataColumns","typeData","flagEmployDescription","stateFlagsAll","employDescriptionAll","arrDescription","stateDescription","stateStylesAll","stateStyle","stylesAll","staleSelect","styleSelect","haveDescription","dataStateConsoleButton","aboutDescription","map","obj","name","text","CompareTableWithContextMenu","stateConsoleButton","dataBaseContainer","dataBaseHeaderContainer","dataBaseHeaderHeader","dataBaseHeaderConsole","descriptionButton","nameBase","nameHeader","hendlerCloseWindow","linkBack","compareArr","length","dataBaseTableContainer","rowTableBackground","focusRowBackground","flagOpenCompareWindow","hendlerDeleteContext","data"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport HeaderCompare from '../../components/Header/HeaderCompare';\r\nimport TableList from '../../components/Table/TableList';\r\nimport WarningCompare from '../../components/WarningWindow/WarningCompare';\r\nimport ContextMenuCompare from '../../components/ContextMenuWindow/ContextMenuCompare';\r\n\r\nimport { sortingCompareArr } from '../../store/User/actions/actionsCompareUser';\r\nimport { addDescription } from \"../../store/Description/actionsDescription\";\r\n\r\nimport withContextMenuWindow from '../../hoc/withContextMenuWindow';\r\n\r\n\r\nfunction BasisCompare(props) {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const visibleNameСolumns = useSelector(state => state.stateInputEditWindowUser.nameСolumnsTableList); // наименования ключей для заполнения колонок в таблице\r\n\r\n    const typeDataColumns = useSelector(state => state.stateInputEditWindowUser.typeData); // тип данных значений, заполняющих колонки\r\n\r\n    const flagEmployDescription = useSelector(state => state.stateFlagsAll.employDescriptionAll) // разрешен ли пользователем показ подсказок\r\n\r\n    const arrDescription = useSelector(state => state.stateDescription); // массив подсказок из store (пока без кнопок консоли, заполнится после рединга)\r\n\r\n    //переключение цветового решения приложения\r\n    const stateStylesAll = useSelector(state => state.stateStyle.stylesAll);\r\n    const staleSelect = useSelector(state => state.stateStyle.styleSelect);\r\n\r\n    \r\n\r\n    const haveDescription = (dataStateConsoleButton) => {\r\n        //добавляем подсказки на кнопки консоли\r\n        if (flagEmployDescription === true) {\r\n            let aboutDescription = {};\r\n            dataStateConsoleButton.map((obj) => {\r\n                aboutDescription[obj.name] = [obj.text];\r\n            });\r\n            dispatch(addDescription(aboutDescription, arrDescription));\r\n        };\r\n    }\r\n\r\n    //логика добавления контекстного меню через hoc\r\n    const CompareTableWithContextMenu = withContextMenuWindow(TableList, ContextMenuCompare, props.stateConsoleButton, \"ContextMenuWindow\");\r\n    \r\n    useEffect(() => {\r\n        haveDescription(props.stateConsoleButton);\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <div className={stateStylesAll[staleSelect].dataBaseContainer}>\r\n\r\n            <HeaderCompare\r\n                classnameHeaderContainer={stateStylesAll[staleSelect].dataBaseHeaderContainer}\r\n                classnameHeader={stateStylesAll[staleSelect].dataBaseHeaderHeader}\r\n                classnameHeaderConsole={stateStylesAll[staleSelect].dataBaseHeaderConsole}\r\n                stateConsoleButton={props.stateConsoleButton}\r\n                classnameDescription={stateStylesAll[staleSelect].descriptionButton}\r\n                nameBase={props.nameBase}\r\n                nameHeader={props.nameHeader}\r\n                hendlerCloseWindow={props.hendlerCloseWindow}\r\n                to={props.linkBack}\r\n            />\r\n\r\n            {\r\n                (props.compareArr.length > 1) ?\r\n                    <CompareTableWithContextMenu\r\n                        classname={stateStylesAll[staleSelect].dataBaseTableContainer}\r\n                        colorRowTableBackground={stateStylesAll[staleSelect].rowTableBackground}\r\n                        colorFocusRowBackground={stateStylesAll[staleSelect].focusRowBackground}\r\n\r\n                        flagOpenCompareWindow={props.flagOpenCompareWindow}\r\n\r\n                        stateTable={props.compareArr}\r\n                        dataTable={props.compareArr}\r\n                        CountRow={props.compareArr.length + 1}\r\n                        onclickDelete={props.hendlerDeleteContext}\r\n                        visibleNameСolumns={visibleNameСolumns}\r\n                        typeDataColumns={typeDataColumns}\r\n                        funcSorting={(data)=> dispatch(sortingCompareArr(data))}\r\n                    />\r\n                    : <WarningCompare />\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect()(BasisCompare)"]},"metadata":{},"sourceType":"module"}