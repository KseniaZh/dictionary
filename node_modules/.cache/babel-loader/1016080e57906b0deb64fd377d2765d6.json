{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\containers\\\\EditWindow\\\\ContEditWindow.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport EditWindow from '../../components/EditWindow/EditWindow';\nimport { start_POST_RequestServer, saveDataStore, windowOpen } from '../../store/windowCreateNewData/actions/actionWindowCreateNewData';\nconst mapDispatchToProps = {\n  saveDataStore,\n  windowOpen,\n  start_POST_RequestServer\n};\n\nconst mapStateToProps = state => {\n  return {\n    initialProperties: state.WindowCreateNewData\n  };\n};\n\nclass ContEditWindow extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handlerOnChange = (event, keyName) => {\n      let newStateData = this.state.stateData;\n      newStateData[keyName] = event.target.value;\n      this.setState({\n        stateData: newStateData\n      });\n    };\n\n    this.nullStateEndDataStore = () => {\n      let nullState = {};\n      Object.keys(this.state).map(key => nullState[key] = '');\n      this.setState({ ...nullState\n      });\n      this.saveDataStore({ ...nullState\n      });\n    };\n\n    this.handlerSave = () => {\n      console.log('handlerButtonSave = this.state ', this.state);\n      this.saveDataStore(this.state);\n      this.start_POST_RequestServer();\n      this.nullStateEndDataStore();\n    };\n\n    this.handlerClose = () => {\n      this.windowOpen();\n      this.nullStateEndDataStore();\n    };\n\n    this.flag = props.initialProperties.flag;\n    this.state = props.initialProperties;\n    this.nameWindow = props.initialProperties.nameWindow;\n    this.labels = props.initialProperties.labels;\n    this.placeholders = props.initialProperties.placeholders;\n    this.typeData = props.initialProperties.typeData;\n    this.saveDataStore = props.saveDataStore;\n    this.windowOpen = props.windowOpen;\n    this.start_POST_RequestServer = props.start_POST_RequestServer;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, this.flag == true ? /*#__PURE__*/React.createElement(EditWindow, {\n      nameWindow: this.state.nameWindow,\n      onchange: this.handlerOnChange,\n      stateData: this.state.stateData,\n      labels: this.state.labels,\n      placeholders: this.state.placeholders,\n      typeData: this.state.typeData,\n      classNameLabel: \"\",\n      classNameInput: \"\",\n      classNameTextarea: \"\",\n      nameButtonSave: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n      nameButtonClose: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\",\n      onclick1: this.handlerSave,\n      onclick2: this.handlerClose,\n      classWrapper: \"\",\n      classButtonWrapper: \"\",\n      classButton: \"\",\n      classButtonX: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }) : null);\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContEditWindow); //{()=>props.handlerButtonSave(this.state)}","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/containers/EditWindow/ContEditWindow.js"],"names":["React","connect","EditWindow","start_POST_RequestServer","saveDataStore","windowOpen","mapDispatchToProps","mapStateToProps","state","initialProperties","WindowCreateNewData","ContEditWindow","Component","constructor","props","handlerOnChange","event","keyName","newStateData","stateData","target","value","setState","nullStateEndDataStore","nullState","Object","keys","map","key","handlerSave","console","log","handlerClose","flag","nameWindow","labels","placeholders","typeData","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,SAAQC,wBAAR,EAAkCC,aAAlC,EAAiDC,UAAjD,QAAkE,mEAAlE;AAGA,MAAMC,kBAAkB,GAAE;AACtBF,EAAAA,aADsB;AAEtBC,EAAAA,UAFsB;AAGtBF,EAAAA;AAHsB,CAA1B;;AAKA,MAAMI,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,iBAAiB,EAAED,KAAK,CAACE;AADtB,GAAP;AAGH,CAJD;;AAMA,MAAMC,cAAN,SAA6BX,KAAK,CAACY,SAAnC,CAA4C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAkBtBC,eAlBsB,GAkBJ,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAClC,UAAIC,YAAY,GAAG,KAAKV,KAAL,CAAWW,SAA9B;AACAD,MAAAA,YAAY,CAACD,OAAD,CAAZ,GAAwBD,KAAK,CAACI,MAAN,CAAaC,KAArC;AACA,WAAKC,QAAL,CAAc;AAACH,QAAAA,SAAS,EAAED;AAAZ,OAAd;AACH,KAtBqB;;AAAA,SAwBtBK,qBAxBsB,GAwBE,MAAI;AACxB,UAAIC,SAAS,GAAG,EAAhB;AACAC,MAAAA,MAAM,CAACC,IAAP,CAAY,KAAKlB,KAAjB,EAAwBmB,GAAxB,CAA6BC,GAAD,IAAQJ,SAAS,CAACI,GAAD,CAAT,GAAiB,EAArD;AACA,WAAKN,QAAL,CAAc,EAAC,GAAGE;AAAJ,OAAd;AACA,WAAKpB,aAAL,CAAmB,EAAC,GAAGoB;AAAJ,OAAnB;AACH,KA7BqB;;AAAA,SA+BtBK,WA/BsB,GA+BR,MAAI;AAEdC,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+C,KAAKvB,KAApD;AACA,WAAKJ,aAAL,CAAmB,KAAKI,KAAxB;AACA,WAAKL,wBAAL;AACA,WAAKoB,qBAAL;AAEH,KAtCqB;;AAAA,SAuCtBS,YAvCsB,GAuCR,MAAI;AACd,WAAK3B,UAAL;AACA,WAAKkB,qBAAL;AACH,KA1CqB;;AAGd,SAAKU,IAAL,GAAYnB,KAAK,CAACL,iBAAN,CAAwBwB,IAApC;AACA,SAAKzB,KAAL,GAAaM,KAAK,CAACL,iBAAnB;AACA,SAAKyB,UAAL,GAAkBpB,KAAK,CAACL,iBAAN,CAAwByB,UAA1C;AACA,SAAKC,MAAL,GAAcrB,KAAK,CAACL,iBAAN,CAAwB0B,MAAtC;AACA,SAAKC,YAAL,GAAoBtB,KAAK,CAACL,iBAAN,CAAwB2B,YAA5C;AACA,SAAKC,QAAL,GAAgBvB,KAAK,CAACL,iBAAN,CAAwB4B,QAAxC;AAEA,SAAKjC,aAAL,GAAqBU,KAAK,CAACV,aAA3B;AACA,SAAKC,UAAL,GAAkBS,KAAK,CAACT,UAAxB;AACA,SAAKF,wBAAL,GAAgCW,KAAK,CAACX,wBAAtC;AAEP;;AA8BGmC,EAAAA,MAAM,GAAE;AACR,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,KAAKL,IAAL,IAAa,IAAb,gBAGE,oBAAC,UAAD;AACQ,MAAA,UAAU,EAAI,KAAKzB,KAAL,CAAW0B,UADjC;AAGQ,MAAA,QAAQ,EAAI,KAAKnB,eAHzB;AAIQ,MAAA,SAAS,EAAI,KAAKP,KAAL,CAAWW,SAJhC;AAKQ,MAAA,MAAM,EAAI,KAAKX,KAAL,CAAW2B,MAL7B;AAMQ,MAAA,YAAY,EAAI,KAAK3B,KAAL,CAAW4B,YANnC;AAOQ,MAAA,QAAQ,EAAG,KAAK5B,KAAL,CAAW6B,QAP9B;AASQ,MAAA,cAAc,EAAG,EATzB;AAUQ,MAAA,cAAc,EAAG,EAVzB;AAWQ,MAAA,iBAAiB,EAAG,EAX5B;AAaQ,MAAA,cAAc,EAAG,wDAbzB;AAcQ,MAAA,eAAe,EAAG,sCAd1B;AAeQ,MAAA,QAAQ,EAAI,KAAKR,WAfzB;AAgBQ,MAAA,QAAQ,EAAI,KAAKG,YAhBzB;AAiBQ,MAAA,YAAY,EAAG,EAjBvB;AAkBQ,MAAA,kBAAkB,EAAG,EAlB7B;AAmBQ,MAAA,WAAW,EAAG,EAnBtB;AAoBQ,MAAA,YAAY,EAAG,EApBvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,GAyBI,IA3BN,CADJ;AAgCH;;AA9E2C;;AAmF5C,eAAe/B,OAAO,CAACM,eAAD,EAAkBD,kBAAlB,CAAP,CAA6CK,cAA7C,CAAf,C,CAGA","sourcesContent":["import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport EditWindow from '../../components/EditWindow/EditWindow';\r\nimport {start_POST_RequestServer, saveDataStore, windowOpen} from '../../store/windowCreateNewData/actions/actionWindowCreateNewData'\r\n\r\n\r\nconst mapDispatchToProps ={\r\n    saveDataStore,\r\n    windowOpen,\r\n    start_POST_RequestServer\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        initialProperties: state.WindowCreateNewData\r\n    }\r\n}\r\n\r\nclass ContEditWindow extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.flag = props.initialProperties.flag;\r\n        this.state = props.initialProperties;\r\n        this.nameWindow = props.initialProperties.nameWindow;\r\n        this.labels = props.initialProperties.labels;\r\n        this.placeholders = props.initialProperties.placeholders;\r\n        this.typeData = props.initialProperties.typeData;\r\n        \r\n        this.saveDataStore = props.saveDataStore;\r\n        this.windowOpen = props.windowOpen;\r\n        this.start_POST_RequestServer = props.start_POST_RequestServer;\r\n\r\n}\r\n\r\n\r\n    \r\nhandlerOnChange = (event, keyName) => {\r\n    let newStateData = this.state.stateData;\r\n    newStateData[keyName] = event.target.value;\r\n    this.setState({stateData: newStateData})\r\n}\r\n\r\nnullStateEndDataStore = ()=>{\r\n    let nullState = {};\r\n    Object.keys(this.state).map((key)=> nullState[key] = '')\r\n    this.setState({...nullState});\r\n    this.saveDataStore({...nullState});\r\n}\r\n\r\nhandlerSave = ()=>{\r\n\r\n    console.log('handlerButtonSave = this.state ', this.state);\r\n    this.saveDataStore(this.state);\r\n    this.start_POST_RequestServer();\r\n    this.nullStateEndDataStore();\r\n\r\n}\r\nhandlerClose =()=>{\r\n    this.windowOpen();\r\n    this.nullStateEndDataStore();\r\n}\r\n\r\n    render(){\r\n    return(\r\n        <React.Fragment>\r\n        {\r\n          this.flag == true\r\n            ?(\r\n            \r\n            <EditWindow \r\n                    nameWindow = {this.state.nameWindow}\r\n        \r\n                    onchange = {this.handlerOnChange}\r\n                    stateData = {this.state.stateData}\r\n                    labels = {this.state.labels}\r\n                    placeholders = {this.state.placeholders}\r\n                    typeData ={this.state.typeData}\r\n        \r\n                    classNameLabel = ''\r\n                    classNameInput = ''\r\n                    classNameTextarea = ''\r\n        \r\n                    nameButtonSave = \"Сохранить\"\r\n                    nameButtonClose = \"Отмена\"\r\n                    onclick1 = {this.handlerSave}\r\n                    onclick2 = {this.handlerClose}\r\n                    classWrapper = \"\"\r\n                    classButtonWrapper = \"\"\r\n                    classButton = \"\"\r\n                    classButtonX = \"\"\r\n            />)\r\n            :(null)\r\n        }\r\n    </React.Fragment>\r\n    )\r\n}\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContEditWindow)\r\n\r\n\r\n//{()=>props.handlerButtonSave(this.state)}"]},"metadata":{},"sourceType":"module"}