{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\components\\\\EditWindow\\\\ComponentEditWindowEltypeClass.js\";\nimport React from 'react';\nimport ButtonLinkSmall from '../../UserInterface/Buttons/Button/ButtonLinkSmall';\nimport Input from '../../UserInterface/Input/Input';\nimport Checkbox from '../../UserInterface/Input/Checkbox';\nimport WindowLinksButtonsConsole from '../../UserInterface/Buttons/WindowLinksButtonsConsole';\n\nfunction ComponentEditWindow_EltypeClass(props) {\n  const stateData = props.stateData;\n  const stateKeys = Object.keys(stateData);\n\n  const checkedInput = data => {\n    console.log('ключ ', data);\n    console.log('значение ', stateData[data]);\n\n    if (stateData[data] === true) {\n      return \"checked\";\n    } else {\n      return \"\";\n    }\n  };\n\n  console.log('stateKeys', stateKeys);\n  console.log(' stateData ', stateData[stateKeys[1]] + ' ' + checkedInput(stateKeys[2]) + ' ' + checkedInput(stateKeys[4]));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.classnameWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: props.classnameWindow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ButtonLinkSmall, {\n    onclick: props.onclickNoButton,\n    onmouseover: props.onmouseover,\n    onmouseleave: props.onmouseleave,\n    to: props.to,\n    tabindex: \"-1\",\n    icon: \"fa fa-times\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, props.nameWindow)), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    data: stateKeys[1],\n    id: stateKeys[1],\n    label: props.labels[1],\n    type: props.typeData[1],\n    placeholder: props.placeholders[1],\n    value: stateData[stateKeys[1]],\n    onchange: props.onchange,\n    tabindex: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    data: stateKeys[2],\n    id: stateKeys[2],\n    label: props.labels[2],\n    type: props.typeData[2],\n    checked: checkedInput(stateKeys[2]),\n    classNameCheckbox: props.classNameCheckbox,\n    onchange: props.onchange,\n    tabindex: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    data: stateKeys[4],\n    id: stateKeys[4],\n    label: props.labels[3],\n    type: props.typeData[3],\n    checked: checkedInput(stateKeys[4]),\n    classNameCheckbox: props.classNameCheckbox,\n    onchange: props.onchange,\n    tabindex: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(WindowLinksButtonsConsole, {\n    nameYesButton: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    onclickYesButton: props.onclickYesButton,\n    nameNoButton: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\",\n    onclickNoButton: props.onclickNoButton,\n    classWrapper: props.classWrapper,\n    classButtonWrapper: props.classButtonWrapper,\n    classButton: props.classButton,\n    to: props.to,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default ComponentEditWindow_EltypeClass;","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/components/EditWindow/ComponentEditWindowEltypeClass.js"],"names":["React","ButtonLinkSmall","Input","Checkbox","WindowLinksButtonsConsole","ComponentEditWindow_EltypeClass","props","stateData","stateKeys","Object","keys","checkedInput","data","console","log","classnameWrapper","classnameWindow","onclickNoButton","onmouseover","onmouseleave","to","nameWindow","labels","typeData","placeholders","onchange","classNameCheckbox","onclickYesButton","classWrapper","classButtonWrapper","classButton"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ButtonLinkSmall from '../../UserInterface/Buttons/Button/ButtonLinkSmall';\r\nimport Input from '../../UserInterface/Input/Input';\r\nimport Checkbox from '../../UserInterface/Input/Checkbox';\r\nimport WindowLinksButtonsConsole from '../../UserInterface/Buttons/WindowLinksButtonsConsole';\r\n\r\nfunction ComponentEditWindow_EltypeClass (props){\r\n    \r\n    const stateData = props.stateData;\r\n    const stateKeys = Object.keys(stateData);\r\n\r\n    const checkedInput = data => {\r\n        console.log('ключ ', data);\r\n        console.log('значение ', stateData[data]);\r\n        if (stateData[data] === true) {\r\n            return \"checked\"\r\n        } else {\r\n            return \"\"\r\n        }\r\n    }\r\n    console.log('stateKeys', stateKeys)\r\n\r\n    console.log(' stateData ', stateData[stateKeys[1]] + ' ' + checkedInput(stateKeys[2]) + ' ' + checkedInput(stateKeys[4]));\r\n    return (\r\n        <div className={props.classnameWrapper}>\r\n            <div className={props.classnameWindow}>\r\n        \r\n                <ButtonLinkSmall\r\n                    onclick={props.onclickNoButton}\r\n                    onmouseover={props.onmouseover}\r\n                    onmouseleave={props.onmouseleave}\r\n                    to={props.to}\r\n                    tabindex=\"-1\"\r\n                    icon=\"fa fa-times\"\r\n                />\r\n        \r\n                <div>\r\n                    <h3>{props.nameWindow}</h3>\r\n                </div>\r\n        \r\n                <form>\r\n                    <Input \r\n                            data = {stateKeys[1]}\r\n                            id = {stateKeys[1]}\r\n                            label = {props.labels[1]}\r\n                            type = {props.typeData[1]}\r\n                            placeholder = {props.placeholders[1]}\r\n                            value = {stateData[stateKeys[1]]}\r\n                            onchange = {props.onchange}\r\n                            tabindex = '2'\r\n                        />\r\n                \r\n                    <Checkbox \r\n                            data = {stateKeys[2]}\r\n                            id = {stateKeys[2]}\r\n                            label = {props.labels[2]}\r\n                            type={props.typeData[2]}\r\n                            checked={checkedInput(stateKeys[2])}\r\n                            classNameCheckbox={props.classNameCheckbox}\r\n                            onchange = {props.onchange}\r\n                            tabindex='3'\r\n                        />\r\n\r\n                    <Checkbox \r\n                            data = {stateKeys[4]}\r\n                            id = {stateKeys[4]}\r\n                            label = {props.labels[3]}\r\n                            type={props.typeData[3]}\r\n                            checked={checkedInput(stateKeys[4])}\r\n                            classNameCheckbox={props.classNameCheckbox}\r\n                            onchange = {props.onchange}\r\n                            tabindex = '4'\r\n                        />\r\n                \r\n                </form>\r\n        \r\n                <WindowLinksButtonsConsole\r\n                            nameYesButton=\"Сохранить\"\r\n                            onclickYesButton={props.onclickYesButton}\r\n                            nameNoButton=\"Отмена\"\r\n                            onclickNoButton={props.onclickNoButton}\r\n                            classWrapper={props.classWrapper}\r\n                            classButtonWrapper={props.classButtonWrapper}\r\n                            classButton={props.classButton}\r\n                            to={props.to}\r\n                    />\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ComponentEditWindow_EltypeClass"]},"metadata":{},"sourceType":"module"}