{"ast":null,"code":"import { TYPE_REQUEST, NAME_WINDOW, CHANGE_SEARCH_KEY } from \"../types\"; //uid: \"\",\n// name: \"\",\n//isDeleted: false,\n//isTemplate: false\n\nconst initialState = {\n  nameWindow: \"\",\n  typeRequest: null,\n  nameСolumnsTableList: [\"name\", \"isDeleted\", \"isTemplate\"],\n  searchСolumnsName: {\n    \"name\": true,\n    \"isDeleted\": false,\n    \"isTemplate\": false\n  },\n  selectionСolumnsName: {\n    \"name\": true,\n    \"isDeleted\": true,\n    \"isTemplate\": true\n  },\n  sortСolumns: {\n    \"name\": true,\n    \"isDeleted\": false,\n    \"isTemplate\": false\n  },\n  searchKey: 'name',\n  labels: ['наименование', 'isDeleted', 'isTemplate'],\n  placeholders: ['наименование', 'isDeleted', 'isTemplate'],\n  typeData: [\"text\", \"checkbox\", \"checkbox\"],\n  typeInput: [\"input\", \"checkbox\", \"checkbox\"]\n};\n\nconst stateInputEditWindowEltypeClass = (state = initialState, action) => {\n  switch (action.type) {\n    case TYPE_REQUEST:\n      return { ...state,\n        typeRequest: action.payload\n      };\n\n    case NAME_WINDOW:\n      return { ...state,\n        nameWindow: action.payload\n      };\n\n    case CHANGE_SEARCH_KEY:\n      return { ...state,\n        searchKey: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default stateInputEditWindowEltypeClass;","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/store/EltypeClass/reducers/reducerEditWindowEltypeClass.js"],"names":["TYPE_REQUEST","NAME_WINDOW","CHANGE_SEARCH_KEY","initialState","nameWindow","typeRequest","nameСolumnsTableList","searchСolumnsName","selectionСolumnsName","sortСolumns","searchKey","labels","placeholders","typeData","typeInput","stateInputEditWindowEltypeClass","state","action","type","payload"],"mappings":"AAAA,SACIA,YADJ,EAEIC,WAFJ,EAGIC,iBAHJ,QAIO,UAJP,C,CAMY;AACA;AACA;AACA;;AAEZ,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,EADK;AAEjBC,EAAAA,WAAW,EAAE,IAFI;AAGjBC,EAAAA,oBAAoB,EAAE,CAClB,MADkB,EAElB,WAFkB,EAGlB,YAHkB,CAHL;AAQjBC,EAAAA,iBAAiB,EAAE;AACf,YAAQ,IADO;AAEf,iBAAa,KAFE;AAGf,kBAAc;AAHC,GARF;AAajBC,EAAAA,oBAAoB,EAAE;AAClB,YAAQ,IADU;AAElB,iBAAa,IAFK;AAGlB,kBAAc;AAHI,GAbL;AAkBjBC,EAAAA,WAAW,EAAE;AACT,YAAQ,IADC;AAET,iBAAa,KAFJ;AAGT,kBAAc;AAHL,GAlBI;AAuBjBC,EAAAA,SAAS,EAAE,MAvBM;AAwBjBC,EAAAA,MAAM,EAAE,CACI,cADJ,EAEI,WAFJ,EAGI,YAHJ,CAxBS;AA6BjBC,EAAAA,YAAY,EAAE,CACF,cADE,EAEF,WAFE,EAGF,YAHE,CA7BG;AAkCjBC,EAAAA,QAAQ,EAAE,CACE,MADF,EAEE,UAFF,EAGE,UAHF,CAlCO;AAuCjBC,EAAAA,SAAS,EAAE,CACC,OADD,EAEC,UAFD,EAGC,UAHD;AAvCM,CAArB;;AA+CA,MAAMC,+BAA+B,GAAG,CAACC,KAAK,GAAGb,YAAT,EAAuBc,MAAvB,KAAkC;AAEtE,UAAQA,MAAM,CAACC,IAAf;AAGI,SAAKlB,YAAL;AACI,aAAO,EACH,GAAGgB,KADA;AAEHX,QAAAA,WAAW,EAAEY,MAAM,CAACE;AAFjB,OAAP;;AAKJ,SAAKlB,WAAL;AACI,aAAO,EACH,GAAGe,KADA;AAEHZ,QAAAA,UAAU,EAAEa,MAAM,CAACE;AAFhB,OAAP;;AAIJ,SAAKjB,iBAAL;AACI,aAAO,EACH,GAAGc,KADA;AAEHN,QAAAA,SAAS,EAAEO,MAAM,CAACE;AAFf,OAAP;;AAKJ;AACI,aAAOH,KAAP;AArBR;AAuBH,CAzBD;;AA0BA,eAAeD,+BAAf","sourcesContent":["import {\r\n    TYPE_REQUEST,\r\n    NAME_WINDOW,\r\n    CHANGE_SEARCH_KEY\r\n} from \"../types\"\r\n\r\n            //uid: \"\",\r\n            // name: \"\",\r\n            //isDeleted: false,\r\n            //isTemplate: false\r\n\r\nconst initialState = {\r\n    nameWindow: \"\",\r\n    typeRequest: null,\r\n    nameСolumnsTableList: [\r\n        \"name\",\r\n        \"isDeleted\",\r\n        \"isTemplate\"\r\n    ],\r\n    searchСolumnsName: {\r\n        \"name\": true,\r\n        \"isDeleted\": false,\r\n        \"isTemplate\": false\r\n    },\r\n    selectionСolumnsName: {\r\n        \"name\": true,\r\n        \"isDeleted\": true,\r\n        \"isTemplate\": true\r\n    },\r\n    sortСolumns: {\r\n        \"name\": true,\r\n        \"isDeleted\": false,\r\n        \"isTemplate\": false\r\n    },\r\n    searchKey: 'name',\r\n    labels: [\r\n                'наименование',\r\n                'isDeleted',\r\n                'isTemplate'\r\n            ],\r\n    placeholders: [\r\n                'наименование',\r\n                'isDeleted',\r\n                'isTemplate'\r\n            ],\r\n    typeData: [\r\n                \"text\",\r\n                \"checkbox\",\r\n                \"checkbox\"\r\n            ],\r\n    typeInput: [\r\n                \"input\",\r\n                \"checkbox\",\r\n                \"checkbox\"\r\n    ],\r\n\r\n};\r\n\r\nconst stateInputEditWindowEltypeClass = (state = initialState, action) => {\r\n    \r\n    switch (action.type){\r\n            \r\n   \r\n        case TYPE_REQUEST:\r\n            return {\r\n                ...state,\r\n                typeRequest: action.payload\r\n            }\r\n    \r\n        case NAME_WINDOW:\r\n            return {\r\n                ...state,\r\n                nameWindow: action.payload\r\n            }\r\n        case CHANGE_SEARCH_KEY:\r\n            return {\r\n                ...state,\r\n                searchKey: action.payload\r\n            }\r\n\r\n        default: \r\n            return state;\r\n    }\r\n}\r\nexport default stateInputEditWindowEltypeClass"]},"metadata":{},"sourceType":"module"}