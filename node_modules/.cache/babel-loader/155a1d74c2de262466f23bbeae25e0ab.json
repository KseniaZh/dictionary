{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\containers\\\\EditWindow\\\\ContEditWindow.js\";\nimport React from 'react';\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport EditWindow from '../../components/EditWindow/EditWindow';\nimport { start_PUT_RequestServer, handlerButtonSave } from '../../store/windowCreateNewData/actions/actionWindowCreateNewData';\n\nfunction ContEditWindow(props) {\n  const stateData = useSelector(state => state.WindowCreateNewData.stateData);\n  const nameWindow = useSelector(state => state.WindowCreateNewData.nameWindow);\n  const labels = useSelector(state => state.WindowCreateNewData.labels);\n  const placeholders = useSelector(state => state.WindowCreateNewData.placeholders);\n  const typeData = useSelector(state => state.WindowCreateNewData.typeData);\n  const dispatch = useDispatch();\n\n  const handlerSave = () => console.log(\"handlerSave\");\n\n  return /*#__PURE__*/React.createElement(EditWindow, {\n    nameWindow: nameWindow,\n    onchange: () => {\n      dispatch(handlerButtonSave());\n    },\n    stateData: stateData,\n    labels: labels,\n    placeholders: placeholders,\n    typeData: typeData,\n    classNameLabel: \"\",\n    classNameInput: \"\",\n    classNameTextarea: \"\",\n    nameButtonSave: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    nameButtonClose: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\",\n    onclick1: handlerSave,\n    onclick2: handlerSave,\n    classWrapper: \"\",\n    classButtonWrapper: \"\",\n    classButton: \"\",\n    classButtonX: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  });\n}\n\nexport default connect()(ContEditWindow); //                    onclick2 = {()=>{dispatch(fff())}}\n//{()=>props.handlerButtonSave(this.state)}","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/containers/EditWindow/ContEditWindow.js"],"names":["React","connect","useDispatch","useSelector","EditWindow","start_PUT_RequestServer","handlerButtonSave","ContEditWindow","props","stateData","state","WindowCreateNewData","nameWindow","labels","placeholders","typeData","dispatch","handlerSave","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,WAA/B,QAAkD,aAAlD;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,SAAQC,uBAAR,EAAiCC,iBAAjC,QAAyD,mEAAzD;;AAGA,SAASC,cAAT,CAAyBC,KAAzB,EAA+B;AAC/B,QAAMC,SAAS,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,mBAAN,CAA0BF,SAApC,CAA7B;AACA,QAAMG,UAAU,GAAGT,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,mBAAN,CAA0BC,UAApC,CAA9B;AACA,QAAMC,MAAM,GAAGV,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,mBAAN,CAA0BE,MAApC,CAA1B;AACA,QAAMC,YAAY,GAAGX,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,mBAAN,CAA0BG,YAApC,CAAhC;AACA,QAAMC,QAAQ,GAAGZ,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,mBAAN,CAA0BI,QAApC,CAA5B;AAEA,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;;AAEA,QAAMe,WAAW,GAAG,MAAIC,OAAO,CAACC,GAAR,CAAY,aAAZ,CAAxB;;AAEI,sBACI,oBAAC,UAAD;AACY,IAAA,UAAU,EAAIP,UAD1B;AAGY,IAAA,QAAQ,EAAI,MAAI;AAACI,MAAAA,QAAQ,CAACV,iBAAiB,EAAlB,CAAR;AAA8B,KAH3D;AAIY,IAAA,SAAS,EAAIG,SAJzB;AAKY,IAAA,MAAM,EAAII,MALtB;AAMY,IAAA,YAAY,EAAIC,YAN5B;AAOY,IAAA,QAAQ,EAAGC,QAPvB;AASY,IAAA,cAAc,EAAG,EAT7B;AAUY,IAAA,cAAc,EAAG,EAV7B;AAWY,IAAA,iBAAiB,EAAG,EAXhC;AAaY,IAAA,cAAc,EAAG,wDAb7B;AAcY,IAAA,eAAe,EAAG,sCAd9B;AAeY,IAAA,QAAQ,EAAIE,WAfxB;AAgBY,IAAA,QAAQ,EAAIA,WAhBxB;AAiBY,IAAA,YAAY,EAAG,EAjB3B;AAkBY,IAAA,kBAAkB,EAAG,EAlBjC;AAmBY,IAAA,WAAW,EAAG,EAnB1B;AAoBY,IAAA,YAAY,EAAG,EApB3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAwBH;;AAID,eAAehB,OAAO,GAAGM,cAAH,CAAtB,C,CACA;AAEA","sourcesContent":["import React from 'react';\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport EditWindow from '../../components/EditWindow/EditWindow';\r\nimport {start_PUT_RequestServer, handlerButtonSave} from '../../store/windowCreateNewData/actions/actionWindowCreateNewData'\r\n\r\n\r\nfunction ContEditWindow (props){\r\nconst stateData = useSelector(state => state.WindowCreateNewData.stateData);\r\nconst nameWindow = useSelector(state => state.WindowCreateNewData.nameWindow);\r\nconst labels = useSelector(state => state.WindowCreateNewData.labels);\r\nconst placeholders = useSelector(state => state.WindowCreateNewData.placeholders);\r\nconst typeData = useSelector(state => state.WindowCreateNewData.typeData);\r\n    \r\nconst dispatch = useDispatch();\r\n    \r\nconst handlerSave = ()=>console.log(\"handlerSave\")\r\n\r\n    return(\r\n        <EditWindow \r\n                    nameWindow = {nameWindow}\r\n        \r\n                    onchange = {()=>{dispatch(handlerButtonSave())}}\r\n                    stateData = {stateData}\r\n                    labels = {labels}\r\n                    placeholders = {placeholders}\r\n                    typeData ={typeData}\r\n        \r\n                    classNameLabel = ''\r\n                    classNameInput = ''\r\n                    classNameTextarea = ''\r\n        \r\n                    nameButtonSave = \"Сохранить\"\r\n                    nameButtonClose = \"Отмена\"\r\n                    onclick1 = {handlerSave}\r\n                    onclick2 = {handlerSave}\r\n                    classWrapper = \"\"\r\n                    classButtonWrapper = \"\"\r\n                    classButton = \"\"\r\n                    classButtonX = \"\"\r\n            />\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default connect()(ContEditWindow)\r\n//                    onclick2 = {()=>{dispatch(fff())}}\r\n\r\n//{()=>props.handlerButtonSave(this.state)}"]},"metadata":{},"sourceType":"module"}