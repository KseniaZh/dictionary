{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\components\\\\Table\\\\ConsoleCountRow.js\";\nimport React, { useState } from 'react';\nimport ButtonSmall from '../../UserInterface/Buttons/Button/ButtonSmall';\nimport Button from '../../UserInterface/Buttons/Button/Button';\nimport Input from '../../UserInterface/Input/Input';\n\nfunction ConsoleCountRow(props) {\n  const fullArrNumberPages = [];\n\n  for (let i = 0; i < props.counterPages; i++) {\n    fullArrNumberPages[i] = i + 1;\n  }\n\n  ;\n  const activArrNumberPages = fullArrNumberPages.filter(num => num == props.numberActivList || num == props.numberActivList - 1 || num == props.numberActivList + 1);\n  const [activNumberPages, setActivNumberPages] = useState(activArrNumberPages);\n  console.log('МАССИВ АКТИВНЫХ КНОПОК ', activNumberPages);\n\n  const hendlerStartButtonConsole = () => {};\n\n  const hendlerFinishButtonConsole = () => {};\n\n  const hendlerPrevButton = () => {};\n\n  const hendlerNextButton = () => {};\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.classname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"\\u041E\\u0442\\u043A\\u0440\\u044B\\u0442\\u0430 \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, props.numberActivList), \" \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430 \\u0438\\u0437 \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 74\n    }\n  }, fullArrNumberPages.length)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, fullArrNumberPages.length > 3 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    onclick: hendlerStartButtonConsole,\n    tabindex: \"-1\",\n    icon: \"fa fa-step-backward\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onclick: hendlerPrevButton,\n    tabindex: \"-1\",\n    icon: \"fa fa-caret-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  })) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 27\n    }\n  }, \"ghbdtn\"), fullArrNumberPages.map((num, index) => {\n    if (num == props.numberActivList || num == props.numberActivList - 1 || num == props.numberActivList + 1) {\n      return /*#__PURE__*/React.createElement(Button, {\n        onclick: props.onclick,\n        tabindex: \"-1\",\n        name: num,\n        data: num,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 40\n        }\n      });\n    } else {\n      return null;\n    }\n  }), fullArrNumberPages.length > 3 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    onclick: hendlerNextButton,\n    tabindex: \"-1\",\n    icon: \"fa fa-caret-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onclick: hendlerFinishButtonConsole,\n    tabindex: \"-1\",\n    icon: \"fa fa-step-forward\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  })) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 27\n    }\n  }, \"ghbdtn\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, props.flagCountRow ? /*#__PURE__*/React.createElement(Input, {\n    id: \"inputCountRow\",\n    type: \"number\",\n    label: \"\\u0421\\u0442\\u0440\\u043E\\u043A \\u043D\\u0430 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0435 : \",\n    onchange: props.onchange,\n    value: props.CountRow,\n    tabindex: \"-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 27\n    }\n  }, \" \\u0421\\u0442\\u0440\\u043E\\u043A \\u043D\\u0430 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0435 : \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 53\n    }\n  }, \" \", props.CountRow, \" \"))), props.flagCountRow ? /*#__PURE__*/React.createElement(ButtonSmall, {\n    className: props.classnameButtonConsoleCountRow,\n    onclick: props.onclickInputSave,\n    tabindex: \"-1\",\n    icon: \"fa fa-floppy-o\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(ButtonSmall, {\n    className: props.classnameButtonConsoleCountRow,\n    onclick: props.onclickInputOpen,\n    tabindex: \"-1\",\n    icon: \"fa fa-pencil\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 22\n    }\n  }));\n}\n\nexport default ConsoleCountRow;","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/components/Table/ConsoleCountRow.js"],"names":["React","useState","ButtonSmall","Button","Input","ConsoleCountRow","props","fullArrNumberPages","i","counterPages","activArrNumberPages","filter","num","numberActivList","activNumberPages","setActivNumberPages","console","log","hendlerStartButtonConsole","hendlerFinishButtonConsole","hendlerPrevButton","hendlerNextButton","classname","length","map","index","onclick","flagCountRow","onchange","CountRow","classnameButtonConsoleCountRow","onclickInputSave","onclickInputOpen"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\nimport ButtonSmall from '../../UserInterface/Buttons/Button/ButtonSmall';\r\nimport Button from '../../UserInterface/Buttons/Button/Button';\r\nimport Input from '../../UserInterface/Input/Input';\r\n\r\n\r\nfunction ConsoleCountRow(props) {\r\n\r\n\r\n\r\n    const fullArrNumberPages = [];\r\n\r\n    for (let i = 0; i < props.counterPages; i++) {\r\n        fullArrNumberPages[i] = i + 1;\r\n    };\r\n \r\n    const activArrNumberPages = fullArrNumberPages.filter(num => (num == props.numberActivList || num == (props.numberActivList - 1) || num == (props.numberActivList + 1)));\r\n\r\n    const [activNumberPages, setActivNumberPages] = useState(activArrNumberPages);\r\n\r\n    console.log('МАССИВ АКТИВНЫХ КНОПОК ', activNumberPages);\r\n\r\n    const hendlerStartButtonConsole = () => {\r\n\r\n    }\r\n\r\n    const hendlerFinishButtonConsole = () => {\r\n\r\n    }\r\n    const hendlerPrevButton = () => {\r\n\r\n    }\r\n    const hendlerNextButton = () => {\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={props.classname}>\r\n\r\n            <div>\r\n                Открыта <span>{props.numberActivList}</span> страница из <span>{fullArrNumberPages.length}</span>\r\n            </div>\r\n\r\n            <div>\r\n                {\r\n                    fullArrNumberPages.length > 3 ?\r\n                        <>\r\n                            <Button\r\n                                onclick={hendlerStartButtonConsole}\r\n                                tabindex='-1'\r\n                                icon=\"fa fa-step-backward\" \r\n\r\n                            />\r\n                            <Button\r\n                                onclick={hendlerPrevButton}\r\n                                tabindex='-1'\r\n                                icon=\"fa fa-caret-left\"\r\n\r\n                            />\r\n                        </>\r\n                        : <p>ghbdtn</p>\r\n                }\r\n                {\r\n                    fullArrNumberPages.map((num, index) => {\r\n                        if (num == props.numberActivList || num == (props.numberActivList - 1) || num == (props.numberActivList + 1)){\r\n                                return <Button\r\n                                            onclick={props.onclick}\r\n                                            tabindex='-1'\r\n                                            name={num}\r\n                                            data={num}\r\n                                            key={index}\r\n                                        />\r\n                        } else {\r\n                                 return null\r\n                        }\r\n\r\n                    })\r\n                }\r\n                {\r\n                    fullArrNumberPages.length > 3 ?\r\n                        <>\r\n                            <Button\r\n                                onclick={hendlerNextButton}\r\n                                tabindex='-1'\r\n                                icon=\"fa fa-caret-right\"\r\n\r\n                            />\r\n                            <Button\r\n                                onclick={hendlerFinishButtonConsole}\r\n                                tabindex='-1'\r\n                                icon=\"fa fa-step-forward\"\r\n\r\n                            />\r\n                        </>\r\n                        : <p>ghbdtn</p>\r\n                }\r\n            </div>\r\n            \r\n               \r\n            <div>\r\n                {\r\n                    props.flagCountRow ?\r\n                        <Input\r\n                            id=\"inputCountRow\"\r\n                            type=\"number\"\r\n                            label=\"Строк на странице : \"\r\n                            onchange={props.onchange}\r\n                            value={props.CountRow}\r\n                            tabindex=\"-1\"\r\n                        />\r\n                        : <div> Строк на странице : <span> {props.CountRow} </span></div>\r\n                }\r\n            </div>\r\n            {\r\n                props.flagCountRow ?\r\n                    <ButtonSmall\r\n                        className={props.classnameButtonConsoleCountRow}\r\n                        onclick={props.onclickInputSave}\r\n                        tabindex='-1'\r\n                        icon=\"fa fa-floppy-o\"\r\n                    />\r\n                    :<ButtonSmall\r\n                        className={props.classnameButtonConsoleCountRow}\r\n                        onclick={props.onclickInputOpen}\r\n                        tabindex='-1'\r\n                        icon=\"fa fa-pencil\"\r\n                    />\r\n             }\r\n\r\n           \r\n\r\n            \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ConsoleCountRow"]},"metadata":{},"sourceType":"module"}