{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\containers\\\\Navigation\\\\Header.js\";\nimport React, { useState } from 'react';\nimport { connect, useDispatch } from \"react-redux\";\nimport ButtonLinkNavigation from '../../UserInterface/Buttons/Button/ButtonLinkNavigation';\nimport NavigationWindowBlind from '../../UserInterface/Navigation/NavigationWindowBlind';\nimport NavigationToggle from '../../UserInterface/Navigation/NavigationToggle';\nimport { startGetRequestServer } from '../../store/serverViewType/actions/actionViewType'; //import iceBaikal from '../../image/iceBaikal.jpg';\n//import { NavLink } from 'react-router-dom';\n\nimport \"../../styles/Navigation.scss\";\nimport '../../styles/NavigationToggle.scss';\nimport '../../styles/NavigationWindowBlind.scss';\nimport { aboutLinks } from \"../../constans/aboutLinks\";\n\nfunction Header() {\n  const dispatch = useDispatch();\n  const [isOpen, setIsOpen] = useState(false);\n  const navStyle = [\"Navigation\"];\n\n  if (!isOpen) {\n    navStyle.push(\"close\");\n  }\n\n  ;\n\n  const hendlerToggleNavigation = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const hendlerCloseNavigation = () => {\n    setIsOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    className: navStyle.join(' '),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ButtonLinkNavigation, {\n    to: \"/\",\n    name: \"Home\",\n    onclick: hendlerCloseNavigation,\n    classname: \"NavigationButtonLink\",\n    tabIndex: \"1\",\n    aboutLink: aboutLinks[0],\n    classnameLinkAbout: \"navigationLinkAbout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ButtonLinkNavigation, {\n    to: \"/ViewType\",\n    name: \"ViewType\",\n    onclick: hendlerCloseNavigation,\n    classname: \"NavigationButtonLink\",\n    tabIndex: \"2\",\n    aboutLink: aboutLinks[1],\n    classnameLinkAbout: \"navigationLinkAbout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ButtonLinkNavigation, {\n    to: \"/EltypeClass\",\n    name: \"EltypeClass\",\n    onclick: hendlerCloseNavigation,\n    classname: \"NavigationButtonLink\",\n    tabIndex: \"3\",\n    aboutLink: aboutLinks[2],\n    classnameLinkAbout: \"navigationLinkAbout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  })), isOpen ? /*#__PURE__*/React.createElement(NavigationWindowBlind, {\n    isOpen: isOpen,\n    onClick: hendlerCloseNavigation,\n    classname: \"NavigationWindowBlind\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }) : null, /*#__PURE__*/React.createElement(NavigationToggle, {\n    openNavigation: hendlerToggleNavigation,\n    isOpen: isOpen,\n    classname: \"NavigationToggle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default connect()(Header); //{ this.props.isOpen ? <WindowBlind onClick={this.props.onClose} /> : null }","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/containers/Navigation/Header.js"],"names":["React","useState","connect","useDispatch","ButtonLinkNavigation","NavigationWindowBlind","NavigationToggle","startGetRequestServer","aboutLinks","Header","dispatch","isOpen","setIsOpen","navStyle","push","hendlerToggleNavigation","hendlerCloseNavigation","join"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,OAAOC,oBAAP,MAAiC,yDAAjC;AACA,OAAOC,qBAAP,MAAkC,sDAAlC;AAEA,OAAOC,gBAAP,MAA6B,iDAA7B;AACA,SAASC,qBAAT,QAAsC,mDAAtC,C,CACA;AACA;;AAEA,OAAO,8BAAP;AACA,OAAO,oCAAP;AACA,OAAO,yCAAP;AACA,SAASC,UAAT,QAA2B,2BAA3B;;AAGA,SAASC,MAAT,GAAkB;AAEd,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,KAAD,CAApC;AAEA,QAAMY,QAAQ,GAAG,CAAC,YAAD,CAAjB;;AACA,MAAI,CAACF,MAAL,EAAa;AACTE,IAAAA,QAAQ,CAACC,IAAT,CAAc,OAAd;AACH;;AAAA;;AAGD,QAAMC,uBAAuB,GAAG,MAAM;AAClCH,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACH,GAFD;;AAGA,QAAMK,sBAAsB,GAAG,MAAM;AACjCJ,IAAAA,SAAS,CAAC,KAAD,CAAT;AACH,GAFD;;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEC,QAAQ,CAACI,IAAT,CAAc,GAAd,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,oBAAD;AACQ,IAAA,EAAE,EAAC,GADX;AAEQ,IAAA,IAAI,EAAC,MAFb;AAGQ,IAAA,OAAO,EAAED,sBAHjB;AAIQ,IAAA,SAAS,EAAC,sBAJlB;AAKQ,IAAA,QAAQ,EAAC,GALjB;AAMQ,IAAA,SAAS,EAAER,UAAU,CAAC,CAAD,CAN7B;AAOQ,IAAA,kBAAkB,EAAC,qBAP3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAWI,oBAAC,oBAAD;AACQ,IAAA,EAAE,EAAC,WADX;AAEQ,IAAA,IAAI,EAAC,UAFb;AAGQ,IAAA,OAAO,EAAEQ,sBAHjB;AAIQ,IAAA,SAAS,EAAC,sBAJlB;AAKQ,IAAA,QAAQ,EAAC,GALjB;AAMQ,IAAA,SAAS,EAAER,UAAU,CAAC,CAAD,CAN7B;AAOQ,IAAA,kBAAkB,EAAC,qBAP3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,eAoBI,oBAAC,oBAAD;AACQ,IAAA,EAAE,EAAC,cADX;AAEQ,IAAA,IAAI,EAAC,aAFb;AAGQ,IAAA,OAAO,EAAEQ,sBAHjB;AAIQ,IAAA,SAAS,EAAC,sBAJlB;AAKQ,IAAA,QAAQ,EAAC,GALjB;AAMQ,IAAA,SAAS,EAAER,UAAU,CAAC,CAAD,CAN7B;AAOQ,IAAA,kBAAkB,EAAC,qBAP3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBJ,CADJ,EAkCQG,MAAM,gBACF,oBAAC,qBAAD;AACI,IAAA,MAAM,EAAEA,MADZ;AAEI,IAAA,OAAO,EAAEK,sBAFb;AAGI,IAAA,SAAS,EAAC,uBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADE,GAMA,IAxCd,eA2CI,oBAAC,gBAAD;AACI,IAAA,cAAc,EAAED,uBADpB;AAEI,IAAA,MAAM,EAAEJ,MAFZ;AAGI,IAAA,SAAS,EAAC,kBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3CJ,CADJ;AAoDH;;AACD,eAAeT,OAAO,GAAGO,MAAH,CAAtB,C,CAEA","sourcesContent":["import React, { useState} from 'react';\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport ButtonLinkNavigation from '../../UserInterface/Buttons/Button/ButtonLinkNavigation';\r\nimport NavigationWindowBlind from '../../UserInterface/Navigation/NavigationWindowBlind';\r\n\r\nimport NavigationToggle from '../../UserInterface/Navigation/NavigationToggle';\r\nimport { startGetRequestServer } from '../../store/serverViewType/actions/actionViewType';\r\n//import iceBaikal from '../../image/iceBaikal.jpg';\r\n//import { NavLink } from 'react-router-dom';\r\n\r\nimport \"../../styles/Navigation.scss\";\r\nimport '../../styles/NavigationToggle.scss';\r\nimport '../../styles/NavigationWindowBlind.scss';\r\nimport { aboutLinks } from \"../../constans/aboutLinks\";\r\n\r\n\r\nfunction Header() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const navStyle = [\"Navigation\"];\r\n    if (!isOpen) {\r\n        navStyle.push(\"close\");\r\n    };\r\n\r\n\r\n    const hendlerToggleNavigation = () => {\r\n        setIsOpen(!isOpen);\r\n    }\r\n    const hendlerCloseNavigation = () => {\r\n        setIsOpen(false);\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <nav className={navStyle.join(' ')}>\r\n \r\n                <ButtonLinkNavigation\r\n                        to='/'\r\n                        name='Home'\r\n                        onclick={hendlerCloseNavigation}\r\n                        classname='NavigationButtonLink'\r\n                        tabIndex='1'\r\n                        aboutLink={aboutLinks[0]}\r\n                        classnameLinkAbout=\"navigationLinkAbout\"\r\n                    />\r\n                <ButtonLinkNavigation\r\n                        to='/ViewType'\r\n                        name='ViewType'\r\n                        onclick={hendlerCloseNavigation}\r\n                        classname='NavigationButtonLink'\r\n                        tabIndex='2'\r\n                        aboutLink={aboutLinks[1]}\r\n                        classnameLinkAbout=\"navigationLinkAbout\"\r\n                    />\r\n                <ButtonLinkNavigation\r\n                        to='/EltypeClass'\r\n                        name='EltypeClass'\r\n                        onclick={hendlerCloseNavigation}\r\n                        classname='NavigationButtonLink'\r\n                        tabIndex='3'\r\n                        aboutLink={aboutLinks[2]}\r\n                        classnameLinkAbout=\"navigationLinkAbout\"\r\n                 />\r\n\r\n            </nav>\r\n\r\n            {\r\n                isOpen ?\r\n                    <NavigationWindowBlind\r\n                        isOpen={isOpen}\r\n                        onClick={hendlerCloseNavigation}\r\n                        classname=\"NavigationWindowBlind\"\r\n                    />\r\n                    : null\r\n            }\r\n            \r\n            <NavigationToggle\r\n                openNavigation={hendlerToggleNavigation}\r\n                isOpen={isOpen}\r\n                classname='NavigationToggle'\r\n            />\r\n\r\n        </header>\r\n    )\r\n}\r\nexport default connect()(Header)\r\n\r\n//{ this.props.isOpen ? <WindowBlind onClick={this.props.onClose} /> : null }"]},"metadata":{},"sourceType":"module"}