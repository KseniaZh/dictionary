{"ast":null,"code":"import { takeEvery, select, put, call } from 'redux-saga/effects';\nimport { saveDataAuthorization } from '../../store/Authorization/actionsAuthorization';\nimport fetchData from '../../functions/fetchData';\nimport { START_SAGAS_AUTH_POST_REQUEST } from '../../store/Authorization/types';\nexport function* workerStart_Authorization_POST_RequestServer() {\n  const url = yield select(state => state.stateUrl.url_User_POST);\n  const stateAuthorization = yield select(state => state.stateAuthorization.user);\n\n  try {\n    delete stateAuthorization.uid;\n    const data = yield call(fetchData, url, 'POST', stateAuthorization);\n    yield put(saveDataAuthorization(data));\n  } catch (error) {\n    console.log('workerStartRequestServer error ', error);\n  }\n}\nexport function* watch_Authorization_POST_RequestServer() {\n  yield takeEvery(START_SAGAS_AUTH_POST_REQUEST, workerStart_Authorization_POST_RequestServer);\n}","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/sagas/Authorization/sagas_POST_Authorization.js"],"names":["takeEvery","select","put","call","saveDataAuthorization","fetchData","START_SAGAS_AUTH_POST_REQUEST","workerStart_Authorization_POST_RequestServer","url","state","stateUrl","url_User_POST","stateAuthorization","user","uid","data","error","console","log","watch_Authorization_POST_RequestServer"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,GAA5B,EAAiCC,IAAjC,QAA6C,oBAA7C;AACA,SAASC,qBAAT,QAAsC,gDAAtC;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,6BAAT,QAA8C,iCAA9C;AAEA,OAAO,UAAUC,4CAAV,GAAwD;AAE3D,QAAMC,GAAG,GAAG,MAAMP,MAAM,CAACQ,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeC,aAAzB,CAAxB;AAEA,QAAMC,kBAAkB,GAAG,MAAMX,MAAM,CAACQ,KAAK,IAAIA,KAAK,CAACG,kBAAN,CAAyBC,IAAnC,CAAvC;;AAEA,MAAI;AACA,WAAOD,kBAAkB,CAACE,GAA1B;AAEA,UAAMC,IAAI,GAAG,MAAMZ,IAAI,CAACE,SAAD,EAAYG,GAAZ,EAAiB,MAAjB,EAAyBI,kBAAzB,CAAvB;AAEA,UAAMV,GAAG,CAACE,qBAAqB,CAACW,IAAD,CAAtB,CAAT;AAEH,GAPD,CAOE,OAAOC,KAAP,EAAc;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CF,KAA/C;AACF;AACJ;AAED,OAAO,UAAUG,sCAAV,GAAkD;AAErD,QAAMnB,SAAS,CAACM,6BAAD,EAAgCC,4CAAhC,CAAf;AAEH","sourcesContent":["import { takeEvery, select, put, call } from 'redux-saga/effects';\r\nimport { saveDataAuthorization } from '../../store/Authorization/actionsAuthorization';\r\nimport fetchData from '../../functions/fetchData';\r\nimport { START_SAGAS_AUTH_POST_REQUEST } from '../../store/Authorization/types';\r\n\r\nexport function* workerStart_Authorization_POST_RequestServer(){\r\n\r\n    const url = yield select(state => state.stateUrl.url_User_POST);\r\n\r\n    const stateAuthorization = yield select(state => state.stateAuthorization.user);\r\n    \r\n    try {\r\n        delete stateAuthorization.uid;\r\n\r\n        const data = yield call(fetchData, url, 'POST', stateAuthorization);\r\n        \r\n        yield put(saveDataAuthorization(data));\r\n         \r\n    } catch (error) {\r\n       console.log('workerStartRequestServer error ', error);\r\n    }\r\n}\r\n\r\nexport function* watch_Authorization_POST_RequestServer(){\r\n\r\n    yield takeEvery(START_SAGAS_AUTH_POST_REQUEST, workerStart_Authorization_POST_RequestServer)\r\n\r\n}"]},"metadata":{},"sourceType":"module"}