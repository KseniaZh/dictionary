{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\hoc\\\\withContextMenuWindow.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { focusRowColorBackground } from '../functions/focusRowColorBackground';\n\nconst mapStateToProps = state => {\n  return {\n    focusData: state.createDataEltypeClass.stateData\n  };\n};\n\nconst withContextMenuWindow = (Component, ComponentContextMenuWindow, stateCharacteristic, classname) => {\n  // �������� ��������� � ��������� � ����������, ������ ����� �������� ��������� �� ���������� � �� ���������\n  class ComponentWithDescription extends React.Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        isOpen: false,\n        clientX: '',\n        clientY: ''\n      };\n\n      this.openContextMenu = event => {\n        if (event.defaultPrevented) return;\n        event.preventDefault();\n\n        if (event.target.tagName === 'TD') {\n          this.setState({\n            isOpen: true,\n            clientX: event.clientX,\n            clientY: event.clientY\n          });\n          focusRowColorBackground(this.props.focusData);\n        }\n\n        ;\n      };\n\n      this.closeContextMenu = event => {\n        if (event.defaultPrevented) return;\n        event.preventDefault();\n        this.setState({\n          isOpen: false,\n          clientX: '',\n          clientY: ''\n        });\n      };\n    }\n\n    componentDidMount() {\n      let tablebody = document.querySelector('tbody');\n      tablebody.addEventListener(\"contextmenu\", this.openContextMenu);\n      document.addEventListener(\"click\", this.closeContextMenu);\n      document.addEventListener(\"scroll\", this.closeContextMenu);\n    }\n\n    componentWillUnmount() {\n      let tablebody = document.querySelector('tbody');\n      tablebody.removeEventListener(\"contextmenu\", this.openContextMenu);\n      document.removeEventListener(\"click\", this.closeContextMenu);\n      document.removeEventListener(\"scroll\", this.closeContextMenu);\n    }\n\n    render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Component, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }\n      }), this.state.isOpen ? /*#__PURE__*/React.createElement(ComponentContextMenuWindow, {\n        stateCharacteristic: stateCharacteristic,\n        classname: classname,\n        clientX: this.state.clientX,\n        clientY: this.state.clientY,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }\n      }) : null);\n    }\n\n  }\n\n  return connect(mapStateToProps)(ComponentWithDescription);\n};\n\nexport default withContextMenuWindow;","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/hoc/withContextMenuWindow.js"],"names":["React","connect","focusRowColorBackground","mapStateToProps","state","focusData","createDataEltypeClass","stateData","withContextMenuWindow","Component","ComponentContextMenuWindow","stateCharacteristic","classname","ComponentWithDescription","isOpen","clientX","clientY","openContextMenu","event","defaultPrevented","preventDefault","target","tagName","setState","props","closeContextMenu","componentDidMount","tablebody","document","querySelector","addEventListener","componentWillUnmount","removeEventListener","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { focusRowColorBackground } from '../functions/focusRowColorBackground';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        focusData: state.createDataEltypeClass.stateData,\r\n    }\r\n}\r\n\r\nconst withContextMenuWindow = (Component, ComponentContextMenuWindow, stateCharacteristic, classname) => {\r\n// �������� ��������� � ��������� � ����������, ������ ����� �������� ��������� �� ���������� � �� ���������\r\n\r\n    class ComponentWithDescription extends React.Component {\r\n\r\n       state = {\r\n                   isOpen: false,\r\n                   clientX: '',\r\n                   clientY: ''\r\n       }; // ��������� ��������� �������� � �������������� ��� ������� ���������� ����, � ����������� � ������ ��������\r\n        openContextMenu = (event) => {\r\n                        if (event.defaultPrevented) return;\r\n                        event.preventDefault();\r\n                        if (event.target.tagName === 'TD') {\r\n                            this.setState({\r\n                                            isOpen: true,\r\n                                            clientX: event.clientX,\r\n                                            clientY: event.clientY\r\n                            });\r\n                            focusRowColorBackground(this.props.focusData);\r\n\r\n                            };\r\n            }\r\n        closeContextMenu = (event) => {\r\n                        if (event.defaultPrevented) return;\r\n                        event.preventDefault();\r\n                            this.setState({\r\n                                isOpen: false,\r\n                                clientX: '',\r\n                                clientY: ''\r\n                            });\r\n            }\r\n        componentDidMount() {\r\n            let tablebody = document.querySelector('tbody');\r\n            tablebody.addEventListener(\"contextmenu\", this.openContextMenu);\r\n            document.addEventListener(\"click\", this.closeContextMenu);\r\n            document.addEventListener(\"scroll\", this.closeContextMenu);\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            let tablebody = document.querySelector('tbody');\r\n            tablebody.removeEventListener(\"contextmenu\", this.openContextMenu);\r\n            document.removeEventListener(\"click\", this.closeContextMenu);\r\n            document.removeEventListener(\"scroll\", this.closeContextMenu);\r\n        }\r\n       render() {  \r\n            return(\r\n                <>\r\n                    <Component />\r\n                    {\r\n                        this.state.isOpen ?\r\n                            <ComponentContextMenuWindow\r\n                                   stateCharacteristic={stateCharacteristic}\r\n                                   classname={classname}\r\n                                   clientX={this.state.clientX}\r\n                                   clientY={this.state.clientY}\r\n                               />\r\n                           : null\r\n                   }\r\n               </> \r\n                )\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps)(ComponentWithDescription)\r\n}\r\n\r\nexport default withContextMenuWindow"]},"metadata":{},"sourceType":"module"}