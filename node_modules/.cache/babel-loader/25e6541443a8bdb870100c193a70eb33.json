{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\hoc\\\\withClickSaveFocusRow.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { saveDataStore } from '../store/EltypeClass/actions/actionEltypeClass';\nimport { focusRowColorBackground } from '../functions/focusRowColorBackground';\n\nconst mapStateToProps = state => {\n  return {\n    focusData: state.createDataEltypeClass.stateData //что хранится в фокусе\n\n  };\n};\n\nconst mapDispatchToProps = {\n  saveDataStore\n};\n\nconst withClickSaveFocusRow = (Component, base) => {\n  class ComponentWithClickSaveFocus extends React.Component {\n    constructor(...args) {\n      super(...args);\n\n      this.handlerTableRowUID = (event, data) => {\n        //фокус на строку\n        event.preventDefault();\n\n        if (event.target.parentElement.tagName === 'TR' || event.target.parentElement.tagName === 'TD' || event.target.parentElement.tagName === 'DIV') {\n          base.map((obj, index) => {\n            if (obj.uid === data) {\n              this.props.saveDataStore(obj); // сохранить в хранилище для изменений\n\n              const tablebody = document.querySelector('tbody');\n\n              for (let child of tablebody.children) {\n                child.style.background = allRowColorBackground; //убираем цвет ранее выбранной строки\n\n                if (child.children[1].innerHTML !== undefined && child.children[1].innerHTML === obj.name) {\n                  child.style.background = colorFocusRowBackground; //выделяем цветом строку фокуса\n                }\n\n                ;\n              }\n\n              ;\n            }\n\n            ;\n          });\n        }\n\n        ;\n      };\n    }\n\n    render() {\n      let props = { ...this.props,\n        onclick: this.handlerTableRowUID\n      };\n      return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }));\n    }\n\n  }\n\n  return connect(mapStateToProps, mapDispatchToProps)(ComponentWithClickSaveFocus);\n};\n\nexport default withClickSaveFocusRow;","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/hoc/withClickSaveFocusRow.js"],"names":["React","connect","saveDataStore","focusRowColorBackground","mapStateToProps","state","focusData","createDataEltypeClass","stateData","mapDispatchToProps","withClickSaveFocusRow","Component","base","ComponentWithClickSaveFocus","handlerTableRowUID","event","data","preventDefault","target","parentElement","tagName","map","obj","index","uid","props","tablebody","document","querySelector","child","children","style","background","allRowColorBackground","innerHTML","undefined","name","colorFocusRowBackground","render","onclick"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,gDAA9B;AAEA,SAASC,uBAAT,QAAwC,sCAAxC;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,SAAS,EAAED,KAAK,CAACE,qBAAN,CAA4BC,SADpC,CAC+C;;AAD/C,GAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAG;AACvBP,EAAAA;AADuB,CAA3B;;AAKA,MAAMQ,qBAAqB,GAAG,CAACC,SAAD,EAAYC,IAAZ,KAAqB;AAI/C,QAAMC,2BAAN,SAA0Cb,KAAK,CAACW,SAAhD,CAA0D;AAAA;AAAA;;AAAA,WAEtDG,kBAFsD,GAEjC,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAAE;AACpCD,QAAAA,KAAK,CAACE,cAAN;;AACA,YAAIF,KAAK,CAACG,MAAN,CAAaC,aAAb,CAA2BC,OAA3B,KAAuC,IAAvC,IAA+CL,KAAK,CAACG,MAAN,CAAaC,aAAb,CAA2BC,OAA3B,KAAuC,IAAtF,IAA8FL,KAAK,CAACG,MAAN,CAAaC,aAAb,CAA2BC,OAA3B,KAAuC,KAAzI,EAAgJ;AAK5IR,UAAAA,IAAI,CAACS,GAAL,CAAS,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACrB,gBAAID,GAAG,CAACE,GAAJ,KAAYR,IAAhB,EAAsB;AAClB,mBAAKS,KAAL,CAAWvB,aAAX,CAAyBoB,GAAzB,EADkB,CACa;;AAC/B,oBAAMI,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAlB;;AACA,mBAAK,IAAIC,KAAT,IAAkBH,SAAS,CAACI,QAA5B,EAAsC;AAClCD,gBAAAA,KAAK,CAACE,KAAN,CAAYC,UAAZ,GAAyBC,qBAAzB,CADkC,CACa;;AAE/C,oBAAIJ,KAAK,CAACC,QAAN,CAAe,CAAf,EAAkBI,SAAlB,KAAgCC,SAAhC,IAA6CN,KAAK,CAACC,QAAN,CAAe,CAAf,EAAkBI,SAAlB,KAAgCZ,GAAG,CAACc,IAArF,EAA2F;AACvFP,kBAAAA,KAAK,CAACE,KAAN,CAAYC,UAAZ,GAAyBK,uBAAzB,CADuF,CACrC;AACrD;;AAAA;AACJ;;AAAA;AACJ;;AAAA;AACJ,WAZD;AAaH;;AAAA;AACN,OAvBuD;AAAA;;AAyBtDC,IAAAA,MAAM,GAAG;AACL,UAAIb,KAAK,GAAG,EACR,GAAG,KAAKA,KADA;AAERc,QAAAA,OAAO,EAAE,KAAKzB;AAFN,OAAZ;AAIA,0BACI,oBAAC,SAAD,oBAAeW,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAGH;;AAjCqD;;AAmC1D,SAAOxB,OAAO,CAACG,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CI,2BAA7C,CAAP;AACH,CAxCD;;AAyCA,eAAeH,qBAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { saveDataStore } from '../store/EltypeClass/actions/actionEltypeClass';\r\n\r\nimport { focusRowColorBackground } from '../functions/focusRowColorBackground';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        focusData: state.createDataEltypeClass.stateData, //что хранится в фокусе\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveDataStore\r\n}\r\n\r\n\r\nconst withClickSaveFocusRow = (Component, base) => {\r\n\r\n\r\n        \r\n    class ComponentWithClickSaveFocus extends React.Component {\r\n\r\n        handlerTableRowUID = (event, data) => { //фокус на строку\r\n            event.preventDefault();\r\n            if (event.target.parentElement.tagName === 'TR' || event.target.parentElement.tagName === 'TD' || event.target.parentElement.tagName === 'DIV') {\r\n\r\n               \r\n\r\n\r\n                base.map((obj, index) => {\r\n                    if (obj.uid === data) {\r\n                        this.props.saveDataStore(obj); // сохранить в хранилище для изменений\r\n                        const tablebody = document.querySelector('tbody');\r\n                        for (let child of tablebody.children) {\r\n                            child.style.background = allRowColorBackground;//убираем цвет ранее выбранной строки\r\n\r\n                            if (child.children[1].innerHTML !== undefined && child.children[1].innerHTML === obj.name) {\r\n                                child.style.background = colorFocusRowBackground; //выделяем цветом строку фокуса\r\n                            };\r\n                        };\r\n                    };\r\n                });\r\n            };\r\n      }\r\n\r\n        render() {\r\n            let props = {\r\n                ...this.props,\r\n                onclick: this.handlerTableRowUID\r\n            }\r\n            return (\r\n                <Component {...props} />\r\n                )\r\n        }\r\n    }\r\n    return connect(mapStateToProps, mapDispatchToProps)(ComponentWithClickSaveFocus)\r\n}\r\nexport default withClickSaveFocusRow"]},"metadata":{},"sourceType":"module"}