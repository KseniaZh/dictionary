{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\components\\\\EditWindow\\\\ComponentEditWindow.js\";\nimport React from 'react';\nimport ButtonLinkSmall from '../../UserInterface/Buttons/Button/ButtonLinkSmall';\nimport Input from '../../UserInterface/Input/Input';\nimport Checkbox from '../../UserInterface/Input/Checkbox';\nimport WindowLinksButtonsConsole from '../../UserInterface/Buttons/WindowLinksButtonsConsole';\n\nfunction ComponentEditWindow(props) {\n  const stateData = props.stateData;\n  const stateKeys = Object.keys(stateData).filter(key => key != \"uid\"); //\"uid\": \"\",\n  //\"login\": \"\",\n  //\"name\": \"\",\n  //\"password\": \"\",\n  //\"isDeleted\": false,\n  //\"isSuperUser\": false,\n  //\"docInfo\": [],\n  //\"projectAuthorU\": [],\n  //\"projectUpdaterU\": [],\n  //\"userProjects\": []\n  //labels: [\n  //    'uid',\n  //    'login',\n  //    'Ф.И.О.',\n  //    'пароль',\n  //    'isDeleted',\n  //    'isSuperUser'\n  //],\n  //    placeholders: [\n  //        'uid',\n  //        'login',\n  //        'Ф.И.О.',\n  //        'пароль',\n  //        'isDeleted',\n  //        'isSuperUser'\n  //    ],\n  //        typeData: [\n  //            \"text\",\n  //            \"text\",\n  //            \"text\",\n  //            \"text\",\n  //            \"checkbox\",\n  //            \"checkbox\"\n  //        ],\n  //typeInput: [\n  //    \"input\",\n  //    \"input\",\n  //    \"input\",\n  //    \"input\",\n  //    \"checkbox\",\n  //    \"checkbox\"\n  //]\n\n  const checkedInput = data => {\n    if (stateData[data] === true) {\n      return \"checked\";\n    } else {\n      return \"\";\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.classnameWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: props.classnameWindow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ButtonLinkSmall, {\n    onclick: props.onclickNoButton,\n    to: props.to,\n    tabindex: \"-1\",\n    icon: \"fa fa-times\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, props.nameWindow)), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, props.typeInput.map((data, index) => {\n    if (data === \"input\") {\n      return /*#__PURE__*/React.createElement(Input, {\n        data: stateKeys[index],\n        id: stateKeys[index],\n        label: props.labels[index],\n        type: props.typeData[index],\n        placeholder: props.placeholders[index],\n        value: stateData[stateKeys[index]],\n        onchange: props.onchange,\n        tabindex: index + 2,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 40\n        }\n      });\n    }\n\n    if (data === \"checkbox\") {\n      return /*#__PURE__*/React.createElement(Checkbox, {\n        data: stateKeys[index],\n        id: stateKeys[index],\n        label: props.labels[index],\n        type: props.typeData[index],\n        checked: checkedInput(stateKeys[index]),\n        classNameCheckbox: props.classNameCheckbox,\n        onchange: props.onchange,\n        tabindex: index + 2,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 40\n        }\n      });\n    }\n  })), /*#__PURE__*/React.createElement(WindowLinksButtonsConsole, {\n    nameYesButton: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    onclickYesButton: props.onclickYesButton,\n    nameNoButton: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\",\n    onclickNoButton: props.onclickNoButton,\n    to: props.to,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default ComponentEditWindow;","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/components/EditWindow/ComponentEditWindow.js"],"names":["React","ButtonLinkSmall","Input","Checkbox","WindowLinksButtonsConsole","ComponentEditWindow","props","stateData","stateKeys","Object","keys","filter","key","checkedInput","data","classnameWrapper","classnameWindow","onclickNoButton","to","nameWindow","typeInput","map","index","labels","typeData","placeholders","onchange","classNameCheckbox","onclickYesButton"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ButtonLinkSmall from '../../UserInterface/Buttons/Button/ButtonLinkSmall';\r\nimport Input from '../../UserInterface/Input/Input';\r\nimport Checkbox from '../../UserInterface/Input/Checkbox';\r\nimport WindowLinksButtonsConsole from '../../UserInterface/Buttons/WindowLinksButtonsConsole';\r\n\r\nfunction ComponentEditWindow (props){\r\n    \r\n    const stateData = props.stateData;\r\n    const stateKeys = Object.keys(stateData).filter(key => key != \"uid\");\r\n\r\n//\"uid\": \"\",\r\n//\"login\": \"\",\r\n//\"name\": \"\",\r\n//\"password\": \"\",\r\n//\"isDeleted\": false,\r\n//\"isSuperUser\": false,\r\n//\"docInfo\": [],\r\n//\"projectAuthorU\": [],\r\n//\"projectUpdaterU\": [],\r\n//\"userProjects\": []\r\n\r\n    //labels: [\r\n    //    'uid',\r\n    //    'login',\r\n    //    'Ф.И.О.',\r\n    //    'пароль',\r\n    //    'isDeleted',\r\n    //    'isSuperUser'\r\n    //],\r\n    //    placeholders: [\r\n    //        'uid',\r\n    //        'login',\r\n    //        'Ф.И.О.',\r\n    //        'пароль',\r\n    //        'isDeleted',\r\n    //        'isSuperUser'\r\n    //    ],\r\n    //        typeData: [\r\n    //            \"text\",\r\n    //            \"text\",\r\n    //            \"text\",\r\n    //            \"text\",\r\n    //            \"checkbox\",\r\n    //            \"checkbox\"\r\n    //        ],\r\n        //typeInput: [\r\n        //    \"input\",\r\n        //    \"input\",\r\n        //    \"input\",\r\n        //    \"input\",\r\n        //    \"checkbox\",\r\n        //    \"checkbox\"\r\n        //]\r\n\r\n    const checkedInput = data => {\r\n \r\n        if (stateData[data] === true) {\r\n            return \"checked\"\r\n        } else {\r\n            return \"\"\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={props.classnameWrapper}>\r\n            <div className={props.classnameWindow}>\r\n        \r\n                <ButtonLinkSmall\r\n                    onclick={props.onclickNoButton}\r\n                    to={props.to}\r\n                    tabindex=\"-1\"\r\n                    icon=\"fa fa-times\"\r\n                />\r\n        \r\n                <div>\r\n                    <h3>{props.nameWindow}</h3>\r\n                </div>\r\n        \r\n                <form>\r\n                    {\r\n                        props.typeInput.map((data, index) => {\r\n\r\n                            if (data === \"input\") {\r\n                                return <Input\r\n                                            data={stateKeys[index]}\r\n                                            id={stateKeys[index]}\r\n                                            label={props.labels[index]}\r\n                                            type={props.typeData[index]}\r\n                                            placeholder={props.placeholders[index]}\r\n                                            value={stateData[stateKeys[index]]}\r\n                                            onchange={props.onchange}\r\n                                            tabindex={index +2}\r\n                                            key={index}\r\n                                        />\r\n                            }\r\n                            if (data === \"checkbox\") {\r\n\r\n                                return <Checkbox\r\n                                            data={stateKeys[index]}\r\n                                            id={stateKeys[index]}\r\n                                            label={props.labels[index]}\r\n                                            type={props.typeData[index]}\r\n                                            checked={checkedInput(stateKeys[index])}\r\n                                            classNameCheckbox={props.classNameCheckbox}\r\n                                            onchange={props.onchange}\r\n                                            tabindex={index + 2}\r\n                                            key={index}\r\n                                        />\r\n                            }\r\n                        })\r\n                    }\r\n                </form>\r\n        \r\n                <WindowLinksButtonsConsole\r\n                            nameYesButton=\"Сохранить\"\r\n                            onclickYesButton={props.onclickYesButton}\r\n                            nameNoButton=\"Отмена\"\r\n                            onclickNoButton={props.onclickNoButton}\r\n                            to={props.to}\r\n                    />\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ComponentEditWindow"]},"metadata":{},"sourceType":"module"}