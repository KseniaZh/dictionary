{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\containers\\\\EditWindow\\\\ContEditWindow.js\";\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport EditWindow from '../../components/EditWindow/EditWindow';\nimport { hendlerOnChangeInput_1, hendlerOnChangeInput_2, hendlerOnChangeInput_3, hendlerOnChangeInput_4, hendlerOnChangeInput_5 } from \"../../store/inputCreateNewData/actions/actionInputCreateNewData\";\n\nfunction ContEditWindow(props) {\n  const [inputValue, setInputValue] = useState({\n    uid: '',\n    name: \"\",\n    comment: \"\",\n    classViewProperty: \"\",\n    dbTable: \"\"\n  });\n  const stateTable = useSelector(state => state.stateTable);\n  const labels = Object.keys(stateTable[0]);\n  const [x1, x2, x3, x4, x5] = [...labels];\n  const idName = \"WindowNewData\";\n  const refInput1 = useRef();\n  useEffect(() => {\n    refInput1.current.focus();\n    return () => {};\n  }, []);\n\n  const handler1 = data => {\n    let iv = inputValue;\n    iv.uid = data;\n    console.log('handler1 ', iv.uid);\n    return setInputValue({\n      iv\n    });\n  };\n\n  const handler2 = data => {\n    let iv = inputValue;\n    iv.name = data;\n    return setInputValue({\n      iv\n    });\n  };\n\n  const handler3 = data => {\n    let iv = inputValue;\n    iv.comment = data;\n    return setInputValue(iv);\n  };\n\n  const handler4 = data => {\n    let iv = inputValue;\n    iv.classViewProperty = data;\n    return setInputValue(iv);\n  };\n\n  const handler5 = data => {\n    let iv = inputValue;\n    iv.dbTable = data;\n    return setInputValue(iv);\n  };\n\n  const handlerClick = () => {\n    console.log('handlerClick');\n  };\n\n  return /*#__PURE__*/React.createElement(EditWindow, {\n    id1: x1 + idName,\n    ref1: refInput1,\n    label1: x1,\n    type1: \"number\",\n    placeholder1: x1,\n    value1: inputValue.uid,\n    onchange1: handler1,\n    tabIndex1: \"1\",\n    autofocus1: \"autofocus\",\n    id2: x2 + idName,\n    label2: \"\\u041D\\u0430\\u0438\\u043C\\u0435\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\",\n    type2: \"text\",\n    placeholder2: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0438\\u043C\\u0435\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\",\n    value2: inputValue.name,\n    onchange2: handler2,\n    tabIndex2: \"2\",\n    id3: x3 + idName,\n    label3: \"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0438\",\n    cols: \"20\",\n    rows: \"5\",\n    placeholder3: \"\\u041E\\u0441\\u0442\\u0430\\u0432\\u044C\\u0442\\u0435 \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0438\",\n    value3: inputValue.comment,\n    onchange3: handler3,\n    tabIndex3: \"3\",\n    id4: x4 + idName,\n    label4: \"\\u041A\\u043B\\u0430\\u0441\\u0441\",\n    type4: \"text\",\n    placeholder4: \"\\u0423\\u043A\\u0430\\u0436\\u0438\\u0442\\u0435 \\u043A\\u043B\\u0430\\u0441\\u0441\",\n    value4: inputValue.classViewProperty,\n    onchange4: handler4,\n    tabIndex4: \"4\",\n    autofocus4: \"\",\n    id5: x5 + idName,\n    label5: x5,\n    type5: \"text\",\n    placeholder5: x5,\n    value5: inputValue.dbTable,\n    onchange5: handler5,\n    tabIndex5: \"5\",\n    autofocus5: \"\",\n    classNameLabel: \"\",\n    classNameInput: \"\",\n    classNameTextarea: \"\",\n    nameButtonSave: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    nameButtonClose: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\",\n    onclick1: handlerClick,\n    onclick2: handlerClick,\n    classWrapper: \"\",\n    classButtonWrapper: \"\",\n    classButton: \"\",\n    classButtonX: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  });\n}\n\nexport default connect()(ContEditWindow); //    const value1 = useSelector(state => state.inputCreateNewData.uid)\n//    const value2 = useSelector(state => state.inputCreateNewData.name)\n//    const value3 = useSelector(state => state.inputCreateNewData.comment)\n//    const value4 = useSelector(state => state.inputCreateNewData.classViewProperty)\n//    const value5 = useSelector(state => state.inputCreateNewData.dbTable)\n//    \n//    \n//        \n//    const dispatch = useDispatch();\n//    const handler1 = useCallback(() => {\n//                    dispatch(hendlerOnChangeInput_1());\n//        }, []);\n//    const handler2 = useCallback(() => {\n//                    dispatch(hendlerOnChangeInput_2());\n//        }, []);\n//    const handler3 = useCallback(() => {\n//                    dispatch(hendlerOnChangeInput_3());\n//        }, []);\n//    const handler4 = useCallback(() => {\n//                    dispatch(hendlerOnChangeInput_4());\n//        }, []);\n//    const handler5 = useCallback(() => {\n//                    dispatch(hendlerOnChangeInput_5());\n//        }, []);","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/containers/EditWindow/ContEditWindow.js"],"names":["React","useState","useEffect","useRef","useCallback","connect","useDispatch","useSelector","EditWindow","hendlerOnChangeInput_1","hendlerOnChangeInput_2","hendlerOnChangeInput_3","hendlerOnChangeInput_4","hendlerOnChangeInput_5","ContEditWindow","props","inputValue","setInputValue","uid","name","comment","classViewProperty","dbTable","stateTable","state","labels","Object","keys","x1","x2","x3","x4","x5","idName","refInput1","current","focus","handler1","data","iv","console","log","handler2","handler3","handler4","handler5","handlerClick"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef, useCallback } from 'react';\r\nimport { connect, useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport EditWindow from '../../components/EditWindow/EditWindow'\r\nimport {hendlerOnChangeInput_1, hendlerOnChangeInput_2, hendlerOnChangeInput_3, hendlerOnChangeInput_4, hendlerOnChangeInput_5} from \"../../store/inputCreateNewData/actions/actionInputCreateNewData\"\r\n\r\nfunction ContEditWindow (props){\r\n    \r\n    const [inputValue, setInputValue] = useState({\r\n                                                uid: '',\r\n                                                name: \"\",\r\n                                                comment: \"\",\r\n                                                classViewProperty: \"\",\r\n                                                dbTable: \"\"\r\n                                      })\r\n\r\n    const stateTable = useSelector(state => state.stateTable);\r\n    const labels = Object.keys(stateTable[0]);\r\n    const [x1, x2, x3, x4, x5] = [...labels];\r\n    const idName = \"WindowNewData\";\r\n    \r\n    const refInput1 = useRef();\r\n    \r\n    useEffect(()=>{\r\n        refInput1.current.focus();\r\n\t       return () =>{};\r\n    }, [])\r\n    \r\n    const handler1 = (data)=>{\r\n        let iv = inputValue;\r\n        iv.uid = data;\r\n        console.log( 'handler1 ', iv.uid)\r\n            return setInputValue({iv})\r\n    }\r\n    const handler2 = (data)=>{\r\n        let iv = inputValue;\r\n        iv.name = data;\r\n            return setInputValue({iv})\r\n    }\r\n    const handler3 = (data)=>{\r\n        let iv = inputValue;\r\n        iv.comment = data;\r\n            return setInputValue(iv)\r\n    }\r\n    const handler4 = (data)=>{\r\n        let iv = inputValue;\r\n        iv.classViewProperty = data;\r\n            return setInputValue(iv)\r\n    }\r\n    const handler5 = (data)=>{\r\n        let iv = inputValue;\r\n        iv.dbTable = data;\r\n            return setInputValue(iv)\r\n    }\r\n    const handlerClick = ()=>{\r\n        console.log('handlerClick');\r\n    }\r\n    \r\n    return(\r\n        <EditWindow \r\n        \r\n                    id1 = {x1 + idName}\r\n                    ref1 = {refInput1}\r\n                    label1 = {x1}\r\n                    type1 = \"number\"\r\n                    placeholder1 = {x1}\r\n                    value1 = {inputValue.uid}\r\n                    onchange1 = {handler1}\r\n                    tabIndex1 = '1'\r\n                    autofocus1 = \"autofocus\"\r\n        \r\n                    id2 = {x2 + idName}\r\n                    label2 = \"Наименование\"\r\n                    type2 = \"text\"\r\n                    placeholder2 = \"Введите наименование\"\r\n                    value2 = {inputValue.name}\r\n                    onchange2 = {handler2} \r\n                    tabIndex2 = '2'\r\n        \r\n                    id3 = {x3 + idName}\r\n                    label3 = \"Комментарии\"\r\n                    cols = \"20\"\r\n                    rows = \"5\"\r\n                    placeholder3 = \"Оставьте комментарии\"\r\n                    value3 = {inputValue.comment}\r\n                    onchange3 = {handler3} \r\n                    tabIndex3 = '3'\r\n        \r\n                    id4 = {x4 + idName}\r\n                    label4 = \"Класс\"\r\n                    type4 = \"text\"\r\n                    placeholder4 = \"Укажите класс\"\r\n                    value4 = {inputValue.classViewProperty}\r\n                    onchange4 = {handler4} \r\n                    tabIndex4 = '4'\r\n                    autofocus4 = \"\"\r\n        \r\n                    id5 = {x5 + idName}\r\n                    label5 = {x5}\r\n                    type5 = \"text\"\r\n                    placeholder5 = {x5}\r\n                    value5 = {inputValue.dbTable}\r\n                    onchange5 = {handler5} \r\n                    tabIndex5 = '5'\r\n                    autofocus5 = \"\"\r\n        \r\n                    classNameLabel = ''\r\n                    classNameInput = ''\r\n                    classNameTextarea = ''\r\n        \r\n                    nameButtonSave = \"Сохранить\"\r\n                    nameButtonClose = \"Отмена\"\r\n                    onclick1 = {handlerClick}\r\n                    onclick2 = {handlerClick}\r\n                    classWrapper = \"\"\r\n                    classButtonWrapper = \"\"\r\n                    classButton = \"\"\r\n                    classButtonX = \"\"\r\n            />\r\n    )\r\n}\r\n\r\nexport default connect()(ContEditWindow)\r\n\r\n\r\n    \r\n//    const value1 = useSelector(state => state.inputCreateNewData.uid)\r\n//    const value2 = useSelector(state => state.inputCreateNewData.name)\r\n//    const value3 = useSelector(state => state.inputCreateNewData.comment)\r\n//    const value4 = useSelector(state => state.inputCreateNewData.classViewProperty)\r\n//    const value5 = useSelector(state => state.inputCreateNewData.dbTable)\r\n//    \r\n\r\n//    \r\n//        \r\n//    const dispatch = useDispatch();\r\n//    const handler1 = useCallback(() => {\r\n//                    dispatch(hendlerOnChangeInput_1());\r\n//        }, []);\r\n//    const handler2 = useCallback(() => {\r\n//                    dispatch(hendlerOnChangeInput_2());\r\n//        }, []);\r\n//    const handler3 = useCallback(() => {\r\n//                    dispatch(hendlerOnChangeInput_3());\r\n//        }, []);\r\n//    const handler4 = useCallback(() => {\r\n//                    dispatch(hendlerOnChangeInput_4());\r\n//        }, []);\r\n//    const handler5 = useCallback(() => {\r\n//                    dispatch(hendlerOnChangeInput_5());\r\n//        }, []);"]},"metadata":{},"sourceType":"module"}