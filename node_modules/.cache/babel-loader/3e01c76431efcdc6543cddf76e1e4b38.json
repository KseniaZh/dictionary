{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\containers\\\\Basis\\\\Basis.js\";\nimport React, { useEffect } from 'react';\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport ConsoleButton from '../../components/ConsoleButton/ConsoleButton';\nimport TableList from '../../components/Table/TableList';\nimport HeaderDictionary from '../../components/Header/HeaderDictionary';\nimport HeaderCompare from '../../components/Header/HeaderCompare';\nimport ContextMenuWindow from '../../components/ContextMenuWindow/ContextMenuWindow';\nimport WarningCompare from '../../components/WarningWindow/WarningCompare';\nimport AwaitLoading from '../../UserInterface/AwaitLoading/AwaitLoading';\nimport ButtonLinkSmallNotMouse from '../../UserInterface/Buttons/Button/ButtonLinkSmallNotMouse';\nimport { saveDataStore } from '../../store/BasisReport/actions/actionFocusData';\nimport { changeNumberList, getDataPageRowTable } from '../../store/BasisReport/actions/actionsFlagsBasisReport';\nimport { addDescription } from \"../../store/Description/actionsDescription\";\nimport withContextMenuWindow from '../../hoc/withContextMenuWindow';\nimport ContextMenuCompare from '../../components/ContextMenuWindow/ContextMenuCompare';\n\nfunction Basis(props) {\n  const dispatch = useDispatch();\n  const stateLoading = useSelector(state => state.stateFlagsBasisReport.loading);\n  const stateTable = useSelector(state => state.stateBasisReport); //ВСЯ база\n\n  const dataTable = useSelector(state => state.stateFlagsBasisReport.dataListTable); // отображаемый лист\n\n  const countRow = useSelector(state => state.stateFlagsBasisReport.countRowTable); // количество строк на отображаемой странице\n\n  const numberList = useSelector(state => state.stateFlagsBasisReport.numberList); //номер отображаемого листа\n\n  const focusData = useSelector(state => state.focusData); // фокус. запомнить данные выбранной строки\n\n  const flagEmployDescription = useSelector(state => state.stateFlagsAll.employDescriptionAll); // разрешен ли пользователем показ подсказок\n\n  const arrDescription = useSelector(state => state.stateDescription); // массив подсказок из store (пока без кнопок консоли, заполнится после рединга\n  //переключение цветового решения приложения\n\n  const stateStylesAll = useSelector(state => state.stateStyle.stylesAll);\n  const staleSelect = useSelector(state => state.stateStyle.styleSelect);\n\n  const hendlerSearchBase = event => {\n    event.preventDefault();\n\n    if (event.target.value === '') {\n      return;\n    }\n\n    ; //если пусто, выходим\n\n    let num; // номер выбранного объекта в массиве\n\n    stateTable.map((obj, index) => {\n      if (obj[props.searchKey] === event.target.value) {\n        num = index + 1;\n        dispatch(saveDataStore(obj)); // сохранить фокус в хранилище\n      }\n    }); //поиск номера страницы\n\n    let i = Number(countRow);\n    let numList = 1;\n\n    if (num === undefined) {\n      return;\n    }\n\n    ; //если пусто, выходим\n\n    while (i < num) {\n      i = i + Number(countRow);\n      numList++;\n    }\n\n    dispatch(changeNumberList(numList)); //сохраняем номер\n\n    dispatch(getDataPageRowTable(stateTable, countRow, numList)); // загружаем выбранный лист\n  }; //логика добавления контекстного меню через hoc\n\n\n  const TableListWithContextMenu = withContextMenuWindow(TableList, ContextMenuWindow, props.stateBaseConsoleButton, \"ContextMenuWindow\");\n  const CompareTableListWithContextMenu = withContextMenuWindow(TableList, ContextMenuCompare, props.stateCompareConsoleButton, \"ContextMenuWindow\");\n\n  const BasisTable = () => {\n    if (stateLoading === true) {\n      return /*#__PURE__*/React.createElement(AwaitLoading, {\n        classname: stateStylesAll[staleSelect].loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 20\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(TableListWithContextMenu, {\n        classname: stateStylesAll[staleSelect].dataBaseTableContainer,\n        classnameConsoleCountRow: stateStylesAll[staleSelect].consoleCountRow,\n        classnameButtonConsoleCountPow: stateStylesAll[staleSelect].personalizeButton,\n        classnameDescription: stateStylesAll[staleSelect].descriptionButton,\n        colorRowTableBackground: stateStylesAll[staleSelect].rowTableBackground,\n        colorFocusRowBackground: stateStylesAll[staleSelect].focusRowBackground,\n        stateTable: stateTable,\n        dataTable: dataTable,\n        visibleNameСolumns: props.visibleNameСolumns,\n        searchСolumnsName: props.searchСolumnsName,\n        typeDataColumns: props.typeDataColumns,\n        func: props.focusNull,\n        CountRow: countRow,\n        focusData: focusData,\n        numberActivList: numberList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 19\n        }\n      });\n    }\n  };\n\n  const BasisCompareTable = () => {\n    if (props.compareArr.length > 1) {\n      return /*#__PURE__*/React.createElement(CompareTableListWithContextMenu, {\n        classname: stateStylesAll[staleSelect].dataBaseTableContainer,\n        colorRowTableBackground: stateStylesAll[staleSelect].rowTableBackground,\n        colorFocusRowBackground: stateStylesAll[staleSelect].focusRowBackground,\n        stateTable: props.compareArr,\n        dataTable: props.compareArr,\n        CountRow: props.compareArr.length + 1,\n        onclickDelete: props.hendlerDeleteContext,\n        visibleNameСolumns: props.visibleNameСolumns,\n        typeDataColumns: props.typeDataColumns,\n        funcSorting: props.funcSorting,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 20\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(WarningCompare, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 20\n        }\n      });\n    }\n  };\n\n  const haveDescription = dataStateConsoleButton => {\n    //добавляем подсказки на кнопки консоли\n    if (flagEmployDescription === true) {\n      let aboutDescription = {};\n      dataStateConsoleButton.map(obj => {\n        aboutDescription[obj.name] = [obj.text];\n      });\n      dispatch(addDescription(aboutDescription, arrDescription));\n    }\n\n    ;\n  };\n\n  const hendlerClearSearchInput = event => {\n    const SearchBaseName = document.getElementById('SearchBaseName');\n\n    if (event.target.tagName !== \"INPUT\") {\n      SearchBaseName.value = '';\n    }\n  };\n\n  useEffect(() => {\n    if (props.flagOpenCompareWindow === false) {\n      props.funcStartGetRequestServer();\n      document.addEventListener('click', hendlerClearSearchInput);\n      haveDescription(props.stateBaseConsoleButton);\n    } else {\n      haveDescription(props.stateCompareConsoleButton);\n    }\n\n    ;\n    return () => {\n      if (props.flagOpenCompareWindow === false) {\n        document.removeEventListener('click', hendlerClearSearchInput);\n      }\n\n      ;\n    };\n  }, []);\n  console.log('BASIS ', props.stateBaseConsoleButton);\n  console.log('BASIS ', props.stateCompareConsoleButton);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: stateStylesAll[staleSelect].dataBaseContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: stateStylesAll[staleSelect].dataBaseHeaderContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, props.flagOpenCompareWindow ? /*#__PURE__*/React.createElement(ConsoleButton, {\n    classnameWrapper: stateStylesAll[staleSelect].dataBaseHeaderConsole,\n    classnameDescription: stateStylesAll[staleSelect].descriptionButton,\n    stateConsoleButton: props.stateCompareConsoleButton,\n    tabindex: \"-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 30\n    }\n  }) : /*#__PURE__*/React.createElement(ConsoleButton, {\n    classnameWrapper: stateStylesAll[staleSelect].dataBaseHeaderConsole,\n    classnameDescription: stateStylesAll[staleSelect].descriptionButton,\n    stateConsoleButton: props.stateBaseConsoleButton,\n    tabindex: \"-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 31\n    }\n  }), props.flagOpenCompareWindow ? /*#__PURE__*/React.createElement(HeaderCompare, {\n    classname: stateStylesAll[staleSelect].dataBaseHeaderHeader,\n    nameBase: \"\\u041A\\u043B\\u0430\\u0441\\u0441\\u044B \\u0434\\u043B\\u044F \\u0422\\u0438\\u043F\\u043E\\u0432 \\u0441\\u0432\\u044F\\u0437\\u0435\\u0439 \\u0438 \\u0422\\u0438\\u043F\\u043E\\u0432 \\u0441\\u0443\\u0449\\u043D\\u043E\\u0441\\u0442\\u0435\\u0439\",\n    nameHeader: \"\\u0421\\u0440\\u0430\\u0432\\u043D\\u0438\\u0442\\u044C \\u0438\\u0437\\u0431\\u0440\\u0430\\u043D\\u043D\\u043E\\u0435\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 29\n    }\n  }) : /*#__PURE__*/React.createElement(HeaderDictionary, {\n    classname: stateStylesAll[staleSelect].dataBaseHeaderHeader,\n    nameHeader: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439\",\n    onchangeSearch: hendlerSearchBase,\n    stateTable: stateTable,\n    searchKey: props.searchKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 27\n    }\n  }), props.flagOpenCompareWindow ? /*#__PURE__*/React.createElement(ButtonLinkSmallNotMouse, {\n    to: props.links.linkBase,\n    icon: \"fa fa-share\",\n    onclick: props.hendlerCloseWindow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 33\n    }\n  }) : null), props.flagOpenCompareWindow ? BasisCompareTable() : BasisTable());\n}\n\nexport default connect()(Basis);","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/containers/Basis/Basis.js"],"names":["React","useEffect","connect","useDispatch","useSelector","ConsoleButton","TableList","HeaderDictionary","HeaderCompare","ContextMenuWindow","WarningCompare","AwaitLoading","ButtonLinkSmallNotMouse","saveDataStore","changeNumberList","getDataPageRowTable","addDescription","withContextMenuWindow","ContextMenuCompare","Basis","props","dispatch","stateLoading","state","stateFlagsBasisReport","loading","stateTable","stateBasisReport","dataTable","dataListTable","countRow","countRowTable","numberList","focusData","flagEmployDescription","stateFlagsAll","employDescriptionAll","arrDescription","stateDescription","stateStylesAll","stateStyle","stylesAll","staleSelect","styleSelect","hendlerSearchBase","event","preventDefault","target","value","num","map","obj","index","searchKey","i","Number","numList","undefined","TableListWithContextMenu","stateBaseConsoleButton","CompareTableListWithContextMenu","stateCompareConsoleButton","BasisTable","dataBaseTableContainer","consoleCountRow","personalizeButton","descriptionButton","rowTableBackground","focusRowBackground","visibleNameСolumns","searchСolumnsName","typeDataColumns","focusNull","BasisCompareTable","compareArr","length","hendlerDeleteContext","funcSorting","haveDescription","dataStateConsoleButton","aboutDescription","name","text","hendlerClearSearchInput","SearchBaseName","document","getElementById","tagName","flagOpenCompareWindow","funcStartGetRequestServer","addEventListener","removeEventListener","console","log","dataBaseContainer","dataBaseHeaderContainer","dataBaseHeaderConsole","dataBaseHeaderHeader","links","linkBase","hendlerCloseWindow"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport ConsoleButton from '../../components/ConsoleButton/ConsoleButton';\r\nimport TableList from '../../components/Table/TableList';\r\nimport HeaderDictionary from '../../components/Header/HeaderDictionary';\r\nimport HeaderCompare from '../../components/Header/HeaderCompare';\r\nimport ContextMenuWindow from '../../components/ContextMenuWindow/ContextMenuWindow';\r\nimport WarningCompare from '../../components/WarningWindow/WarningCompare';\r\nimport AwaitLoading from '../../UserInterface/AwaitLoading/AwaitLoading';\r\nimport ButtonLinkSmallNotMouse from '../../UserInterface/Buttons/Button/ButtonLinkSmallNotMouse';\r\n\r\nimport { saveDataStore } from '../../store/BasisReport/actions/actionFocusData';\r\nimport {\r\n    changeNumberList,\r\n    getDataPageRowTable\r\n} from '../../store/BasisReport/actions/actionsFlagsBasisReport';\r\nimport {\r\n    addDescription\r\n} from \"../../store/Description/actionsDescription\";\r\n\r\nimport withContextMenuWindow from '../../hoc/withContextMenuWindow';\r\nimport ContextMenuCompare from '../../components/ContextMenuWindow/ContextMenuCompare';\r\n\r\n\r\nfunction Basis(props) {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const stateLoading = useSelector(state => state.stateFlagsBasisReport.loading);\r\n\r\n    const stateTable = useSelector(state => state.stateBasisReport); //ВСЯ база\r\n\r\n    const dataTable = useSelector(state => state.stateFlagsBasisReport.dataListTable); // отображаемый лист\r\n  \r\n    const countRow = useSelector(state => state.stateFlagsBasisReport.countRowTable); // количество строк на отображаемой странице\r\n\r\n    const numberList = useSelector(state => state.stateFlagsBasisReport.numberList); //номер отображаемого листа\r\n\r\n    const focusData = useSelector(state => state.focusData); // фокус. запомнить данные выбранной строки\r\n\r\n    const flagEmployDescription = useSelector(state => state.stateFlagsAll.employDescriptionAll) // разрешен ли пользователем показ подсказок\r\n\r\n    const arrDescription = useSelector(state => state.stateDescription); // массив подсказок из store (пока без кнопок консоли, заполнится после рединга\r\n\r\n    //переключение цветового решения приложения\r\n    const stateStylesAll = useSelector(state => state.stateStyle.stylesAll);\r\n    const staleSelect = useSelector(state => state.stateStyle.styleSelect);\r\n\r\n\r\n    const hendlerSearchBase = (event) => {\r\n        event.preventDefault();\r\n        if (event.target.value === '') { return }; //если пусто, выходим\r\n\r\n        let num; // номер выбранного объекта в массиве\r\n    \r\n        stateTable.map((obj, index) => {\r\n\r\n            if (obj[props.searchKey] === event.target.value) {\r\n                num = index + 1;\r\n                dispatch(saveDataStore(obj)); // сохранить фокус в хранилище\r\n            }\r\n        });\r\n            //поиск номера страницы\r\n            let i = Number(countRow);\r\n            let numList = 1;\r\n            if (num === undefined) { return }; //если пусто, выходим\r\n\r\n            while (i < num) {\r\n                i = i + Number(countRow);\r\n                numList++;\r\n        }\r\n        dispatch(changeNumberList(numList)); //сохраняем номер\r\n        dispatch(getDataPageRowTable(stateTable, countRow, numList));// загружаем выбранный лист\r\n    }\r\n\r\n\r\n\r\n\r\n    //логика добавления контекстного меню через hoc\r\n    const TableListWithContextMenu = withContextMenuWindow(TableList, ContextMenuWindow, props.stateBaseConsoleButton, \"ContextMenuWindow\");\r\n    const CompareTableListWithContextMenu = withContextMenuWindow(TableList, ContextMenuCompare, props.stateCompareConsoleButton, \"ContextMenuWindow\");\r\n\r\n    const BasisTable = () => {\r\n        if (stateLoading === true) {\r\n            return <AwaitLoading\r\n                        classname={stateStylesAll[staleSelect].loading}\r\n                    />\r\n        } else {\r\n            return<TableListWithContextMenu\r\n                        classname={stateStylesAll[staleSelect].dataBaseTableContainer}\r\n                        classnameConsoleCountRow={stateStylesAll[staleSelect].consoleCountRow}\r\n                        classnameButtonConsoleCountPow={stateStylesAll[staleSelect].personalizeButton}\r\n                        classnameDescription={stateStylesAll[staleSelect].descriptionButton}\r\n                        colorRowTableBackground={stateStylesAll[staleSelect].rowTableBackground}\r\n                        colorFocusRowBackground={stateStylesAll[staleSelect].focusRowBackground}\r\n\r\n                        stateTable={stateTable}\r\n                        dataTable={dataTable}\r\n                        visibleNameСolumns={props.visibleNameСolumns}\r\n                        searchСolumnsName={props.searchСolumnsName}\r\n                        typeDataColumns={props.typeDataColumns}\r\n\r\n                        func={props.focusNull}\r\n\r\n                        CountRow={countRow}\r\n                        focusData={focusData}\r\n                        numberActivList={numberList}\r\n                    />\r\n        }\r\n    }\r\n\r\n    const BasisCompareTable = () => {\r\n        if (props.compareArr.length > 1) {\r\n            return <CompareTableListWithContextMenu\r\n                        classname={stateStylesAll[staleSelect].dataBaseTableContainer}\r\n                        colorRowTableBackground={stateStylesAll[staleSelect].rowTableBackground}\r\n                        colorFocusRowBackground={stateStylesAll[staleSelect].focusRowBackground}\r\n\r\n                        stateTable={props.compareArr}\r\n                        dataTable={props.compareArr}\r\n                        CountRow={props.compareArr.length + 1}\r\n                        onclickDelete={props.hendlerDeleteContext}\r\n                        visibleNameСolumns={props.visibleNameСolumns}\r\n                        typeDataColumns={props.typeDataColumns}\r\n                        funcSorting={props.funcSorting}\r\n                    />\r\n        } else {\r\n            return <WarningCompare />\r\n        }\r\n    }\r\n\r\n    const haveDescription = (dataStateConsoleButton) => {\r\n        //добавляем подсказки на кнопки консоли\r\n        if (flagEmployDescription === true) {\r\n            let aboutDescription = {};\r\n            dataStateConsoleButton.map((obj) => {\r\n                aboutDescription[obj.name] = [obj.text];\r\n            });\r\n            dispatch(addDescription(aboutDescription, arrDescription));\r\n        };\r\n    }\r\n    const hendlerClearSearchInput = event => {\r\n        const SearchBaseName = document.getElementById('SearchBaseName');\r\n        if (event.target.tagName !== \"INPUT\") {\r\n            SearchBaseName.value = '';\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.flagOpenCompareWindow === false) {\r\n            props.funcStartGetRequestServer();\r\n            document.addEventListener('click', hendlerClearSearchInput);\r\n            haveDescription(props.stateBaseConsoleButton);\r\n        } else {\r\n            haveDescription(props.stateCompareConsoleButton);\r\n        };\r\n\r\n     return () => {\r\n         if (props.flagOpenCompareWindow === false) {\r\n             document.removeEventListener('click', hendlerClearSearchInput);\r\n         };\r\n     }\r\n    }, [])\r\n\r\n    console.log('BASIS ', props.stateBaseConsoleButton)\r\n    console.log('BASIS ', props.stateCompareConsoleButton)\r\n    return (\r\n        <div className={stateStylesAll[staleSelect].dataBaseContainer}>\r\n \r\n            <div className={stateStylesAll[staleSelect].dataBaseHeaderContainer}>\r\n                    {\r\n                        props.flagOpenCompareWindow ?\r\n                             <ConsoleButton\r\n                                classnameWrapper={stateStylesAll[staleSelect].dataBaseHeaderConsole}\r\n                                classnameDescription={stateStylesAll[staleSelect].descriptionButton}\r\n                                stateConsoleButton={props.stateCompareConsoleButton}\r\n                                tabindex=\"-1\"\r\n                            />\r\n                            : <ConsoleButton\r\n                                classnameWrapper={stateStylesAll[staleSelect].dataBaseHeaderConsole}\r\n                                classnameDescription={stateStylesAll[staleSelect].descriptionButton}\r\n                                stateConsoleButton={props.stateBaseConsoleButton}\r\n                                \r\n                                tabindex=\"-1\"\r\n                            />\r\n                    }\r\n                    \r\n                    {\r\n                        props.flagOpenCompareWindow ?\r\n                            <HeaderCompare\r\n                                classname={stateStylesAll[staleSelect].dataBaseHeaderHeader}\r\n                                nameBase=\"Классы для Типов связей и Типов сущностей\"\r\n                                nameHeader=\"Сравнить избранное\"\r\n                            />\r\n                        : <HeaderDictionary\r\n                                classname={stateStylesAll[staleSelect].dataBaseHeaderHeader}\r\n                                nameHeader=\"Список пользователей\"\r\n                                onchangeSearch={hendlerSearchBase}\r\n                                stateTable={stateTable}\r\n                                searchKey={props.searchKey}\r\n                            />\r\n                    }\r\n                    {\r\n                        props.flagOpenCompareWindow ?\r\n                                <ButtonLinkSmallNotMouse\r\n                                    to={props.links.linkBase}\r\n                                    icon=\"fa fa-share\"\r\n                                    onclick={props.hendlerCloseWindow}\r\n                                />\r\n                                :null\r\n                    }\r\n                            \r\n            </div>\r\n            {\r\n                props.flagOpenCompareWindow ?\r\n                    BasisCompareTable()\r\n                    :BasisTable()\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect()(Basis)"]},"metadata":{},"sourceType":"module"}