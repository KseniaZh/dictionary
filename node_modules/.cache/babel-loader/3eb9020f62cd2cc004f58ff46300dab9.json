{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\containers\\\\baseViewType\\\\ViewType.js\";\nimport React from 'react';\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport ConsoleButton from '../../components/ConsoleButton/ConsoleButton';\nimport TableList from '../../components/Table/TableList';\nimport HeaderDictionary from '../../components/Header/HeaderDictionary';\nimport { startGetRequestServer, saveDataStore, saveTypeRequest, saveNameWindow } from '../../store/serverViewType/actions/actionViewType';\n\nfunction ViewType(props) {\n  const dispatch = useDispatch();\n  /*для заполнения таблицы */\n\n  const stateTable = useSelector(state => state.stateTable);\n  /*определение по какой строке таблицы был клик */\n\n  const handlerTableRowUID = (event, data) => {\n    event.preventDefault();\n    stateTable.map((obj, index) => {\n      if (obj.uid === data) {\n        console.log(\"index \", index);\n        dispatch(saveDataStore(obj));\n      }\n    });\n  };\n\n  const openWindow = (nameWindow, typeRequest) => {\n    dispatch(saveTypeRequest(typeRequest));\n    dispatch(saveNameWindow(nameWindow));\n  };\n\n  console.log('key table ', stateTable[0]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HeaderDictionary, {\n    classname: \"\",\n    nameHeader: \"\\u0412\\u044B\\u0432\\u043E\\u0434 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 View Type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ConsoleButton, {\n    classname: \"\",\n    linkWindowEdit: \"/ContEditWindow\",\n    linkWindowDelete: \"\",\n    name1: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C\",\n    title1: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C\",\n    onclick1: () => {\n      dispatch(startGetRequestServer());\n    },\n    name2: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\",\n    title2: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\",\n    onclick2: () => openWindow(\"Новое значение\", \"post\"),\n    name3: \"\\u0412\\u043D\\u0435\\u0441\\u0442\\u0438 \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u044F\",\n    title3: \"\\u0412\\u043D\\u0435\\u0441\\u0442\\u0438 \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u044F\",\n    onclick3: () => openWindow(\"Изменить значение\", \"put\"),\n    name4: \"\\u0422\\u043E\\u043B\\u044C\\u043A\\u043E \\u0430\\u043A\\u0442\\u0438\\u0432\\u043D\\u044B\\u0435\",\n    title4: \"\\u0422\\u043E\\u043B\\u044C\\u043A\\u043E \\u0430\\u043A\\u0442\\u0438\\u0432\\u043D\\u044B\\u0435\",\n    onclick4: () => console.log('click'),\n    name5: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\",\n    title5: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\",\n    onclick5: () => console.log('click'),\n    type: \"button\",\n    tabindex: \"-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TableList, {\n    columnName: Object.keys(stateTable[0]),\n    dataTable: stateTable,\n    onclick: (event, data) => handlerTableRowUID(event, data),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default connect()(ViewType);","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/containers/baseViewType/ViewType.js"],"names":["React","connect","useDispatch","useSelector","ConsoleButton","TableList","HeaderDictionary","startGetRequestServer","saveDataStore","saveTypeRequest","saveNameWindow","ViewType","props","dispatch","stateTable","state","handlerTableRowUID","event","data","preventDefault","map","obj","index","uid","console","log","openWindow","nameWindow","typeRequest","Object","keys"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport ConsoleButton from '../../components/ConsoleButton/ConsoleButton';\r\nimport TableList from '../../components/Table/TableList';\r\nimport HeaderDictionary from '../../components/Header/HeaderDictionary';\r\nimport {\r\n        startGetRequestServer,\r\n        saveDataStore,\r\n        saveTypeRequest,\r\n        saveNameWindow\r\n        } from '../../store/serverViewType/actions/actionViewType';\r\n\r\n\r\nfunction ViewType (props){\r\n    \r\n    const dispatch = useDispatch();\r\n    \r\n    /*для заполнения таблицы */\r\n    const stateTable = useSelector(state => state.stateTable);\r\n    \r\n    /*определение по какой строке таблицы был клик */\r\n    const handlerTableRowUID = (event, data)=>{\r\n        event.preventDefault();\r\n        \r\n        stateTable.map( (obj, index) => {\r\n            if (obj.uid === data){\r\n                console.log(\"index \", index);\r\n                dispatch(saveDataStore(obj));\r\n            }\r\n        })\r\n    }\r\n    const openWindow = (nameWindow, typeRequest) => {\r\n        dispatch(saveTypeRequest(typeRequest));\r\n        dispatch(saveNameWindow(nameWindow));\r\n    }\r\n    console.log('key table ', stateTable[0])\r\n    return(\r\n        <div>\r\n            <HeaderDictionary \r\n                    classname= \"\"\r\n                    nameHeader = \"Вывод данных View Type\"\r\n                />\r\n        \r\n            <ConsoleButton\r\n                    classname =\"\"\r\n                    linkWindowEdit=\"/ContEditWindow\"\r\n                    linkWindowDelete = ''\r\n\r\n                    name1 = \"Обновить\"\r\n                    title1 = \"Обновить\"\r\n                    onclick1 = {()=>{dispatch(startGetRequestServer())}}\r\n\r\n\r\n                    name2 = \"Добавить\"\r\n                    title2 = \"Добавить\"\r\n                    onclick2={()=> openWindow(\"Новое значение\", \"post\")}\r\n\r\n                    name3 = \"Внести изменения\"\r\n                    title3 = \"Внести изменения\"\r\n                    onclick3={() => openWindow(\"Изменить значение\", \"put\")}\r\n\r\n                    name4 = \"Только активные\"\r\n                    title4 = \"Только активные\"\r\n                    onclick4={() => console.log('click') }\r\n\r\n                    name5 = \"Удалить\"\r\n                    title5 = \"Удалить\"\r\n                    onclick5={() => console.log('click') }\r\n\r\n                    type = \"button\"\r\n                    tabindex = \"-1\"\r\n\r\n                />\r\n                    \r\n            <TableList \r\n                    columnName={Object.keys(stateTable[0])}\r\n                    dataTable = {stateTable}\r\n                    onclick = {(event, data) => handlerTableRowUID(event, data)}\r\n                />\r\n \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect()(ViewType)\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}