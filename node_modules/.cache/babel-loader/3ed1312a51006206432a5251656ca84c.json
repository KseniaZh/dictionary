{"ast":null,"code":"import { takeEvery, select, put, call } from 'redux-saga/effects';\nimport { saveDataAuthorization } from '../../store/Authorization/actionsAuthorization';\nimport fetchData from '../../functions/fetchData';\nimport { url_User_PUT } from \"../../constans/url\";\nimport { START_SAGAS_AUTH_PUT_REQUEST } from '../../store/Authorization/types';\nexport function* workerStart_Authorization_PUT_RequestServer() {\n  console.log('!!! workerStart_Authorization_PUT_RequestServer !!!!');\n  const stateAuthorization = yield select(state => state.stateAuthorization.user);\n\n  try {\n    const data = yield call(fetchData, url_User_PUT, 'PUT', stateAuthorization);\n    yield put(saveDataAuthorization(data));\n  } catch (error) {\n    console.log('workerStart_Authorization_PUT_RequestServe error ', error);\n  }\n}\nexport function* watch_Authorization_POST_RequestServer() {\n  yield takeEvery(START_SAGAS_AUTH_PUT_REQUEST, workerStart_Authorization_PUT_RequestServer);\n}","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/sagas/Authorization/sagas_PUT_Authorization.js"],"names":["takeEvery","select","put","call","saveDataAuthorization","fetchData","url_User_PUT","START_SAGAS_AUTH_PUT_REQUEST","workerStart_Authorization_PUT_RequestServer","console","log","stateAuthorization","state","user","data","error","watch_Authorization_POST_RequestServer"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,GAA5B,EAAiCC,IAAjC,QAA6C,oBAA7C;AACA,SAASC,qBAAT,QAAsC,gDAAtC;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,4BAAT,QAA6C,iCAA7C;AAEA,OAAO,UAAUC,2CAAV,GAAuD;AAE1DC,EAAAA,OAAO,CAACC,GAAR,CAAY,sDAAZ;AAEA,QAAMC,kBAAkB,GAAG,MAAMV,MAAM,CAACW,KAAK,IAAIA,KAAK,CAACD,kBAAN,CAAyBE,IAAnC,CAAvC;;AAEA,MAAI;AAEA,UAAMC,IAAI,GAAG,MAAMX,IAAI,CAACE,SAAD,EAAYC,YAAZ,EAA0B,KAA1B,EAAiCK,kBAAjC,CAAvB;AAEA,UAAMT,GAAG,CAACE,qBAAqB,CAACU,IAAD,CAAtB,CAAT;AAEH,GAND,CAME,OAAOC,KAAP,EAAc;AACZN,IAAAA,OAAO,CAACC,GAAR,CAAY,mDAAZ,EAAiEK,KAAjE;AACH;AACJ;AAED,OAAO,UAAUC,sCAAV,GAAkD;AAErD,QAAMhB,SAAS,CAACO,4BAAD,EAA+BC,2CAA/B,CAAf;AAEH","sourcesContent":["import { takeEvery, select, put, call } from 'redux-saga/effects';\r\nimport { saveDataAuthorization } from '../../store/Authorization/actionsAuthorization';\r\nimport fetchData from '../../functions/fetchData';\r\nimport { url_User_PUT } from \"../../constans/url\";\r\nimport { START_SAGAS_AUTH_PUT_REQUEST } from '../../store/Authorization/types';\r\n\r\nexport function* workerStart_Authorization_PUT_RequestServer(){\r\n\r\n    console.log('!!! workerStart_Authorization_PUT_RequestServer !!!!');\r\n\r\n    const stateAuthorization = yield select(state => state.stateAuthorization.user);\r\n    \r\n    try {\r\n\r\n        const data = yield call(fetchData, url_User_PUT, 'PUT', stateAuthorization);\r\n        \r\n        yield put(saveDataAuthorization(data));\r\n         \r\n    } catch (error) {\r\n        console.log('workerStart_Authorization_PUT_RequestServe error ', error);\r\n    }\r\n}\r\n\r\nexport function* watch_Authorization_POST_RequestServer(){\r\n\r\n    yield takeEvery(START_SAGAS_AUTH_PUT_REQUEST, workerStart_Authorization_PUT_RequestServer)\r\n\r\n}"]},"metadata":{},"sourceType":"module"}