{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\hoc\\\\withClickSaveFocus.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { saveDataStore } from '../store/BasisReport/actions/actionFocusData';\nimport { focusRowColorBackground } from '../functions/focusRowColorBackground';\n\nconst mapStateToProps = state => {\n  return {\n    focusData: state.focusData //что хранится в фокусе\n\n  };\n};\n\nconst mapDispatchToProps = {\n  saveDataStore\n};\n\nconst withClickSaveFocus = (Component, base) => {\n  class ComponentWithClickSaveFocusTable extends React.Component {\n    constructor(...args) {\n      super(...args);\n\n      this.handlerTableRowUID = (event, data) => {\n        //фокус на строку\n        event.preventDefault();\n\n        if (event.target.parentElement.tagName === 'TR' || event.target.parentElement.tagName === 'TD' || event.target.parentElement.tagName === 'DIV') {\n          base.map(obj => {\n            if (obj.uid === data) {\n              this.props.saveDataStore(obj); // сохранить в хранилище для изменений\n\n              focusRowColorBackground(obj); // выделить фокус цветом\n            }\n\n            ;\n          });\n        }\n\n        ;\n      };\n    }\n\n    render() {\n      let props = { ...this.props,\n        onclick: this.handlerTableRowUID\n      };\n      return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }));\n    }\n\n  }\n\n  return connect(mapStateToProps, mapDispatchToProps)(ComponentWithClickSaveFocusTable);\n};\n\nexport default withClickSaveFocus;","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/hoc/withClickSaveFocus.js"],"names":["React","connect","saveDataStore","focusRowColorBackground","mapStateToProps","state","focusData","mapDispatchToProps","withClickSaveFocus","Component","base","ComponentWithClickSaveFocusTable","handlerTableRowUID","event","data","preventDefault","target","parentElement","tagName","map","obj","uid","props","render","onclick"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,8CAA9B;AAEA,SAASC,uBAAT,QAAwC,sCAAxC;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,SAAS,EAAED,KAAK,CAACC,SADd,CACyB;;AADzB,GAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAG;AACvBL,EAAAA;AADuB,CAA3B;;AAKA,MAAMM,kBAAkB,GAAG,CAACC,SAAD,EAAYC,IAAZ,KAAqB;AAI5C,QAAMC,gCAAN,SAA+CX,KAAK,CAACS,SAArD,CAA+D;AAAA;AAAA;;AAAA,WAE3DG,kBAF2D,GAEtC,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAAE;AACpCD,QAAAA,KAAK,CAACE,cAAN;;AACA,YAAIF,KAAK,CAACG,MAAN,CAAaC,aAAb,CAA2BC,OAA3B,KAAuC,IAAvC,IAA+CL,KAAK,CAACG,MAAN,CAAaC,aAAb,CAA2BC,OAA3B,KAAuC,IAAtF,IAA8FL,KAAK,CAACG,MAAN,CAAaC,aAAb,CAA2BC,OAA3B,KAAuC,KAAzI,EAAgJ;AAE5IR,UAAAA,IAAI,CAACS,GAAL,CAAUC,GAAD,IAAS;AACd,gBAAIA,GAAG,CAACC,GAAJ,KAAYP,IAAhB,EAAsB;AAClB,mBAAKQ,KAAL,CAAWpB,aAAX,CAAyBkB,GAAzB,EADkB,CACa;;AAC/BjB,cAAAA,uBAAuB,CAACiB,GAAD,CAAvB,CAFkB,CAEY;AACjC;;AAAA;AACJ,WALD;AAMH;;AAAA;AACN,OAb4D;AAAA;;AAe3DG,IAAAA,MAAM,GAAG;AACL,UAAID,KAAK,GAAG,EACR,GAAG,KAAKA,KADA;AAERE,QAAAA,OAAO,EAAE,KAAKZ;AAFN,OAAZ;AAIA,0BACI,oBAAC,SAAD,oBAAeU,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAGH;;AAvB0D;;AAyB/D,SAAOrB,OAAO,CAACG,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CI,gCAA7C,CAAP;AACH,CA9BD;;AA+BA,eAAeH,kBAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { saveDataStore } from '../store/BasisReport/actions/actionFocusData';\r\n\r\nimport { focusRowColorBackground } from '../functions/focusRowColorBackground';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        focusData: state.focusData, //что хранится в фокусе\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveDataStore\r\n}\r\n\r\n\r\nconst withClickSaveFocus = (Component, base) => {\r\n\r\n\r\n        \r\n    class ComponentWithClickSaveFocusTable extends React.Component {\r\n\r\n        handlerTableRowUID = (event, data) => { //фокус на строку\r\n            event.preventDefault();\r\n            if (event.target.parentElement.tagName === 'TR' || event.target.parentElement.tagName === 'TD' || event.target.parentElement.tagName === 'DIV') {\r\n\r\n                base.map((obj) => {\r\n                    if (obj.uid === data) {\r\n                        this.props.saveDataStore(obj); // сохранить в хранилище для изменений\r\n                        focusRowColorBackground(obj); // выделить фокус цветом\r\n                    };\r\n                });\r\n            };\r\n      }\r\n\r\n        render() {\r\n            let props = {\r\n                ...this.props,\r\n                onclick: this.handlerTableRowUID\r\n            }\r\n            return (\r\n                <Component {...props} />\r\n                )\r\n        }\r\n    }\r\n    return connect(mapStateToProps, mapDispatchToProps)(ComponentWithClickSaveFocusTable)\r\n}\r\nexport default withClickSaveFocus"]},"metadata":{},"sourceType":"module"}