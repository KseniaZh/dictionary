{"ast":null,"code":"import { takeEvery, select, put, call } from 'redux-saga/effects';\nimport { saveDataAuthorization } from '../../store/Authorization/actionsAuthorization';\nimport fetchData from '../../functions/fetchData';\nimport { url_User_POST } from \"../../constans/url\";\nimport { START_POST_REQUEST_AUTH } from '../../store/Authorization/types';\nexport function* workerStart_Authorization_POST_RequestServer() {\n  const stateSendServer = yield select(state => state.createDataEltypeClass.stateData);\n\n  try {\n    delete stateSendServer.uid;\n    delete stateSendServer.isDeleted;\n    delete stateSendServer.isTemplate;\n    const data = yield call(fetchData, url_User_POST, 'POST', stateSendServer);\n    yield put(postRequestServer(data));\n  } catch (error) {\n    console.log('workerStartRequestServer error ', error);\n  }\n}\nexport function* watch_Authorization_POST_RequestServer() {\n  yield takeEvery(START_POST_REQUEST_AUTH, workerStart_Authorization_POST_RequestServer);\n}","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/sagas/Authorization/sagas_POST_Authorization.js"],"names":["takeEvery","select","put","call","saveDataAuthorization","fetchData","url_User_POST","START_POST_REQUEST_AUTH","workerStart_Authorization_POST_RequestServer","stateSendServer","state","createDataEltypeClass","stateData","uid","isDeleted","isTemplate","data","postRequestServer","error","console","log","watch_Authorization_POST_RequestServer"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,GAA5B,EAAiCC,IAAjC,QAA6C,oBAA7C;AACA,SAASC,qBAAT,QAAsC,gDAAtC;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,uBAAT,QAAwC,iCAAxC;AAEA,OAAO,UAAUC,4CAAV,GAAwD;AAE3D,QAAMC,eAAe,GAAG,MAAMR,MAAM,CAACS,KAAK,IAAIA,KAAK,CAACC,qBAAN,CAA4BC,SAAtC,CAApC;;AAEA,MAAI;AACA,WAAOH,eAAe,CAACI,GAAvB;AACA,WAAOJ,eAAe,CAACK,SAAvB;AACA,WAAOL,eAAe,CAACM,UAAvB;AAEA,UAAMC,IAAI,GAAG,MAAMb,IAAI,CAACE,SAAD,EAAYC,aAAZ,EAA2B,MAA3B,EAAmCG,eAAnC,CAAvB;AAEA,UAAMP,GAAG,CAACe,iBAAiB,CAACD,IAAD,CAAlB,CAAT;AAEH,GATD,CASE,OAAOE,KAAP,EAAc;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CF,KAA/C;AACF;AACJ;AAED,OAAO,UAAUG,sCAAV,GAAkD;AAErD,QAAMrB,SAAS,CAACO,uBAAD,EAA0BC,4CAA1B,CAAf;AAEH","sourcesContent":["import { takeEvery, select, put, call } from 'redux-saga/effects';\r\nimport { saveDataAuthorization } from '../../store/Authorization/actionsAuthorization';\r\nimport fetchData from '../../functions/fetchData';\r\nimport { url_User_POST } from \"../../constans/url\";\r\nimport { START_POST_REQUEST_AUTH } from '../../store/Authorization/types';\r\n\r\nexport function* workerStart_Authorization_POST_RequestServer(){\r\n    \r\n    const stateSendServer = yield select(state => state.createDataEltypeClass.stateData);\r\n    \r\n    try {\r\n        delete stateSendServer.uid;\r\n        delete stateSendServer.isDeleted;\r\n        delete stateSendServer.isTemplate;\r\n\r\n        const data = yield call(fetchData, url_User_POST, 'POST', stateSendServer);\r\n        \r\n        yield put(postRequestServer(data));\r\n         \r\n    } catch (error) {\r\n       console.log('workerStartRequestServer error ', error);\r\n    }\r\n}\r\n\r\nexport function* watch_Authorization_POST_RequestServer(){\r\n    \r\n    yield takeEvery(START_POST_REQUEST_AUTH, workerStart_Authorization_POST_RequestServer)\r\n\r\n}"]},"metadata":{},"sourceType":"module"}