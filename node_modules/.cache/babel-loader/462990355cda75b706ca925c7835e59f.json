{"ast":null,"code":"import { takeEvery, select, put, call } from 'redux-saga/effects';\nimport { getRequestServer } from '../../store/serverViewType/actions/actionViewType';\nimport { url_POST } from \"../../constans/url\";\nimport { START_POST_REQUEST } from '../../store/windowCreateNewData/types'; //import {newDataFromServer} from '../../containers/EditWindow/ContEditWindow'\n\nconst url = \"http://localhost:5000/api/ViewType/add\"; //export function fetchData(){\n//    return fetch(\"http://localhost:5000/api/ViewType\")\n//        .then(response => response.json())\n//}\n\nexport function fetchData() {\n  console.log('Это fetch POST'); //    const newDataFromStore = useSelector(state => state.WindowCreateNewData.stateData);\n\n  return;\n  fetch(url_POST, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      uid: 11451145,\n      name: \"114511145\",\n      comment: \"11451145\",\n      classViewProperty: \"11451111145\",\n      dbTable: \"1145111145\"\n    })\n  }).then(response => response.json()).catch(err => console.log(err));\n}\nexport function RequestData(data) {\n  console.log('Это RequestData', data);\n  getRequestServer(data);\n}\nexport function* workerStart_POST_RequestServer() {\n  console.log('workerStart_POST_RequestServer ');\n\n  try {\n    //        const data = yield call(fetchData);\n    const state = yield select();\n    console.log(\"Результат запроса state\", state.WindowCreateNewData); //        yield put(RequestData(data));\n  } catch (error) {\n    alert('workerStart_POST_RequestServer error ', error);\n  }\n}\nexport function* watchStart_POST_RequestServer() {\n  yield takeEvery(START_POST_REQUEST, workerStart_POST_RequestServer);\n}","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/sagas/ViewType/sagasNewDataViewType.js"],"names":["takeEvery","select","put","call","getRequestServer","url_POST","START_POST_REQUEST","url","fetchData","console","log","fetch","method","headers","body","JSON","stringify","uid","name","comment","classViewProperty","dbTable","then","response","json","catch","err","RequestData","data","workerStart_POST_RequestServer","state","WindowCreateNewData","error","alert","watchStart_POST_RequestServer"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,GAA5B,EAAiCC,IAAjC,QAA6C,oBAA7C;AACA,SAAQC,gBAAR,QAA+B,mDAA/B;AACA,SAAQC,QAAR,QAAuB,oBAAvB;AACA,SAAQC,kBAAR,QAAiC,uCAAjC,C,CACA;;AAIA,MAAMC,GAAG,GAAG,wCAAZ,C,CACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,SAAT,GAAoB;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EADuB,CAE3B;;AACI;AACIC,EAAAA,KAAK,CAAEN,QAAF,EAAW;AACRO,IAAAA,MAAM,EAAE,MADA;AAERC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFD;AAKRC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACbC,MAAAA,GAAG,EAAE,QADQ;AAEbC,MAAAA,IAAI,EAAE,WAFO;AAGbC,MAAAA,OAAO,EAAE,UAHI;AAIbC,MAAAA,iBAAiB,EAAE,aAJN;AAKbC,MAAAA,OAAO,EAAE;AALI,KAAf;AALE,GAAX,CAAL,CAaCC,IAbD,CAaMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAblB,EAcCC,KAdD,CAcOC,GAAG,IAAIjB,OAAO,CAACC,GAAR,CAAYgB,GAAZ,CAdd;AAeP;AACD,OAAO,SAASC,WAAT,CAAqBC,IAArB,EAA0B;AAC7BnB,EAAAA,OAAO,CAACC,GAAR,CAAa,iBAAb,EAAgCkB,IAAhC;AACAxB,EAAAA,gBAAgB,CAACwB,IAAD,CAAhB;AACH;AAED,OAAO,UAAUC,8BAAV,GAA0C;AAE7CpB,EAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;;AAEA,MAAI;AAER;AAEQ,UAAMoB,KAAK,GAAG,MAAM7B,MAAM,EAA1B;AAEAQ,IAAAA,OAAO,CAACC,GAAR,CAAa,yBAAb,EAAwCoB,KAAK,CAACC,mBAA9C,EANA,CAQR;AAEK,GAVD,CAUE,OAAOC,KAAP,EAAc;AACZC,IAAAA,KAAK,CAAC,uCAAD,EAA0CD,KAA1C,CAAL;AACH;AAEJ;AAED,OAAO,UAAUE,6BAAV,GAAyC;AAE5C,QAAMlC,SAAS,CAACM,kBAAD,EAAqBuB,8BAArB,CAAf;AACH","sourcesContent":["import { takeEvery, select, put, call } from 'redux-saga/effects';\r\nimport {getRequestServer} from '../../store/serverViewType/actions/actionViewType';\r\nimport {url_POST} from \"../../constans/url\"\r\nimport {START_POST_REQUEST} from '../../store/windowCreateNewData/types';\r\n//import {newDataFromServer} from '../../containers/EditWindow/ContEditWindow'\r\n\r\n\r\n\r\nconst url = \"http://localhost:5000/api/ViewType/add\"\r\n//export function fetchData(){\r\n//    return fetch(\"http://localhost:5000/api/ViewType\")\r\n//        .then(response => response.json())\r\n//}\r\n\r\nexport function fetchData(){\r\n    console.log('Это fetch POST')\r\n//    const newDataFromStore = useSelector(state => state.WindowCreateNewData.stateData);\r\n    return\r\n        fetch( url_POST,{\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                  },\r\n                body: JSON.stringify({\r\n                        uid: 11451145,\r\n                        name: \"114511145\",\r\n                        comment: \"11451145\",\r\n                        classViewProperty: \"11451111145\",\r\n                        dbTable: \"1145111145\"\r\n                })\r\n                })\r\n        .then(response => response.json())\r\n        .catch(err => console.log(err))\r\n}\r\nexport function RequestData(data){\r\n    console.log( 'Это RequestData', data);\r\n    getRequestServer(data);\r\n}\r\n\r\nexport function* workerStart_POST_RequestServer(){\r\n     \r\n    console.log('workerStart_POST_RequestServer ');\r\n    \r\n    try {\r\n        \r\n//        const data = yield call(fetchData);\r\n        \r\n        const state = yield select();\r\n        \r\n        console.log (\"Результат запроса state\", state.WindowCreateNewData);\r\n\r\n//        yield put(RequestData(data));\r\n        \r\n    } catch (error) {\r\n        alert('workerStart_POST_RequestServer error ', error);\r\n    }\r\n \r\n}\r\n\r\nexport function* watchStart_POST_RequestServer(){\r\n    \r\n    yield takeEvery(START_POST_REQUEST, workerStart_POST_RequestServer)\r\n}"]},"metadata":{},"sourceType":"module"}