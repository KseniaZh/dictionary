{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\containers\\\\Navigation\\\\Header.js\";\nimport React, { useState } from 'react';\nimport NavigationWindowBlind from '../../UserInterface/Navigation/NavigationWindowBlind';\nimport NavigationToggle from '../../UserInterface/Navigation/NavigationToggle';\nimport ButtonLinkSmall from '../../UserInterface/Buttons/Button/ButtonLinkSmall';\nimport ButtonLinkNotMouse from '../../UserInterface/Buttons/Button/ButtonLinkNotMouse';\nimport ButtonNavigation from '../../UserInterface/Buttons/ButtonNavigation';\nimport hoverDescription from '../../hoc/hoverDescription';\nimport { aboutLinks } from \"../../constans/aboutLinks\";\n\nfunction Header(props) {\n  const [linkAbout, setLinkAbout] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const [isOpenAbout, setIsOpenAbout] = useState(false);\n  const navStyle = [\"Navigation\"];\n\n  if (!isOpen) {\n    navStyle.push(\"close\");\n  }\n\n  ;\n\n  const hendlerHoverLink = data => {\n    setLinkAbout(aboutLinks[data]);\n    setIsOpenAbout(true);\n  };\n\n  const hendlerLeaveLink = () => {\n    setLinkAbout(\"\");\n    setIsOpenAbout(false);\n  };\n\n  const hendlerToggleNavigation = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const hendlerCloseNavigation = () => {\n    setIsOpen(false);\n  };\n\n  const ButtonNew = hoverDescription(ButtonLinkNotMouse);\n  const pages = [{\n    to: '/',\n    name: 'Home'\n  }, {\n    to: '/EltypeClass',\n    name: 'EltypeClass'\n  }, {\n    to: '/ViewType',\n    name: 'ViewType'\n  }];\n  return /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    className: navStyle.join(' '),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ButtonLinkSmall, {\n    to: \"/Personalize\",\n    icon: \"fa fa-user-circle-o\",\n    classname: \"PersonalizeButton\",\n    onmouseover: () => hendlerHoverLink('Personalize'),\n    onmouseleave: hendlerLeaveLink,\n    onclick: hendlerCloseNavigation,\n    tabindex: \"-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }), pages.map((page, index) => /*#__PURE__*/React.createElement(ButtonNavigation, {\n    to: page.to,\n    name: page.name,\n    onclick: hendlerCloseNavigation,\n    classname: \"NavigationButtonLink\",\n    tabIndex: index + 1,\n    key: index + 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }))), isOpen ? /*#__PURE__*/React.createElement(NavigationWindowBlind, {\n    isOpen: isOpen,\n    onClick: hendlerCloseNavigation,\n    classname: \"NavigationWindowBlind\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }) : null, /*#__PURE__*/React.createElement(NavigationToggle, {\n    openNavigation: hendlerToggleNavigation,\n    isOpen: isOpen,\n    classname: \"NavigationToggle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Header;","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/containers/Navigation/Header.js"],"names":["React","useState","NavigationWindowBlind","NavigationToggle","ButtonLinkSmall","ButtonLinkNotMouse","ButtonNavigation","hoverDescription","aboutLinks","Header","props","linkAbout","setLinkAbout","isOpen","setIsOpen","isOpenAbout","setIsOpenAbout","navStyle","push","hendlerHoverLink","data","hendlerLeaveLink","hendlerToggleNavigation","hendlerCloseNavigation","ButtonNew","pages","to","name","join","map","page","index"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\r\n\r\nimport NavigationWindowBlind from '../../UserInterface/Navigation/NavigationWindowBlind';\r\nimport NavigationToggle from '../../UserInterface/Navigation/NavigationToggle';\r\n\r\nimport ButtonLinkSmall from '../../UserInterface/Buttons/Button/ButtonLinkSmall';\r\nimport ButtonLinkNotMouse from '../../UserInterface/Buttons/Button/ButtonLinkNotMouse';\r\nimport ButtonNavigation from '../../UserInterface/Buttons/ButtonNavigation';\r\n\r\nimport hoverDescription from '../../hoc/hoverDescription';\r\n\r\nimport { aboutLinks } from \"../../constans/aboutLinks\";\r\n\r\n\r\nfunction Header(props) {\r\n\r\n   \r\n    const [linkAbout, setLinkAbout] = useState(\"\");\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [isOpenAbout, setIsOpenAbout] = useState(false);\r\n\r\n    const navStyle = [\"Navigation\"];\r\n    if (!isOpen) {\r\n        navStyle.push(\"close\");\r\n    };\r\n\r\n    const hendlerHoverLink = (data) => {\r\n        setLinkAbout(aboutLinks[data]);\r\n        setIsOpenAbout(true);\r\n    }\r\n    const hendlerLeaveLink = () => {\r\n        setLinkAbout(\"\");\r\n        setIsOpenAbout(false);\r\n    }\r\n    const hendlerToggleNavigation = () => {\r\n        setIsOpen(!isOpen);\r\n    }\r\n    const hendlerCloseNavigation = () => {\r\n        setIsOpen(false);\r\n    }\r\n\r\n    const ButtonNew = hoverDescription(ButtonLinkNotMouse);\r\n \r\n\r\n\r\n\r\n    const pages = [\r\n        {\r\n            to: '/',\r\n            name: 'Home'\r\n        },\r\n        {\r\n            to: '/EltypeClass',\r\n            name: 'EltypeClass'\r\n        },\r\n        {\r\n            to: '/ViewType',\r\n            name: 'ViewType'\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <header>\r\n            <nav className={navStyle.join(' ')}>\r\n\r\n                    <ButtonLinkSmall\r\n                            to='/Personalize'\r\n                            icon=\"fa fa-user-circle-o\"\r\n                            classname=\"PersonalizeButton\"\r\n                            onmouseover={() => hendlerHoverLink('Personalize')}\r\n                            onmouseleave={hendlerLeaveLink}\r\n                            onclick={hendlerCloseNavigation}\r\n                            tabindex=\"-1\"\r\n                    />\r\n                    {\r\n                        pages.map((page, index) => \r\n                            <ButtonNavigation\r\n                                            to={page.to}\r\n                                            name={page.name}\r\n                                            onclick={hendlerCloseNavigation}\r\n                                            classname='NavigationButtonLink'\r\n                                            tabIndex={index + 1}\r\n                                            key={index +1}\r\n                                    />\r\n                        )\r\n                }\r\n                \r\n            </nav>\r\n \r\n            {\r\n                isOpen ?\r\n                    <NavigationWindowBlind\r\n                        isOpen={isOpen}\r\n                        onClick={hendlerCloseNavigation}\r\n                        classname=\"NavigationWindowBlind\"\r\n                    />\r\n                    : null\r\n            }\r\n            \r\n            <NavigationToggle\r\n                openNavigation={hendlerToggleNavigation}\r\n                isOpen={isOpen}\r\n                classname='NavigationToggle'\r\n            />\r\n\r\n        </header>\r\n    )\r\n}\r\nexport default Header\r\n"]},"metadata":{},"sourceType":"module"}