{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\hoc\\\\withContextMenuWindow.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = state => {\n  return {\n    focusData: state.createDataEltypeClass.stateData\n  };\n};\n\nconst withContextMenuWindow = (Component, ComponentContextMenuWindow, stateCharacteristic, classname) => {\n  class ComponentWithDescription extends React.Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        isOpen: false,\n        clientX: '',\n        clientY: ''\n      };\n\n      this.openContextMenu = event => {\n        event.preventDefault();\n        console.log('открыть меню');\n        this.setState({\n          isOpen: true,\n          clientX: event.clientX,\n          clientY: event.clientY\n        });\n      };\n\n      this.closeContextMenu = event => {\n        event.preventDefault();\n        this.setState({\n          isOpen: false,\n          clientX: '',\n          clientY: ''\n        });\n      };\n    }\n\n    componentDidMount() {\n      document.addEventListener(\"contextmenu\", this.openContextMenu);\n      document.addEventListener(\"click\", this.closeContextMenu);\n      document.addEventListener(\"scroll\", this.closeContextMenu);\n    }\n\n    componentWillUnmount() {\n      document.removeEventListener(\"contextmenu\", this.openContextMenu);\n      document.removeEventListener(\"click\", this.closeContextMenu);\n      document.removeEventListener(\"scroll\", this.closeContextMenu);\n    }\n\n    render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Component, Object.assign({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      })), this.state.isOpen ? /*#__PURE__*/React.createElement(ComponentContextMenuWindow, {\n        stateCharacteristic: stateCharacteristic,\n        classname: classname,\n        clientX: this.state.clientX,\n        clientY: this.state.clientY,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }\n      }) : null);\n    }\n\n  }\n\n  return connect(mapStateToProps)(ComponentWithDescription);\n};\n\nexport default withContextMenuWindow;","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/hoc/withContextMenuWindow.js"],"names":["React","connect","mapStateToProps","state","focusData","createDataEltypeClass","stateData","withContextMenuWindow","Component","ComponentContextMenuWindow","stateCharacteristic","classname","ComponentWithDescription","isOpen","clientX","clientY","openContextMenu","event","preventDefault","console","log","setState","closeContextMenu","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","render","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,SAAS,EAAED,KAAK,CAACE,qBAAN,CAA4BC;AADpC,GAAP;AAGH,CAJD;;AAMA,MAAMC,qBAAqB,GAAG,CAACC,SAAD,EAAYC,0BAAZ,EAAwCC,mBAAxC,EAA6DC,SAA7D,KAA2E;AAErG,QAAMC,wBAAN,SAAuCZ,KAAK,CAACQ,SAA7C,CAAuD;AAAA;AAAA;AAAA,WAEpDL,KAFoD,GAE5C;AACIU,QAAAA,MAAM,EAAE,KADZ;AAEIC,QAAAA,OAAO,EAAE,EAFb;AAGIC,QAAAA,OAAO,EAAE;AAHb,OAF4C;;AAAA,WAQnDC,eARmD,GAQhCC,KAAD,IAAW;AACzBA,QAAAA,KAAK,CAACC,cAAN;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACgB,aAAKC,QAAL,CAAc;AACER,UAAAA,MAAM,EAAE,IADV;AAEEC,UAAAA,OAAO,EAAEG,KAAK,CAACH,OAFjB;AAGEC,UAAAA,OAAO,EAAEE,KAAK,CAACF;AAHjB,SAAd;AAKf,OAhB8C;;AAAA,WAiBnDO,gBAjBmD,GAiB/BL,KAAD,IAAW;AACdA,QAAAA,KAAK,CAACC,cAAN;AACI,aAAKG,QAAL,CAAc;AACVR,UAAAA,MAAM,EAAE,KADE;AAEVC,UAAAA,OAAO,EAAE,EAFC;AAGVC,UAAAA,OAAO,EAAE;AAHC,SAAd;AAKf,OAxB8C;AAAA;;AAyBnDQ,IAAAA,iBAAiB,GAAG;AAChBC,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,aAA1B,EAAyC,KAAKT,eAA9C;AACAQ,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmC,KAAKH,gBAAxC;AACAE,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,QAA1B,EAAoC,KAAKH,gBAAzC;AACH;;AAEDI,IAAAA,oBAAoB,GAAG;AACnBF,MAAAA,QAAQ,CAACG,mBAAT,CAA6B,aAA7B,EAA4C,KAAKX,eAAjD;AACAQ,MAAAA,QAAQ,CAACG,mBAAT,CAA6B,OAA7B,EAAsC,KAAKL,gBAA3C;AACAE,MAAAA,QAAQ,CAACG,mBAAT,CAA6B,QAA7B,EAAuC,KAAKL,gBAA5C;AACH;;AACFM,IAAAA,MAAM,GAAG;AACJ,0BACI,uDACI,oBAAC,SAAD,oBAAe,KAAKC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,EAGQ,KAAK1B,KAAL,CAAWU,MAAX,gBACI,oBAAC,0BAAD;AACO,QAAA,mBAAmB,EAAEH,mBAD5B;AAEO,QAAA,SAAS,EAAEC,SAFlB;AAGO,QAAA,OAAO,EAAE,KAAKR,KAAL,CAAWW,OAH3B;AAIO,QAAA,OAAO,EAAE,KAAKX,KAAL,CAAWY,OAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,GAOK,IAVb,CADJ;AAeH;;AApDkD;;AAuDvD,SAAOd,OAAO,CAACC,eAAD,CAAP,CAAyBU,wBAAzB,CAAP;AACH,CA1DD;;AA4DA,eAAeL,qBAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        focusData: state.createDataEltypeClass.stateData,\r\n    }\r\n}\r\n\r\nconst withContextMenuWindow = (Component, ComponentContextMenuWindow, stateCharacteristic, classname) => {\r\n\r\n    class ComponentWithDescription extends React.Component {\r\n\r\n       state = {\r\n                   isOpen: false,\r\n                   clientX: '',\r\n                   clientY: ''\r\n        }; // состояние наведения хранится в индивидуальном для каждого компонента хуке, в создаваемом в момент рейдинга\r\n\r\n        openContextMenu = (event) => {\r\n            event.preventDefault();\r\n            console.log('открыть меню')\r\n                            this.setState({\r\n                                            isOpen: true,\r\n                                            clientX: event.clientX,\r\n                                            clientY: event.clientY\r\n                                });\r\n            }\r\n        closeContextMenu = (event) => {\r\n                        event.preventDefault();\r\n                            this.setState({\r\n                                isOpen: false,\r\n                                clientX: '',\r\n                                clientY: ''\r\n                            });\r\n            }\r\n        componentDidMount() {\r\n            document.addEventListener(\"contextmenu\", this.openContextMenu);\r\n            document.addEventListener(\"click\", this.closeContextMenu);\r\n            document.addEventListener(\"scroll\", this.closeContextMenu);\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            document.removeEventListener(\"contextmenu\", this.openContextMenu);\r\n            document.removeEventListener(\"click\", this.closeContextMenu);\r\n            document.removeEventListener(\"scroll\", this.closeContextMenu);\r\n        }\r\n       render() {  \r\n            return(\r\n                <>\r\n                    <Component {...this.props} />\r\n                    {\r\n                        this.state.isOpen ?\r\n                            <ComponentContextMenuWindow\r\n                                   stateCharacteristic={stateCharacteristic}\r\n                                   classname={classname}\r\n                                   clientX={this.state.clientX}\r\n                                   clientY={this.state.clientY}\r\n                               />\r\n                           : null\r\n                   }\r\n               </> \r\n                )\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps)(ComponentWithDescription)\r\n}\r\n\r\nexport default withContextMenuWindow"]},"metadata":{},"sourceType":"module"}