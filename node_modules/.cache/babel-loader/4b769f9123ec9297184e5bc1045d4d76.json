{"ast":null,"code":"import { takeEvery, put, call } from 'redux-saga/effects';\nimport { getRequestServer } from '../../store/serverViewType/actions/actionViewType';\nimport { START_POST_REQUEST } from '../../store/windowCreateNewData/types';\nconst body_save = {\n  uid: 123,\n  name: \"aaa\",\n  comment: \"aaa\",\n  classViewProperty: \"aaa\",\n  dbTable: \"aaa\"\n};\nconst url = \"http://localhost:5000/api/ViewType/add\";\nexport function fetchData() {\n  console.log('Это fetch POST');\n  return;\n  fetch(\"http://localhost:5000/api/ViewType/add\", {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json;charset=utf-8'\n    },\n    body: JSON.stringify(body_save)\n  }).then(response => response.json()).catch(err => console.log(err));\n}\nexport function* workerStart_POST_RequestServer() {\n  console.log('workerStart_POST_RequestServer ');\n\n  try {\n    const data = yield call(fetchData);\n    yield put(getRequestServer(data));\n  } catch (error) {\n    alert('workerStart_POST_RequestServer error ', error);\n  }\n}\nexport function* watchStart_POST_RequestServer() {\n  yield takeEvery(START_POST_REQUEST, workerStart_POST_RequestServer);\n}","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/sagas/ViewType/sagasNewDataViewType.js"],"names":["takeEvery","put","call","getRequestServer","START_POST_REQUEST","body_save","uid","name","comment","classViewProperty","dbTable","url","fetchData","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","catch","err","workerStart_POST_RequestServer","data","error","alert","watchStart_POST_RequestServer"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,QAAqC,oBAArC;AACA,SAAQC,gBAAR,QAA+B,mDAA/B;AACA,SAAQC,kBAAR,QAAiC,uCAAjC;AAEA,MAAMC,SAAS,GAAG;AACFC,EAAAA,GAAG,EAAE,GADH;AAEFC,EAAAA,IAAI,EAAE,KAFJ;AAGFC,EAAAA,OAAO,EAAE,KAHP;AAIFC,EAAAA,iBAAiB,EAAE,KAJjB;AAKFC,EAAAA,OAAO,EAAE;AALP,CAAlB;AAOA,MAAMC,GAAG,GAAG,wCAAZ;AAGA,OAAO,SAASC,SAAT,GAAoB;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA;AACIC,EAAAA,KAAK,CAAE,wCAAF,EAA2C;AACxCC,IAAAA,MAAM,EAAE,MADgC;AAExCC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAF+B;AAKxCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAef,SAAf;AALkC,GAA3C,CAAL,CAOCgB,IAPD,CAOMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPlB,EAQCC,KARD,CAQOC,GAAG,IAAIZ,OAAO,CAACC,GAAR,CAAYW,GAAZ,CARd;AASP;AAED,OAAO,UAAUC,8BAAV,GAA0C;AAE7Cb,EAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;;AAEA,MAAI;AAEA,UAAMa,IAAI,GAAG,MAAMzB,IAAI,CAACU,SAAD,CAAvB;AAEA,UAAMX,GAAG,CAACE,gBAAgB,CAACwB,IAAD,CAAjB,CAAT;AAEH,GAND,CAME,OAAOC,KAAP,EAAc;AACZC,IAAAA,KAAK,CAAC,uCAAD,EAA0CD,KAA1C,CAAL;AACH;AAEJ;AAED,OAAO,UAAUE,6BAAV,GAAyC;AAE5C,QAAM9B,SAAS,CAACI,kBAAD,EAAqBsB,8BAArB,CAAf;AACH","sourcesContent":["import { takeEvery, put, call } from 'redux-saga/effects';\r\nimport {getRequestServer} from '../../store/serverViewType/actions/actionViewType';\r\nimport {START_POST_REQUEST} from '../../store/windowCreateNewData/types';\r\n\r\nconst body_save = {\r\n                uid: 123,\r\n                name: \"aaa\",\r\n                comment: \"aaa\",\r\n                classViewProperty: \"aaa\",\r\n                dbTable: \"aaa\"\r\n            }\r\nconst url = \"http://localhost:5000/api/ViewType/add\"\r\n\r\n\r\nexport function fetchData(){\r\n    console.log('Это fetch POST')\r\n    return\r\n        fetch( \"http://localhost:5000/api/ViewType/add\",{\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json;charset=utf-8'\r\n                  },\r\n                body: JSON.stringify(body_save)\r\n                })\r\n        .then(response => response.json())\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nexport function* workerStart_POST_RequestServer(){\r\n     \r\n    console.log('workerStart_POST_RequestServer ');\r\n    \r\n    try {\r\n        \r\n        const data = yield call(fetchData);\r\n\r\n        yield put(getRequestServer(data));\r\n        \r\n    } catch (error) {\r\n        alert('workerStart_POST_RequestServer error ', error);\r\n    }\r\n \r\n}\r\n\r\nexport function* watchStart_POST_RequestServer(){\r\n    \r\n    yield takeEvery(START_POST_REQUEST, workerStart_POST_RequestServer)\r\n}"]},"metadata":{},"sourceType":"module"}