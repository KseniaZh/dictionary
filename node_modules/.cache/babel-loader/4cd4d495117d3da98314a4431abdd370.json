{"ast":null,"code":"import { takeEvery, select, put, call } from 'redux-saga/effects';\nimport { getRequestServer } from '../../store/EltypeClass/actions/actionEltypeClass';\nimport { loadingShow, getCounterPagesTable, getDataPageRowTable, getArrNumberRowList } from '../../store/EltypeClass/actions/actionsFlagsEltypeClass';\nimport { START_GET_REQUEST } from '../../store/EltypeClass/types';\nimport fetchData from '../../functions/fetchData';\nimport { url_EltypeClass } from \"../../constans/url\";\nexport function* workerStart_GET_RequestServer() {\n  try {\n    const countRowTable = yield select(state => state.stateFlagsEltypeClass.countRowTable);\n    const numberOpenPage = yield select(state => state.stateFlagsEltypeClass.numberOpenPage);\n    yield put(loadingShow(true));\n    const data = yield call(fetchData, url_EltypeClass);\n    yield put(getRequestServer(data));\n    yield put(getCounterPagesTable(data, countRowTable));\n    yield put(getDataPageRowTable(data, countRowTable, numberOpenPage));\n    yield put(getArrNumberRowList(data, countRowTable, numberOpenPage));\n    yield put(loadingShow(false));\n  } catch (error) {\n    console.log('workerStart_GET_RequestServer error ', error);\n  }\n}\nexport function* watch_EltypeClass_GET_RequestServer() {\n  yield takeEvery(START_GET_REQUEST, workerStart_GET_RequestServer);\n}","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/sagas/EltypeClass/sagas_GET_EltypeClass.js"],"names":["takeEvery","select","put","call","getRequestServer","loadingShow","getCounterPagesTable","getDataPageRowTable","getArrNumberRowList","START_GET_REQUEST","fetchData","url_EltypeClass","workerStart_GET_RequestServer","countRowTable","state","stateFlagsEltypeClass","numberOpenPage","data","error","console","log","watch_EltypeClass_GET_RequestServer"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,GAA5B,EAAiCC,IAAjC,QAA6C,oBAA7C;AACA,SAASC,gBAAT,QAAiC,mDAAjC;AACA,SACYC,WADZ,EAEYC,oBAFZ,EAGYC,mBAHZ,EAIYC,mBAJZ,QAKuC,yDALvC;AAMA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,eAAT,QAA+B,oBAA/B;AAGA,OAAO,UAAUC,6BAAV,GAAyC;AAE5C,MAAI;AACA,UAAMC,aAAa,GAAG,MAAMZ,MAAM,CAACa,KAAK,IAAIA,KAAK,CAACC,qBAAN,CAA4BF,aAAtC,CAAlC;AACA,UAAMG,cAAc,GAAG,MAAMf,MAAM,CAACa,KAAK,IAAIA,KAAK,CAACC,qBAAN,CAA4BC,cAAtC,CAAnC;AAEA,UAAMd,GAAG,CAACG,WAAW,CAAC,IAAD,CAAZ,CAAT;AAEA,UAAMY,IAAI,GAAG,MAAMd,IAAI,CAACO,SAAD,EAAYC,eAAZ,CAAvB;AAEA,UAAMT,GAAG,CAACE,gBAAgB,CAACa,IAAD,CAAjB,CAAT;AACA,UAAMf,GAAG,CAACI,oBAAoB,CAACW,IAAD,EAAOJ,aAAP,CAArB,CAAT;AACA,UAAMX,GAAG,CAACK,mBAAmB,CAACU,IAAD,EAAOJ,aAAP,EAAsBG,cAAtB,CAApB,CAAT;AACA,UAAMd,GAAG,CAACM,mBAAmB,CAACS,IAAD,EAAOJ,aAAP,EAAsBG,cAAtB,CAApB,CAAT;AAEA,UAAMd,GAAG,CAACG,WAAW,CAAC,KAAD,CAAZ,CAAT;AAEH,GAfD,CAeE,OAAOa,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDF,KAApD;AACH;AACJ;AAED,OAAO,UAAUG,mCAAV,GAA+C;AAElD,QAAMrB,SAAS,CAACS,iBAAD,EAAoBG,6BAApB,CAAf;AACH","sourcesContent":["import { takeEvery, select, put, call } from 'redux-saga/effects';\r\nimport { getRequestServer } from '../../store/EltypeClass/actions/actionEltypeClass';\r\nimport {\r\n            loadingShow,\r\n            getCounterPagesTable,\r\n            getDataPageRowTable,\r\n            getArrNumberRowList\r\n                                } from '../../store/EltypeClass/actions/actionsFlagsEltypeClass';\r\nimport { START_GET_REQUEST } from '../../store/EltypeClass/types';\r\nimport fetchData from '../../functions/fetchData';\r\nimport { url_EltypeClass} from \"../../constans/url\"\r\n\r\n\r\nexport function* workerStart_GET_RequestServer(){\r\n    \r\n    try {\r\n        const countRowTable = yield select(state => state.stateFlagsEltypeClass.countRowTable);\r\n        const numberOpenPage = yield select(state => state.stateFlagsEltypeClass.numberOpenPage);\r\n\r\n        yield put(loadingShow(true));\r\n\r\n        const data = yield call(fetchData, url_EltypeClass);\r\n\r\n        yield put(getRequestServer(data));\r\n        yield put(getCounterPagesTable(data, countRowTable));\r\n        yield put(getDataPageRowTable(data, countRowTable, numberOpenPage));\r\n        yield put(getArrNumberRowList(data, countRowTable, numberOpenPage));\r\n\r\n        yield put(loadingShow(false));\r\n  \r\n    } catch (error) {\r\n        console.log('workerStart_GET_RequestServer error ', error);\r\n    }\r\n}\r\n\r\nexport function* watch_EltypeClass_GET_RequestServer(){\r\n    \r\n    yield takeEvery(START_GET_REQUEST, workerStart_GET_RequestServer)\r\n}"]},"metadata":{},"sourceType":"module"}