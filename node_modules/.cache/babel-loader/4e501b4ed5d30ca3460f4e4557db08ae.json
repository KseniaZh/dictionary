{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\components\\\\Table\\\\RowTable.js\";\nimport React, { useEffect, useState } from 'react';\nimport ButtonSmall from '../../UserInterface/Buttons/Button/ButtonSmall';\nimport withHoverDescription from '../../hoc/withHoverDescription';\nimport DescriptionButton from '../../components/Description/DescriptionButton';\n\nfunction RowTable(props) {\n  const Keys = Object.keys(props.dataRow).filter(key => key !== \"uid\");\n  const uid = props.dataRow.uid;\n\n  const inputChecked = data => data ? 'checked' : false;\n\n  const [flagButtonRowAddCompare, setFlagButtonRowAddCompare] = useState({\n    flag: true\n  });\n\n  const deleteRowfromCompare = (event, data) => {\n    event.stopPropagation(); //останавливаем всплытие события\n\n    props.onclick(event, uid); // появляется из hoc withClickSaveFocus в компоненте TableList\n\n    props.onclickDelete(data);\n    console.log('убрать из сравнения', data.name);\n  };\n\n  const addRowfromCompare = (event, data) => {\n    event.stopPropagation(); //останавливаем всплытие события\n\n    props.onclick(event, uid); // появляется из hoc withClickSaveFocus в компоненте TableList\n\n    props.onclickButtonRowClickAddCompareData(data);\n    console.log('клик был по ', data.name);\n  };\n\n  const hendlerButtonRow = (event, data) => {\n    if (flagButtonRowAddCompare === true) {\n      addRowfromCompare(event, data);\n      setFlagButtonRowAddCompare({\n        flag: false\n      });\n    } else if (flagButtonRowAddCompare === false) {\n      deleteRowfromCompare(event, data);\n      setFlagButtonRowAddCompare({\n        flag: true\n      });\n    }\n  }; // логика всплывающей подсказки спрятана в hoc, обертка кнопок и подсказка реализованы в ButtonConsoleTable\n\n\n  const ButtonRow = withHoverDescription(ButtonSmall, DescriptionButton);\n  const [colorRow, setColorRow] = useState({\n    background: `${props.colorRowTableBackground}`,\n    'fontWeight': 'normal'\n  });\n\n  const hendlerClick = event => {\n    props.onclick(event, uid);\n  };\n\n  useEffect(() => {\n    if (props.focusData.uid === uid) {\n      setColorRow({\n        background: `${props.colorFocusRowBackground}`,\n        'fontWeight': '600'\n      });\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    className: props.classnameRowTable,\n    style: colorRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, props.flagOpenCompareWindow ? /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ButtonRow, {\n    icon: \"fa fa-times-circle\",\n    onclick: deleteRowfromCompare,\n    data: props.dataRow,\n    name: \"DeleteRow\",\n    classnameDescription: props.classnameDescription,\n    positionDescription: \"no\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  })) : /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 23\n    }\n  }, flagButtonRowAddCompare.flag ? /*#__PURE__*/React.createElement(ButtonRow, {\n    icon: \"fa fa-filter fa-lg\",\n    onclick: hendlerButtonRow,\n    data: props.dataRow,\n    name: \"addCompare\",\n    classnameDescription: props.classnameDescription,\n    positionDescription: \"no\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 33\n    }\n  }) : /*#__PURE__*/React.createElement(ButtonRow, {\n    icon: \"fa fa-times-circle\",\n    onclick: hendlerButtonRow,\n    data: props.dataRow,\n    name: \"DeleteRow\",\n    classnameDescription: props.classnameDescription,\n    positionDescription: \"no\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 35\n    }\n  })), Keys.map((keyObj, index) => {\n    if (props.number <= props.CountRow) {\n      if (props.typeDataColumns[index] === 'text') {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: index,\n          uid: props.dataRow.uid,\n          onClick: hendlerClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 40\n          }\n        }, props.dataRow[keyObj]);\n      }\n\n      if (props.typeDataColumns[index] === 'checkbox') {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: index,\n          uid: props.dataRow.uid,\n          onClick: hendlerClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 40\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"checkbox\",\n          checked: inputChecked(props.dataRow[keyObj]),\n          disabled: \"disabled\",\n          className: props.classnameCheckbox,\n          style: colorRow,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 41\n          }\n        }));\n      }\n    }\n  }));\n}\n\nexport default RowTable; //  const inputChecked = data => data ? <span className=\"fa fa-check\" aria-hidden=\"true\"></span> : null","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/components/Table/RowTable.js"],"names":["React","useEffect","useState","ButtonSmall","withHoverDescription","DescriptionButton","RowTable","props","Keys","Object","keys","dataRow","filter","key","uid","inputChecked","data","flagButtonRowAddCompare","setFlagButtonRowAddCompare","flag","deleteRowfromCompare","event","stopPropagation","onclick","onclickDelete","console","log","name","addRowfromCompare","onclickButtonRowClickAddCompareData","hendlerButtonRow","ButtonRow","colorRow","setColorRow","background","colorRowTableBackground","hendlerClick","focusData","colorFocusRowBackground","classnameRowTable","flagOpenCompareWindow","classnameDescription","map","keyObj","index","number","CountRow","typeDataColumns","classnameCheckbox"],"mappings":"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","sourcesContent":["import React, {useEffect, useState } from 'react';\r\nimport ButtonSmall from '../../UserInterface/Buttons/Button/ButtonSmall';\r\nimport withHoverDescription from '../../hoc/withHoverDescription';\r\nimport DescriptionButton from '../../components/Description/DescriptionButton';\r\n\r\nfunction RowTable(props) {\r\n    \r\n    const Keys = Object.keys(props.dataRow).filter(key => key !== \"uid\");\r\n    const uid = props.dataRow.uid;\r\n\r\n    const inputChecked = data => data ? 'checked' : false;\r\n\r\n    const [flagButtonRowAddCompare, setFlagButtonRowAddCompare] = useState({ flag: true});\r\n\r\n    const deleteRowfromCompare = (event, data) => {\r\n        event.stopPropagation(); //останавливаем всплытие события\r\n        props.onclick(event, uid); // появляется из hoc withClickSaveFocus в компоненте TableList\r\n        props.onclickDelete(data);\r\n        console.log('убрать из сравнения', data.name);\r\n    }\r\n    const addRowfromCompare = (event, data) => {\r\n        event.stopPropagation(); //останавливаем всплытие события\r\n        props.onclick(event, uid); // появляется из hoc withClickSaveFocus в компоненте TableList\r\n        props.onclickButtonRowClickAddCompareData(data);\r\n        console.log('клик был по ', data.name);\r\n    }\r\n    const hendlerButtonRow = (event, data) => {\r\n        if (flagButtonRowAddCompare === true) {\r\n            addRowfromCompare(event, data);\r\n            setFlagButtonRowAddCompare({ flag: false });\r\n        } else if (flagButtonRowAddCompare === false) {\r\n            deleteRowfromCompare(event, data);\r\n            setFlagButtonRowAddCompare({ flag: true });\r\n        }\r\n        \r\n    }\r\n\r\n    // логика всплывающей подсказки спрятана в hoc, обертка кнопок и подсказка реализованы в ButtonConsoleTable\r\n    const ButtonRow = withHoverDescription(ButtonSmall, DescriptionButton);\r\n\r\n    const [colorRow, setColorRow] = useState({ background: `${props.colorRowTableBackground}`, 'fontWeight': 'normal' });\r\n\r\n    const hendlerClick = (event) => {\r\n        props.onclick(event, uid);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.focusData.uid === uid) {\r\n            setColorRow({ background: `${props.colorFocusRowBackground}`, 'fontWeight': '600'});\r\n        }\r\n    }, [])\r\n\r\n    return(\r\n\r\n        <tr className={props.classnameRowTable} style={colorRow}>\r\n            {\r\n                props.flagOpenCompareWindow ?\r\n                    <td>\r\n                        <ButtonRow\r\n                            icon=\"fa fa-times-circle\"\r\n                            onclick={deleteRowfromCompare}\r\n                            data={props.dataRow}\r\n                            name=\"DeleteRow\"\r\n                            classnameDescription={props.classnameDescription }\r\n                            positionDescription=\"no\"\r\n                        />\r\n                    </td>\r\n                    : <td>\r\n                        {\r\n                            flagButtonRowAddCompare.flag ?\r\n                                <ButtonRow\r\n                                    icon=\"fa fa-filter fa-lg\"\r\n                                    onclick={hendlerButtonRow}\r\n                                    data={props.dataRow}\r\n                                    name='addCompare'\r\n                                    classnameDescription={props.classnameDescription}\r\n                                    positionDescription=\"no\"\r\n                                />\r\n                                : <ButtonRow\r\n                                    icon=\"fa fa-times-circle\"\r\n                                    onclick={hendlerButtonRow}\r\n                                    data={props.dataRow}\r\n                                    name=\"DeleteRow\"\r\n                                    classnameDescription={props.classnameDescription}\r\n                                    positionDescription=\"no\"\r\n                                />\r\n                        }\r\n\r\n                    </td>\r\n            }\r\n            \r\n            \r\n            {\r\n                Keys.map((keyObj, index) => {\r\n\r\n                    if (props.number <= props.CountRow) {\r\n\r\n                        if (props.typeDataColumns[index] === 'text') {\r\n                                return <td\r\n                                            key={index}\r\n                                            uid={props.dataRow.uid}\r\n                                            onClick={hendlerClick}\r\n                                        >\r\n                                            {props.dataRow[keyObj]}\r\n                                        </td>\r\n                            }\r\n\r\n                        if (props.typeDataColumns[index] === 'checkbox') {\r\n                                return <td\r\n                                        key={index}\r\n                                        uid={props.dataRow.uid}\r\n                                        onClick={hendlerClick}\r\n                                >\r\n                                        < input\r\n                                            type=\"checkbox\"\r\n                                            checked={inputChecked(props.dataRow[keyObj])}\r\n                                            disabled=\"disabled\"\r\n                                            className={props.classnameCheckbox}\r\n                                            style={colorRow}\r\n                                        />\r\n                                    \r\n                                </td>\r\n                            }\r\n                    }  \r\n                }) \r\n            }\r\n        \r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default RowTable\r\n\r\n//  const inputChecked = data => data ? <span className=\"fa fa-check\" aria-hidden=\"true\"></span> : null\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}