{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\containers\\\\baseEltypeClass\\\\CompareEltypeClass.js\";\nimport React, { useEffect } from 'react';\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport ButtonLinkSmallNotMouse from '../../UserInterface/Buttons/Button/ButtonLinkSmallNotMouse';\nimport ConsoleButton from '../../components/ConsoleButton/ConsoleButton';\nimport HeaderCompare from '../../components/Header/HeaderCompare';\nimport CompareTableEltypeClass from '../../components/Table/CompareTableEltypeClass';\nimport WarningCompare from '../../components/WarningWindow/WarningCompare';\nimport ContextMenuCompare from '../../components/ContextMenuWindow/ContextMenuCompare';\nimport { saveDataStore, saveTypeRequest, saveNameWindow } from '../../store/EltypeClass/actions/actionEltypeClass';\nimport { changeAdressOpenTable } from '../../store/EltypeClass/actions/actionsLinksEltypeClass';\nimport { clearCompareArr, deleteDataCompareArr } from '../../store/EltypeClass/actions/actionsCompareEltypeClass';\nimport { changeDataOpenContextMenu } from '../../store/EltypeClass/actions/actionsFlagsEltypeClass';\nimport { addDescription } from \"../../store/Description/actionsDescription\";\nimport { tablebodyBackgroundClear } from '../../functions/tablebodyBackgroundClear';\n\nfunction CompareEltypeClass(props) {\n  const dispatch = useDispatch();\n  const compareArr = useSelector(state => state.compareDataEltypeClass); // массив строк, избранных для сравнения\n\n  const focusData = useSelector(state => state.createDataEltypeClass.stateData); //хранение данных выбранной строки\n\n  const links = useSelector(state => state.stateLinksEltypeClass); //список ссылок для переходов между окнами\n\n  const flagEmployDescription = useSelector(state => state.stateFlagsAll.employDescriptionAll); // разрешен ли пользователем показ подсказок\n\n  const arrDescription = useSelector(state => state.stateDescription); // массив подсказок из store (пока без кнопок консоли, заполнится после рединга)\n\n  const dataContextMenu = useSelector(state => state.stateFlagsEltypeClass.dataContextMenu); //данные о контекстном меню правой кнопки мыши\n\n  const hendlerOpenWindow = (nameWindow, typeRequest) => {\n    dispatch(saveTypeRequest(typeRequest));\n    dispatch(saveNameWindow(nameWindow));\n  };\n\n  const hendlerClearCompareArr = () => {\n    dispatch(clearCompareArr()); // изменяем ссылку перенаправления на активную таблицу для закрытия вспомогательных окон:\n\n    dispatch(changeAdressOpenTable(links.linkBase));\n  };\n\n  const hendlerDeleteContext = data => {\n    dispatch(deleteDataCompareArr(data, compareArr)); // удалить из массива сравнений\n    //удаляем из списка сравнений и поэтому обнуляем хранение фокуса:\n\n    dispatch(saveDataStore({\n      uid: \"\",\n      name: \"\",\n      isDeleted: false,\n      isTemplate: false\n    }));\n    tablebodyBackgroundClear();\n    console.log('click ', data);\n  };\n\n  const hendlerCloseWindow = () => {\n    //закрываем окно и поэтому обнуляем хранение фокуса:\n    dispatch(saveDataStore({\n      uid: \"\",\n      name: \"\",\n      isDeleted: false,\n      isTemplate: false\n    })); // изменяем ссылку перенаправления на активную таблицу для закрытия вспомогательных окон:\n\n    dispatch(changeAdressOpenTable(links.linkBase));\n  };\n\n  const stateConsoleButton = [{\n    text: \"Внести изменения\",\n    name: 'edit',\n    icon: \"fa fa-pencil-square-o fa-lg\",\n    onclick: () => hendlerOpenWindow(\"Внести изменения\", \"put\"),\n    link: links.linkEditWindow\n  }, {\n    text: \"Удалить из базы данных\",\n    name: 'delete',\n    icon: \"fa fa-times fa-lg\",\n    onclick: () => {},\n    link: links.linkWindowConfirmDeleting\n  }, {\n    text: \"Убрать из сравнения\",\n    name: 'deleteList',\n    icon: \"fa fa-times-circle\",\n    onclick: hendlerDeleteContext,\n    data: focusData,\n    link: links.linkCompare\n  }, {\n    text: \"Очистить список сравнений\",\n    name: 'clear',\n    icon: \"fa fa-minus-square-o\",\n    onclick: hendlerClearCompareArr,\n    link: links.linkBase\n  }, {\n    text: \"Назад\",\n    name: 'back',\n    icon: \"fa fa-share\",\n    onclick: hendlerCloseWindow,\n    link: links.linkBase\n  }];\n  useEffect(() => {\n    document.oncontextmenu = function (event) {\n      event.preventDefault();\n      dispatch(changeDataOpenContextMenu({\n        flag: true,\n        clickClientX: event.clientX,\n        clickClientY: event.clientY\n      }));\n    };\n\n    document.onclick = function () {\n      dispatch(changeDataOpenContextMenu({\n        flag: false,\n        clickClientX: '',\n        clickClientY: ''\n      }));\n    };\n\n    document.onscroll = function () {\n      dispatch(changeDataOpenContextMenu({\n        flag: false,\n        clickClientX: '',\n        clickClientY: ''\n      }));\n    }; //добавляем подсказки на кнопки консоли\n\n\n    if (flagEmployDescription === true) {\n      let aboutDescription = {};\n      stateConsoleButton.map(obj => {\n        aboutDescription[obj.name] = [obj.text];\n      });\n      dispatch(addDescription(aboutDescription, arrDescription));\n    }\n\n    ;\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"DataBase__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"DataBase__header__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ConsoleButton, {\n    classnameWrapper: \"DataBase__header__console\",\n    stateConsoleButton: stateConsoleButton,\n    classnameDescription: \"DescriptionButton\",\n    tabindex: \"-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(HeaderCompare, {\n    classname: \"DataBase__header__header\",\n    nameBase: \"\\u041A\\u043B\\u0430\\u0441\\u0441\\u044B \\u0434\\u043B\\u044F \\u0422\\u0438\\u043F\\u043E\\u0432 \\u0441\\u0432\\u044F\\u0437\\u0435\\u0439 \\u0438 \\u0422\\u0438\\u043F\\u043E\\u0432 \\u0441\\u0443\\u0449\\u043D\\u043E\\u0441\\u0442\\u0435\\u0439\",\n    nameHeader: \"\\u0421\\u0440\\u0430\\u0432\\u043D\\u0438\\u0442\\u044C \\u0438\\u0437\\u0431\\u0440\\u0430\\u043D\\u043D\\u043E\\u0435\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ButtonLinkSmallNotMouse, {\n    to: links.linkBase,\n    icon: \"fa fa-share\",\n    onclick: hendlerCloseWindow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  })), compareArr.length > 1 ? /*#__PURE__*/React.createElement(CompareTableEltypeClass, {\n    classname: \"DataBase__table__container\",\n    compareArr: compareArr,\n    onclickDelete: hendlerDeleteContext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(WarningCompare, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 23\n    }\n  }), dataContextMenu.flag ? /*#__PURE__*/React.createElement(ContextMenuCompare, {\n    stateConsoleButton: stateConsoleButton,\n    classname: \"ContextMenuWindow\",\n    clientX: dataContextMenu.clickClientX,\n    clientY: dataContextMenu.clickClientY,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }) : null);\n}\n\nexport default connect()(CompareEltypeClass);","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/containers/baseEltypeClass/CompareEltypeClass.js"],"names":["React","useEffect","connect","useDispatch","useSelector","ButtonLinkSmallNotMouse","ConsoleButton","HeaderCompare","CompareTableEltypeClass","WarningCompare","ContextMenuCompare","saveDataStore","saveTypeRequest","saveNameWindow","changeAdressOpenTable","clearCompareArr","deleteDataCompareArr","changeDataOpenContextMenu","addDescription","tablebodyBackgroundClear","CompareEltypeClass","props","dispatch","compareArr","state","compareDataEltypeClass","focusData","createDataEltypeClass","stateData","links","stateLinksEltypeClass","flagEmployDescription","stateFlagsAll","employDescriptionAll","arrDescription","stateDescription","dataContextMenu","stateFlagsEltypeClass","hendlerOpenWindow","nameWindow","typeRequest","hendlerClearCompareArr","linkBase","hendlerDeleteContext","data","uid","name","isDeleted","isTemplate","console","log","hendlerCloseWindow","stateConsoleButton","text","icon","onclick","link","linkEditWindow","linkWindowConfirmDeleting","linkCompare","document","oncontextmenu","event","preventDefault","flag","clickClientX","clientX","clickClientY","clientY","onscroll","aboutDescription","map","obj","length"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport ButtonLinkSmallNotMouse from '../../UserInterface/Buttons/Button/ButtonLinkSmallNotMouse';\r\nimport ConsoleButton from '../../components/ConsoleButton/ConsoleButton';\r\nimport HeaderCompare from '../../components/Header/HeaderCompare';\r\nimport CompareTableEltypeClass from '../../components/Table/CompareTableEltypeClass';\r\nimport WarningCompare from '../../components/WarningWindow/WarningCompare';\r\nimport ContextMenuCompare from '../../components/ContextMenuWindow/ContextMenuCompare';\r\n\r\n\r\nimport {\r\n    saveDataStore,\r\n    saveTypeRequest,\r\n    saveNameWindow,\r\n} from '../../store/EltypeClass/actions/actionEltypeClass';\r\n\r\nimport { changeAdressOpenTable } from '../../store/EltypeClass/actions/actionsLinksEltypeClass';\r\n\r\nimport {\r\n    clearCompareArr,\r\n    deleteDataCompareArr\r\n} from '../../store/EltypeClass/actions/actionsCompareEltypeClass';\r\nimport {\r\n    changeDataOpenContextMenu\r\n} from '../../store/EltypeClass/actions/actionsFlagsEltypeClass';\r\n\r\nimport { addDescription } from \"../../store/Description/actionsDescription\";\r\n\r\nimport { tablebodyBackgroundClear } from '../../functions/tablebodyBackgroundClear';\r\n\r\nfunction CompareEltypeClass(props) {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const compareArr = useSelector(state => state.compareDataEltypeClass); // массив строк, избранных для сравнения\r\n\r\n    const focusData = useSelector(state => state.createDataEltypeClass.stateData); //хранение данных выбранной строки\r\n\r\n    const links = useSelector(state => state.stateLinksEltypeClass); //список ссылок для переходов между окнами\r\n\r\n    const flagEmployDescription = useSelector(state => state.stateFlagsAll.employDescriptionAll) // разрешен ли пользователем показ подсказок\r\n\r\n    const arrDescription = useSelector(state => state.stateDescription); // массив подсказок из store (пока без кнопок консоли, заполнится после рединга)\r\n\r\n    const dataContextMenu = useSelector(state => state.stateFlagsEltypeClass.dataContextMenu); //данные о контекстном меню правой кнопки мыши\r\n\r\n    const hendlerOpenWindow = (nameWindow, typeRequest) => {\r\n        dispatch(saveTypeRequest(typeRequest));\r\n        dispatch(saveNameWindow(nameWindow));\r\n    }\r\n\r\n    const hendlerClearCompareArr = () => {\r\n        dispatch(clearCompareArr());\r\n        // изменяем ссылку перенаправления на активную таблицу для закрытия вспомогательных окон:\r\n        dispatch(changeAdressOpenTable(links.linkBase));\r\n    }\r\n    \r\n    const hendlerDeleteContext = (data) => {\r\n        dispatch(deleteDataCompareArr(data, compareArr)); // удалить из массива сравнений\r\n        //удаляем из списка сравнений и поэтому обнуляем хранение фокуса:\r\n        dispatch(saveDataStore({\r\n                                uid: \"\",\r\n                                name: \"\",\r\n                                isDeleted: false,\r\n                                isTemplate: false\r\n                            })\r\n                            );\r\n        tablebodyBackgroundClear();\r\n        console.log('click ', data)\r\n    }\r\n\r\n    const hendlerCloseWindow = () => {\r\n            //закрываем окно и поэтому обнуляем хранение фокуса:\r\n            dispatch(saveDataStore({\r\n                                        uid: \"\",\r\n                                        name: \"\",\r\n                                        isDeleted: false,\r\n                                        isTemplate: false\r\n                                    })\r\n                        );\r\n            // изменяем ссылку перенаправления на активную таблицу для закрытия вспомогательных окон:\r\n            dispatch(changeAdressOpenTable(links.linkBase));\r\n    }\r\n\r\n\r\n    const stateConsoleButton = [\r\n\r\n        {\r\n            text: \"Внести изменения\",\r\n            name: 'edit',\r\n            icon: \"fa fa-pencil-square-o fa-lg\",\r\n            onclick: () => hendlerOpenWindow(\"Внести изменения\", \"put\"),\r\n            link: links.linkEditWindow\r\n        },\r\n        {\r\n            text: \"Удалить из базы данных\",\r\n            name: 'delete',\r\n            icon: \"fa fa-times fa-lg\",\r\n            onclick: () => { },\r\n            link: links.linkWindowConfirmDeleting\r\n        },\r\n        {\r\n            text: \"Убрать из сравнения\",\r\n            name: 'deleteList',\r\n            icon: \"fa fa-times-circle\",\r\n            onclick: hendlerDeleteContext,\r\n            data: focusData,\r\n            link: links.linkCompare\r\n        },\r\n        {\r\n            text: \"Очистить список сравнений\",\r\n            name: 'clear',\r\n            icon: \"fa fa-minus-square-o\",\r\n            onclick: hendlerClearCompareArr,\r\n            link: links.linkBase\r\n        },\r\n        {\r\n            text: \"Назад\",\r\n            name: 'back',\r\n            icon: \"fa fa-share\",\r\n            onclick: hendlerCloseWindow,\r\n            link: links.linkBase\r\n        }\r\n    ];\r\n\r\n    useEffect(() => {\r\n        document.oncontextmenu = function (event) {\r\n            event.preventDefault();\r\n            dispatch(changeDataOpenContextMenu({\r\n                                                flag: true,\r\n                                                clickClientX: event.clientX,\r\n                                                clickClientY: event.clientY\r\n                                            }));\r\n        };\r\n\r\n        document.onclick = function () {\r\n            dispatch(changeDataOpenContextMenu({\r\n                                                flag: false,\r\n                                                clickClientX: '',\r\n                                                clickClientY: ''\r\n                                            }));\r\n        }\r\n\r\n        document.onscroll = function () {\r\n            dispatch(changeDataOpenContextMenu({\r\n                                                flag: false,\r\n                                                clickClientX: '',\r\n                                                clickClientY: ''\r\n                                            }));\r\n        }\r\n\r\n        //добавляем подсказки на кнопки консоли\r\n        if (flagEmployDescription === true) {\r\n            let aboutDescription = {};\r\n            stateConsoleButton.map((obj) => {\r\n                aboutDescription[obj.name] = [obj.text];\r\n            });\r\n            dispatch(addDescription(aboutDescription, arrDescription));\r\n        };\r\n\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <div className=\"DataBase__container\">\r\n\r\n            <div className=\"DataBase__header__container\">\r\n\r\n                <ConsoleButton\r\n                    classnameWrapper=\"DataBase__header__console\"\r\n                    stateConsoleButton={stateConsoleButton}\r\n                    classnameDescription='DescriptionButton'\r\n                    tabindex=\"-1\"\r\n                />\r\n\r\n                <HeaderCompare\r\n                    classname=\"DataBase__header__header\"\r\n                    nameBase=\"Классы для Типов связей и Типов сущностей\"\r\n                    nameHeader=\"Сравнить избранное\"\r\n                />\r\n\r\n                <ButtonLinkSmallNotMouse\r\n                    to={links.linkBase}\r\n                    icon=\"fa fa-share\"\r\n                    onclick={hendlerCloseWindow}\r\n                />\r\n            </div>\r\n            {\r\n                (compareArr.length > 1) ?\r\n                    <CompareTableEltypeClass\r\n                        classname=\"DataBase__table__container\"\r\n                        compareArr={compareArr}\r\n                        onclickDelete={hendlerDeleteContext}\r\n                    />\r\n                    : <WarningCompare />\r\n            }\r\n            {\r\n                dataContextMenu.flag ?\r\n                    <ContextMenuCompare\r\n                        stateConsoleButton={stateConsoleButton}\r\n                        classname=\"ContextMenuWindow\"\r\n                        clientX={dataContextMenu.clickClientX}\r\n                        clientY={dataContextMenu.clickClientY}\r\n                    />\r\n                    : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect()(CompareEltypeClass)"]},"metadata":{},"sourceType":"module"}