{"ast":null,"code":"import { takeEvery, select, put, call } from 'redux-saga/effects';\nimport { saveDataAuthorization } from '../../store/Authorization/actionsAuthorization';\nimport fetchData from '../../functions/fetchData';\nimport { url_User_GET_login } from \"../../constans/url\";\nimport { START_SAGAS_AUTH_GET_LOGIN_REQUEST } from '../../store/Authorization/types';\nexport function* workerStart_Authorization_GET_login_RequestServer() {\n  console.log('!!! workerStart_Authorization_GET_login_RequestServer !!!!');\n  const loginFromLoginWindow = yield select(state => state.stateAuthorization.dataFromLoginWindow.login);\n  const url = `${url_User_GET_login}/${loginFromLoginWindow}`;\n  console.log('url', url);\n\n  try {\n    const data = yield call(fetchData, url, 'GET');\n    yield put(saveDataAuthorization(data));\n  } catch (error) {\n    console.log('workerStartRequestServer error ', error);\n  }\n}\nexport function* watch_Authorization_GET_login_RequestServer() {\n  yield takeEvery(START_SAGAS_AUTH_GET_LOGIN_REQUEST, workerStart_Authorization_GET_login_RequestServer);\n}","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/sagas/Authorization/sagas_GET_login_Authoriz.js"],"names":["takeEvery","select","put","call","saveDataAuthorization","fetchData","url_User_GET_login","START_SAGAS_AUTH_GET_LOGIN_REQUEST","workerStart_Authorization_GET_login_RequestServer","console","log","loginFromLoginWindow","state","stateAuthorization","dataFromLoginWindow","login","url","data","error","watch_Authorization_GET_login_RequestServer"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,GAA5B,EAAiCC,IAAjC,QAA6C,oBAA7C;AACA,SAASC,qBAAT,QAAsC,gDAAtC;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,kBAAT,QAAmC,oBAAnC;AACA,SAASC,kCAAT,QAAmD,iCAAnD;AAEA,OAAO,UAAUC,iDAAV,GAA6D;AAEhEC,EAAAA,OAAO,CAACC,GAAR,CAAY,4DAAZ;AAEA,QAAMC,oBAAoB,GAAG,MAAMV,MAAM,CAACW,KAAK,IAAIA,KAAK,CAACC,kBAAN,CAAyBC,mBAAzB,CAA6CC,KAAvD,CAAzC;AAEA,QAAMC,GAAG,GAAI,GAAEV,kBAAmB,IAAGK,oBAAqB,EAA1D;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBM,GAAnB;;AAEA,MAAI;AAEA,UAAMC,IAAI,GAAG,MAAMd,IAAI,CAACE,SAAD,EAAYW,GAAZ,EAAiB,KAAjB,CAAvB;AAEA,UAAMd,GAAG,CAACE,qBAAqB,CAACa,IAAD,CAAtB,CAAT;AAEH,GAND,CAME,OAAOC,KAAP,EAAc;AACbT,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CQ,KAA/C;AACF;AACJ;AAED,OAAO,UAAUC,2CAAV,GAAuD;AAE1D,QAAMnB,SAAS,CAACO,kCAAD,EAAqCC,iDAArC,CAAf;AAEH","sourcesContent":["import { takeEvery, select, put, call } from 'redux-saga/effects';\r\nimport { saveDataAuthorization } from '../../store/Authorization/actionsAuthorization';\r\nimport fetchData from '../../functions/fetchData';\r\nimport { url_User_GET_login } from \"../../constans/url\";\r\nimport { START_SAGAS_AUTH_GET_LOGIN_REQUEST } from '../../store/Authorization/types';\r\n\r\nexport function* workerStart_Authorization_GET_login_RequestServer(){\r\n\r\n    console.log('!!! workerStart_Authorization_GET_login_RequestServer !!!!');\r\n\r\n    const loginFromLoginWindow = yield select(state => state.stateAuthorization.dataFromLoginWindow.login);\r\n\r\n    const url = `${url_User_GET_login}/${loginFromLoginWindow}`;\r\n    console.log('url', url);\r\n    \r\n    try {\r\n\r\n        const data = yield call(fetchData, url, 'GET');\r\n        \r\n        yield put(saveDataAuthorization(data));\r\n         \r\n    } catch (error) {\r\n       console.log('workerStartRequestServer error ', error);\r\n    }\r\n}\r\n\r\nexport function* watch_Authorization_GET_login_RequestServer(){\r\n\r\n    yield takeEvery(START_SAGAS_AUTH_GET_LOGIN_REQUEST, workerStart_Authorization_GET_login_RequestServer)\r\n\r\n}"]},"metadata":{},"sourceType":"module"}