{"ast":null,"code":"import { CREATE_DATA, TYPE_REQUEST, NAME_WINDOW } from \"../types\";\nconst initialState = {\n  stateData: {\n    uid: \"\",\n    name: \"\",\n    isDeleted: false,\n    isTemplate: false\n  },\n  nameWindow: \"\",\n  typeRequest: null,\n  labels: ['uid', 'РќР°РёРјРµРЅРѕРІР°РЅРёРµ', 'isDeleted', 'isTemplate'],\n  placeholders: ['uid', 'РќР°РёРјРµРЅРѕРІР°РЅРёРµ', 'isDeleted', 'isTemplate'],\n  typeData: [\"text\", \"text\", \"checkbox\", \"checkbox\"]\n};\n\nconst createDataEltypeClass = (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_DATA:\n      return { ...state,\n        stateData: action.payload\n      };\n\n    case TYPE_REQUEST:\n      return { ...state,\n        typeRequest: action.payload\n      };\n\n    case NAME_WINDOW:\n      return { ...state,\n        nameWindow: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default createDataEltypeClass;","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/store/EltypeClass/reducers/reducerEltypeClassEditWindow.js"],"names":["CREATE_DATA","TYPE_REQUEST","NAME_WINDOW","initialState","stateData","uid","name","isDeleted","isTemplate","nameWindow","typeRequest","labels","placeholders","typeData","createDataEltypeClass","state","action","type","payload"],"mappings":"AAAA,SACIA,WADJ,EAEIC,YAFJ,EAGIC,WAHJ,QAIO,UAJP;AAMA,MAAMC,YAAY,GAAE;AAChBC,EAAAA,SAAS,EAAE;AACCC,IAAAA,GAAG,EAAE,EADN;AAECC,IAAAA,IAAI,EAAE,EAFP;AAGCC,IAAAA,SAAS,EAAE,KAHZ;AAICC,IAAAA,UAAU,EAAE;AAJb,GADK;AAOhBC,EAAAA,UAAU,EAAE,EAPI;AAQhBC,EAAAA,WAAW,EAAE,IARG;AAShBC,EAAAA,MAAM,EAAE,CACI,KADJ,EAEI,0BAFJ,EAGI,WAHJ,EAII,YAJJ,CATQ;AAehBC,EAAAA,YAAY,EAAE,CACF,KADE,EAEF,0BAFE,EAGF,WAHE,EAIF,YAJE,CAfE;AAqBhBC,EAAAA,QAAQ,EAAE,CACE,MADF,EAEE,MAFF,EAGE,UAHF,EAIE,UAJF;AArBM,CAApB;;AA6BA,MAAMC,qBAAqB,GAAG,CAACC,KAAK,GAAGZ,YAAT,EAAuBa,MAAvB,KAAkC;AAE5D,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKjB,WAAL;AACI,aAAO,EACH,GAAGe,KADA;AAEHX,QAAAA,SAAS,EAAEY,MAAM,CAACE;AAFf,OAAP;;AAKJ,SAAKjB,YAAL;AACI,aAAO,EACH,GAAGc,KADA;AAEHL,QAAAA,WAAW,EAAEM,MAAM,CAACE;AAFjB,OAAP;;AAKJ,SAAKhB,WAAL;AACI,aAAO,EACH,GAAGa,KADA;AAEHN,QAAAA,UAAU,EAAEO,MAAM,CAACE;AAFhB,OAAP;;AAKJ;AACI,aAAOH,KAAP;AArBR;AAuBH,CAzBD;;AA0BA,eAAeD,qBAAf","sourcesContent":["import {\r\n    CREATE_DATA,\r\n    TYPE_REQUEST,\r\n    NAME_WINDOW\r\n} from \"../types\"\r\n\r\nconst initialState ={\r\n    stateData: {\r\n                uid: \"\",\r\n                name: \"\",\r\n                isDeleted: false,\r\n                isTemplate: false\r\n            },\r\n    nameWindow: \"\",\r\n    typeRequest: null,\r\n    labels: [\r\n                'uid',\r\n                'РќР°РёРјРµРЅРѕРІР°РЅРёРµ',\r\n                'isDeleted',\r\n                'isTemplate'\r\n            ],\r\n    placeholders: [\r\n                'uid',\r\n                'РќР°РёРјРµРЅРѕРІР°РЅРёРµ',\r\n                'isDeleted',\r\n                'isTemplate'\r\n            ],\r\n    typeData: [\r\n                \"text\",\r\n                \"text\",\r\n                \"checkbox\",\r\n                \"checkbox\"\r\n            ]\r\n                    };\r\n\r\nconst createDataEltypeClass = (state = initialState, action) => {\r\n    \r\n    switch (action.type){\r\n            \r\n        case CREATE_DATA:\r\n            return {\r\n                ...state,\r\n                stateData: action.payload\r\n            }\r\n   \r\n        case TYPE_REQUEST:\r\n            return {\r\n                ...state,\r\n                typeRequest: action.payload\r\n            }\r\n    \r\n        case NAME_WINDOW:\r\n            return {\r\n                ...state,\r\n                nameWindow: action.payload\r\n            }\r\n\r\n        default: \r\n            return state;\r\n    }\r\n}\r\nexport default createDataEltypeClass"]},"metadata":{},"sourceType":"module"}