{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\UserInterface\\\\InputAuth\\\\InputAuth.js\";\nimport React, { useEffect, useRef } from 'react';\n\nfunction InputAuth(props) {\n  const ref = useRef(props.value);\n  const autoFocus = props.autofocus;\n  const nameInput = props.id;\n  useEffect(() => {\n    if (autoFocus === true) {\n      ref.current.focus();\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, props.id), /*#__PURE__*/React.createElement(\"input\", {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: event => props.onchange(event, nameInput, props.value),\n    value: props.value,\n    tabIndex: props.tabindex,\n    disabled: props.disabled,\n    ref: ref,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => props.onclick(nameInput),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fa fa-times\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default InputAuth;","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/UserInterface/InputAuth/InputAuth.js"],"names":["React","useEffect","useRef","InputAuth","props","ref","value","autoFocus","autofocus","nameInput","id","current","focus","type","placeholder","event","onchange","tabindex","disabled","onclick"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,QAAuC,OAAvC;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAAyB;AAErB,QAAMC,GAAG,GAAGH,MAAM,CAACE,KAAK,CAACE,KAAP,CAAlB;AACA,QAAMC,SAAS,GAAGH,KAAK,CAACI,SAAxB;AACA,QAAMC,SAAS,GAAGL,KAAK,CAACM,EAAxB;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,SAAS,KAAK,IAAlB,EAAwB;AACpBF,MAAAA,GAAG,CAACM,OAAJ,CAAYC,KAAZ;AACH;AACJ,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AACQ,IAAA,OAAO,EAAER,KAAK,CAACM,EADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKN,KAAK,CAACM,EAHX,CAFJ,eAQI;AACQ,IAAA,EAAE,EAAIN,KAAK,CAACM,EADpB;AAEQ,IAAA,IAAI,EAAIN,KAAK,CAACS,IAFtB;AAGQ,IAAA,WAAW,EAAIT,KAAK,CAACU,WAH7B;AAIQ,IAAA,QAAQ,EAAGC,KAAD,IAAWX,KAAK,CAACY,QAAN,CAAeD,KAAf,EAAsBN,SAAtB,EAAiCL,KAAK,CAACE,KAAvC,CAJ7B;AAKQ,IAAA,KAAK,EAAIF,KAAK,CAACE,KALvB;AAMQ,IAAA,QAAQ,EAAIF,KAAK,CAACa,QAN1B;AAOQ,IAAA,QAAQ,EAAIb,KAAK,CAACc,QAP1B;AAQQ,IAAA,GAAG,EAAEb,GARb;AASQ,IAAA,YAAY,EAAC,KATrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,eAmBI;AACI,IAAA,OAAO,EAAE,MAAMD,KAAK,CAACe,OAAN,CAAcV,SAAd,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI;AAAM,IAAA,SAAS,EAAC,aAAhB;AAA8B,mBAAY,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAnBJ,CADJ;AA4BH;;AAED,eAAeN,SAAf","sourcesContent":["import React, {useEffect, useRef} from 'react';\r\n\r\nfunction InputAuth(props){\r\n    \r\n    const ref = useRef(props.value);\r\n    const autoFocus = props.autofocus;\r\n    const nameInput = props.id;\r\n\r\n    useEffect(() => {\r\n        if (autoFocus === true) {\r\n            ref.current.focus();\r\n        }\r\n    }, []);\r\n        \r\n    return(\r\n        <div>\r\n        \r\n            <label \r\n                    htmlFor={props.id}\r\n            >\r\n                {props.id}\r\n            </label>\r\n        \r\n            <input\r\n                    id = {props.id}\r\n                    type = {props.type}\r\n                    placeholder = {props.placeholder}\r\n                    onChange={(event) => props.onchange(event, nameInput, props.value)}\r\n                    value = {props.value}\r\n                    tabIndex = {props.tabindex}\r\n                    disabled = {props.disabled}\r\n                    ref={ref}\r\n                    autoComplete='off'\r\n            />\r\n            <button\r\n                onClick={() => props.onclick(nameInput)}\r\n            >\r\n                <span className=\"fa fa-times\" aria-hidden=\"true\"></span>\r\n            </button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputAuth"]},"metadata":{},"sourceType":"module"}