{"ast":null,"code":"import { takeEvery, select, put, call } from 'redux-saga/effects';\nimport { getRequestServer } from '../../store/BasisReport/actions/actionBasisReport';\nimport { saveStartFocusDataStore } from '../../store/BasisReport/actions/actionFocusData';\nimport { loadingShow, getCounterPagesTable, getDataPageRowTable } from '../../store/BasisReport/actions/actionsFlagsBasisReport';\nimport { START_GET_REQUEST } from '../../store/User/types';\nimport fetchData from '../../functions/fetchData';\nimport { url_User } from \"../../constans/url\";\nexport function* workerStart_GET_RequestServer() {\n  try {\n    const countRowTable = yield select(state => state.stateFlagsBasisReport.countRowTable);\n    const numberList = yield select(state => state.stateFlagsBasisReport.numberList);\n    yield put(loadingShow(true));\n    const data = yield call(fetchData, url_User);\n    yield put(getRequestServer(data));\n    yield put(getCounterPagesTable(data, countRowTable));\n    yield put(getDataPageRowTable(data, countRowTable, numberList));\n    yield put(saveStartFocusDataStore(data));\n    yield put(loadingShow(false));\n  } catch (error) {\n    console.log('workerStart_GET_RequestServer error ', error);\n  }\n}\nexport function* watch_User_GET_RequestServer() {\n  yield takeEvery(START_GET_REQUEST, workerStart_GET_RequestServer);\n}","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/sagas/User/sagas_GET_User.js"],"names":["takeEvery","select","put","call","getRequestServer","saveStartFocusDataStore","loadingShow","getCounterPagesTable","getDataPageRowTable","START_GET_REQUEST","fetchData","url_User","workerStart_GET_RequestServer","countRowTable","state","stateFlagsBasisReport","numberList","data","error","console","log","watch_User_GET_RequestServer"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,GAA5B,EAAiCC,IAAjC,QAA6C,oBAA7C;AACA,SAASC,gBAAT,QAAiC,mDAAjC;AACA,SAASC,uBAAT,QAAwC,iDAAxC;AACA,SAASC,WAAT,EAAsBC,oBAAtB,EAA4CC,mBAA5C,QAAuE,yDAAvE;AACA,SAASC,iBAAT,QAAkC,wBAAlC;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,QAAT,QAAwB,oBAAxB;AAGA,OAAO,UAAUC,6BAAV,GAAyC;AAE5C,MAAI;AACA,UAAMC,aAAa,GAAG,MAAMZ,MAAM,CAACa,KAAK,IAAIA,KAAK,CAACC,qBAAN,CAA4BF,aAAtC,CAAlC;AACA,UAAMG,UAAU,GAAG,MAAMf,MAAM,CAACa,KAAK,IAAIA,KAAK,CAACC,qBAAN,CAA4BC,UAAtC,CAA/B;AAEA,UAAMd,GAAG,CAACI,WAAW,CAAC,IAAD,CAAZ,CAAT;AAEA,UAAMW,IAAI,GAAG,MAAMd,IAAI,CAACO,SAAD,EAAYC,QAAZ,CAAvB;AAEA,UAAMT,GAAG,CAACE,gBAAgB,CAACa,IAAD,CAAjB,CAAT;AACA,UAAMf,GAAG,CAACK,oBAAoB,CAACU,IAAD,EAAOJ,aAAP,CAArB,CAAT;AACA,UAAMX,GAAG,CAACM,mBAAmB,CAACS,IAAD,EAAOJ,aAAP,EAAsBG,UAAtB,CAApB,CAAT;AACA,UAAMd,GAAG,CAACG,uBAAuB,CAACY,IAAD,CAAxB,CAAT;AAEA,UAAMf,GAAG,CAACI,WAAW,CAAC,KAAD,CAAZ,CAAT;AAEH,GAfD,CAeE,OAAOY,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDF,KAApD;AACH;AACJ;AAED,OAAO,UAAUG,4BAAV,GAAwC;AAE3C,QAAMrB,SAAS,CAACS,iBAAD,EAAoBG,6BAApB,CAAf;AACH","sourcesContent":["import { takeEvery, select, put, call } from 'redux-saga/effects';\r\nimport { getRequestServer } from '../../store/BasisReport/actions/actionBasisReport';\r\nimport { saveStartFocusDataStore } from '../../store/BasisReport/actions/actionFocusData';\r\nimport { loadingShow, getCounterPagesTable, getDataPageRowTable } from '../../store/BasisReport/actions/actionsFlagsBasisReport';\r\nimport { START_GET_REQUEST } from '../../store/User/types';\r\nimport fetchData from '../../functions/fetchData';\r\nimport { url_User} from \"../../constans/url\"\r\n\r\n\r\nexport function* workerStart_GET_RequestServer(){\r\n    \r\n    try {\r\n        const countRowTable = yield select(state => state.stateFlagsBasisReport.countRowTable);\r\n        const numberList = yield select(state => state.stateFlagsBasisReport.numberList);\r\n\r\n        yield put(loadingShow(true));\r\n\r\n        const data = yield call(fetchData, url_User);\r\n\r\n        yield put(getRequestServer(data));\r\n        yield put(getCounterPagesTable(data, countRowTable));\r\n        yield put(getDataPageRowTable(data, countRowTable, numberList));\r\n        yield put(saveStartFocusDataStore(data));\r\n        \r\n        yield put(loadingShow(false));\r\n  \r\n    } catch (error) {\r\n        console.log('workerStart_GET_RequestServer error ', error);\r\n    }\r\n}\r\n\r\nexport function* watch_User_GET_RequestServer(){\r\n    \r\n    yield takeEvery(START_GET_REQUEST, workerStart_GET_RequestServer)\r\n}"]},"metadata":{},"sourceType":"module"}