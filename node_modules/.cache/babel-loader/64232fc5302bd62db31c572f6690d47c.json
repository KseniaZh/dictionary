{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\components\\\\FooterTable\\\\ContainerConsoleOpenActivList.js\";\nimport React from 'react';\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport ConsoleOpenActivList from './ConsoleOpenActivList';\nimport { changeNumberList, getDataPageRowTable, changeActivArrNumberPagesFooterTable } from '../../store/EltypeClass/actions/actionsFlagsEltypeClass';\n\nfunction ContainerConsoleOpenActivList(props) {\n  const dispatch = useDispatch();\n  const stateTable = useSelector(state => state.stateTableEltypeClass); //ВСЯ база\n\n  const counterPages = useSelector(state => state.stateFlagsEltypeClass.counterPagesTable); // общее количество листов в таблице\n\n  const countRow = useSelector(state => state.stateFlagsEltypeClass.countRowTable); // количество строк на отображаемой странице\n\n  const numberList = useSelector(state => state.stateFlagsEltypeClass.numberList); //номер отображаемого листа\n\n  const activArrNumberPages = useSelector(state => state.stateFlagsEltypeClass.activArrNumberPagesFooterTable); //предлагаемый на выбор массив из 3х кнопок в консоли переключения отображаемых листов таблицы\n  //после выбора страницы приходит ее номер, в хранилище собираем новую страницу, в хранилище сохраняем номер страницы\n\n  const hendlerOpenPagesTable = num => {\n    dispatch(getDataPageRowTable(stateTable, countRow, num));\n    dispatch(changeNumberList(num));\n    props.func(); // передаем нужную функцию из родитeля. При переходе на другую страницу фокус теряется, поэтому в хранилище обнуляем данные\n\n    dispatch(changeActivArrNumberPagesFooterTable(num, counterPages)); //измениям консоль выбора активной страницы в футере\n  };\n\n  const hendlerChangeButtonConsole = num => {\n    dispatch(changeActivArrNumberPagesFooterTable(num, counterPages, activArrNumberPages)); //переключение стрелками консоли выбора активной страницы в футере\n  };\n\n  return /*#__PURE__*/React.createElement(ConsoleOpenActivList, {\n    counterPages: counterPages,\n    activArrNumberPages: activArrNumberPages,\n    numberActivList: numberList,\n    onclickOpenPagesTable: hendlerOpenPagesTable,\n    onclickChangeButtonConsole: hendlerChangeButtonConsole,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  });\n}\n\nexport default connect()(ContainerConsoleOpenActivList);","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/components/FooterTable/ContainerConsoleOpenActivList.js"],"names":["React","connect","useDispatch","useSelector","ConsoleOpenActivList","changeNumberList","getDataPageRowTable","changeActivArrNumberPagesFooterTable","ContainerConsoleOpenActivList","props","dispatch","stateTable","state","stateTableEltypeClass","counterPages","stateFlagsEltypeClass","counterPagesTable","countRow","countRowTable","numberList","activArrNumberPages","activArrNumberPagesFooterTable","hendlerOpenPagesTable","num","func","hendlerChangeButtonConsole"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,WAA/B,QAAkD,aAAlD;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,SACIC,gBADJ,EAEIC,mBAFJ,EAGIC,oCAHJ,QAIO,yDAJP;;AAMA,SAASC,6BAAT,CAAuCC,KAAvC,EAA8C;AAE1C,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,UAAU,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,qBAAhB,CAA9B,CAH0C,CAG4B;;AACtE,QAAMC,YAAY,GAAGX,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACG,qBAAN,CAA4BC,iBAAtC,CAAhC,CAJ0C,CAIgD;;AAC1F,QAAMC,QAAQ,GAAGd,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACG,qBAAN,CAA4BG,aAAtC,CAA5B,CAL0C,CAKwC;;AAClF,QAAMC,UAAU,GAAGhB,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACG,qBAAN,CAA4BI,UAAtC,CAA9B,CAN0C,CAMuC;;AACjF,QAAMC,mBAAmB,GAAGjB,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACG,qBAAN,CAA4BM,8BAAtC,CAAvC,CAP0C,CAOoE;AAG9G;;AACA,QAAMC,qBAAqB,GAAIC,GAAD,IAAS;AAEnCb,IAAAA,QAAQ,CAACJ,mBAAmB,CAACK,UAAD,EAAaM,QAAb,EAAuBM,GAAvB,CAApB,CAAR;AACAb,IAAAA,QAAQ,CAACL,gBAAgB,CAACkB,GAAD,CAAjB,CAAR;AACAd,IAAAA,KAAK,CAACe,IAAN,GAJmC,CAIrB;;AACdd,IAAAA,QAAQ,CAACH,oCAAoC,CAACgB,GAAD,EAAMT,YAAN,CAArC,CAAR,CALmC,CAKgC;AACtE,GAND;;AAQA,QAAMW,0BAA0B,GAAIF,GAAD,IAAS;AACxCb,IAAAA,QAAQ,CAACH,oCAAoC,CAACgB,GAAD,EAAMT,YAAN,EAAoBM,mBAApB,CAArC,CAAR,CADwC,CACgD;AAC3F,GAFD;;AAGA,sBACI,oBAAC,oBAAD;AACI,IAAA,YAAY,EAAEN,YADlB;AAEI,IAAA,mBAAmB,EAAEM,mBAFzB;AAGI,IAAA,eAAe,EAAED,UAHrB;AAII,IAAA,qBAAqB,EAAEG,qBAJ3B;AAKI,IAAA,0BAA0B,EAAEG,0BALhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AASH;;AAED,eAAexB,OAAO,GAAGO,6BAAH,CAAtB","sourcesContent":["import React from 'react';\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport ConsoleOpenActivList from './ConsoleOpenActivList';\r\nimport {\r\n    changeNumberList,\r\n    getDataPageRowTable,\r\n    changeActivArrNumberPagesFooterTable\r\n} from '../../store/EltypeClass/actions/actionsFlagsEltypeClass';\r\n\r\nfunction ContainerConsoleOpenActivList(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    const stateTable = useSelector(state => state.stateTableEltypeClass); //ВСЯ база\r\n    const counterPages = useSelector(state => state.stateFlagsEltypeClass.counterPagesTable); // общее количество листов в таблице\r\n    const countRow = useSelector(state => state.stateFlagsEltypeClass.countRowTable); // количество строк на отображаемой странице\r\n    const numberList = useSelector(state => state.stateFlagsEltypeClass.numberList); //номер отображаемого листа\r\n    const activArrNumberPages = useSelector(state => state.stateFlagsEltypeClass.activArrNumberPagesFooterTable); //предлагаемый на выбор массив из 3х кнопок в консоли переключения отображаемых листов таблицы\r\n\r\n\r\n    //после выбора страницы приходит ее номер, в хранилище собираем новую страницу, в хранилище сохраняем номер страницы\r\n    const hendlerOpenPagesTable = (num) => {\r\n\r\n        dispatch(getDataPageRowTable(stateTable, countRow, num));\r\n        dispatch(changeNumberList(num));\r\n        props.func(); // передаем нужную функцию из родитeля. При переходе на другую страницу фокус теряется, поэтому в хранилище обнуляем данные\r\n        dispatch(changeActivArrNumberPagesFooterTable(num, counterPages)); //измениям консоль выбора активной страницы в футере\r\n    }\r\n\r\n    const hendlerChangeButtonConsole = (num) => {\r\n        dispatch(changeActivArrNumberPagesFooterTable(num, counterPages, activArrNumberPages)); //переключение стрелками консоли выбора активной страницы в футере\r\n    }\r\n    return (\r\n        <ConsoleOpenActivList\r\n            counterPages={counterPages}\r\n            activArrNumberPages={activArrNumberPages}\r\n            numberActivList={numberList}\r\n            onclickOpenPagesTable={hendlerOpenPagesTable}\r\n            onclickChangeButtonConsole={hendlerChangeButtonConsole}\r\n        />\r\n    )\r\n}\r\n\r\nexport default connect()(ContainerConsoleOpenActivList)"]},"metadata":{},"sourceType":"module"}