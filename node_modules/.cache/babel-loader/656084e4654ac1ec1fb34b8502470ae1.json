{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\components\\\\FooterTable\\\\ContainerConsoleOpenActivList.js\";\nimport React from 'react';\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport ConsoleOpenActivList from './ConsoleOpenActivList';\nimport { startGetRequestServerEltypeClass, saveDataStore, saveTypeRequest, saveNameWindow } from '../../store/EltypeClass/actions/actionEltypeClass';\nimport { changeCountRowTable, getCounterPagesTable, changeNumberList, getDataPageRowTable, changeActivArrNumberPagesFooterTable } from '../../store/EltypeClass/actions/actionsFlagsEltypeClass';\n\nfunction ContainerConsoleOpenActivList(props) {\n  const dispatch = useDispatch();\n  const counterPages = useSelector(state => state.stateFlagsEltypeClass.counterPagesTable); // общее количество листов в таблице\n\n  const activArrNumberPages = useSelector(state => state.stateFlagsEltypeClass.activArrNumberPagesFooterTable); //предлагаемый на выбор массив из 3х кнопок в консоли переключения отображаемых листов таблицы\n  //после выбора страницы приходит ее номер, в хранилище собираем новую страницу, в хранилище сохраняем номер страницы\n\n  const hendlerOpenPagesTable = num => {\n    dispatch(getDataPageRowTable(props.stateTable, props.CountRow, num));\n    dispatch(changeNumberList(num));\n    props.func(); // передаем нужную функцию из родит. при переходе на другую страницу фокус теряется, поэтому в хранилище обнуляем данные\n\n    dispatch(changeActivArrNumberPagesFooterTable(num, counterPages)); //измениям консоль выбора активной страницы в футере\n  };\n\n  const hendlerChangeButtonConsole = num => {\n    dispatch(changeActivArrNumberPagesFooterTable(num, counterPages, activArrNumberPages)); //переключение стрелками консоли выбора активной страницы в футере\n  };\n\n  return /*#__PURE__*/React.createElement(ConsoleOpenActivList, {\n    counterPages: counterPages,\n    activArrNumberPages: activArrNumberPages,\n    numberActivList: props.numberActivList,\n    onclickOpenPagesTable: hendlerOpenPagesTable,\n    onclickChangeButtonConsole: hendlerChangeButtonConsole,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  });\n}\n\nexport default connect()(ContainerConsoleOpenActivList);","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/components/FooterTable/ContainerConsoleOpenActivList.js"],"names":["React","connect","useDispatch","useSelector","ConsoleOpenActivList","startGetRequestServerEltypeClass","saveDataStore","saveTypeRequest","saveNameWindow","changeCountRowTable","getCounterPagesTable","changeNumberList","getDataPageRowTable","changeActivArrNumberPagesFooterTable","ContainerConsoleOpenActivList","props","dispatch","counterPages","state","stateFlagsEltypeClass","counterPagesTable","activArrNumberPages","activArrNumberPagesFooterTable","hendlerOpenPagesTable","num","stateTable","CountRow","func","hendlerChangeButtonConsole","numberActivList"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,WAA/B,QAAkD,aAAlD;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AAEA,SACIC,gCADJ,EAEIC,aAFJ,EAGIC,eAHJ,EAIIC,cAJJ,QAKO,mDALP;AAOA,SACIC,mBADJ,EAEIC,oBAFJ,EAGIC,gBAHJ,EAIIC,mBAJJ,EAKIC,oCALJ,QAMO,yDANP;;AAQA,SAASC,6BAAT,CAAuCC,KAAvC,EAA8C;AAE1C,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAMe,YAAY,GAAGd,WAAW,CAACe,KAAK,IAAIA,KAAK,CAACC,qBAAN,CAA4BC,iBAAtC,CAAhC,CAH0C,CAGgD;;AAC1F,QAAMC,mBAAmB,GAAGlB,WAAW,CAACe,KAAK,IAAIA,KAAK,CAACC,qBAAN,CAA4BG,8BAAtC,CAAvC,CAJ0C,CAIoE;AAG9G;;AACA,QAAMC,qBAAqB,GAAIC,GAAD,IAAS;AAEnCR,IAAAA,QAAQ,CAACJ,mBAAmB,CAACG,KAAK,CAACU,UAAP,EAAmBV,KAAK,CAACW,QAAzB,EAAmCF,GAAnC,CAApB,CAAR;AACAR,IAAAA,QAAQ,CAACL,gBAAgB,CAACa,GAAD,CAAjB,CAAR;AACAT,IAAAA,KAAK,CAACY,IAAN,GAJmC,CAIrB;;AACdX,IAAAA,QAAQ,CAACH,oCAAoC,CAACW,GAAD,EAAMP,YAAN,CAArC,CAAR,CALmC,CAKgC;AACtE,GAND;;AAQA,QAAMW,0BAA0B,GAAIJ,GAAD,IAAS;AACxCR,IAAAA,QAAQ,CAACH,oCAAoC,CAACW,GAAD,EAAMP,YAAN,EAAoBI,mBAApB,CAArC,CAAR,CADwC,CACgD;AAC3F,GAFD;;AAGA,sBACI,oBAAC,oBAAD;AACI,IAAA,YAAY,EAAEJ,YADlB;AAEI,IAAA,mBAAmB,EAAEI,mBAFzB;AAGI,IAAA,eAAe,EAAEN,KAAK,CAACc,eAH3B;AAII,IAAA,qBAAqB,EAAEN,qBAJ3B;AAKI,IAAA,0BAA0B,EAAEK,0BALhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AASH;;AAED,eAAe3B,OAAO,GAAGa,6BAAH,CAAtB","sourcesContent":["import React from 'react';\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport ConsoleOpenActivList from './ConsoleOpenActivList';\r\n\r\nimport {\r\n    startGetRequestServerEltypeClass,\r\n    saveDataStore,\r\n    saveTypeRequest,\r\n    saveNameWindow\r\n} from '../../store/EltypeClass/actions/actionEltypeClass';\r\n\r\nimport {\r\n    changeCountRowTable,\r\n    getCounterPagesTable,\r\n    changeNumberList,\r\n    getDataPageRowTable,\r\n    changeActivArrNumberPagesFooterTable\r\n} from '../../store/EltypeClass/actions/actionsFlagsEltypeClass';\r\n\r\nfunction ContainerConsoleOpenActivList(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    const counterPages = useSelector(state => state.stateFlagsEltypeClass.counterPagesTable); // общее количество листов в таблице\r\n    const activArrNumberPages = useSelector(state => state.stateFlagsEltypeClass.activArrNumberPagesFooterTable); //предлагаемый на выбор массив из 3х кнопок в консоли переключения отображаемых листов таблицы\r\n\r\n\r\n    //после выбора страницы приходит ее номер, в хранилище собираем новую страницу, в хранилище сохраняем номер страницы\r\n    const hendlerOpenPagesTable = (num) => {\r\n\r\n        dispatch(getDataPageRowTable(props.stateTable, props.CountRow, num));\r\n        dispatch(changeNumberList(num));\r\n        props.func(); // передаем нужную функцию из родит. при переходе на другую страницу фокус теряется, поэтому в хранилище обнуляем данные\r\n        dispatch(changeActivArrNumberPagesFooterTable(num, counterPages)); //измениям консоль выбора активной страницы в футере\r\n    }\r\n\r\n    const hendlerChangeButtonConsole = (num) => {\r\n        dispatch(changeActivArrNumberPagesFooterTable(num, counterPages, activArrNumberPages)); //переключение стрелками консоли выбора активной страницы в футере\r\n    }\r\n    return (\r\n        <ConsoleOpenActivList\r\n            counterPages={counterPages}\r\n            activArrNumberPages={activArrNumberPages}\r\n            numberActivList={props.numberActivList}\r\n            onclickOpenPagesTable={hendlerOpenPagesTable}\r\n            onclickChangeButtonConsole={hendlerChangeButtonConsole}\r\n        />\r\n    )\r\n}\r\n\r\nexport default connect()(ContainerConsoleOpenActivList)"]},"metadata":{},"sourceType":"module"}