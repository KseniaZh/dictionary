{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\components\\\\FooterTable\\\\ContainerCountRowForPage.js\";\nimport React, { useState } from 'react';\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport CountRowForPage from './CountRowForPage';\nimport { changeCountRowTable, getCounterPagesTable, changeNumberList, getDataPageRowTable } from '../../store/EltypeClass/actions/actionsFlagsEltypeClass';\n\nfunction ContainerCountRowForPage(props) {\n  const dispatch = useDispatch();\n  const stateTable = useSelector(state => state.stateTableEltypeClass); //ВСЯ база\n\n  const countRow = useSelector(state => state.stateFlagsEltypeClass.countRowTable); // количество строк на отображаемой странице\n\n  const numberList = useSelector(state => state.stateFlagsEltypeClass.numberList); //номер отображаемого листа\n\n  const [dataButtonOpenInput, setDataButtonOpenInput] = useState({\n    flag: false,\n    icon: \"fa fa-pencil\",\n    name: \"OpenInputChangeCountRow\"\n  }); //кнопка открытия и сохранения инпута\n\n  const [inputValue, setInputValue] = useState(countRow); // значение в интуре\n\n  const hendlerButtonInputOpen = () => {\n    if (dataButtonOpenInput.flag === false) {\n      setDataButtonOpenInput({\n        flag: true,\n        icon: \"fa fa-floppy-o\",\n        name: \"SaveChangeCountRow\"\n      });\n    }\n\n    ;\n\n    if (dataButtonOpenInput.flag === true) {\n      setDataButtonOpenInput({\n        flag: false,\n        icon: \"fa fa-pencil\",\n        name: \"OpenInputChangeCountRow\"\n      });\n      dispatch(getCounterPagesTable(stateTable, inputValue));\n      dispatch(changeCountRowTable(inputValue));\n      dispatch(getDataPageRowTable(stateTable, inputValue, numberList));\n\n      if (numberList !== 1) {\n        props.func(); // переходим на страницу 1, фокус теряется, поэтому в хранилище обнуляем данные focus\n      }\n\n      ;\n      dispatch(changeNumberList(1)); // при изменении к-ва строк на странице всегда возвращаемся на страницу №1, если это не надо, убрать эту строку, но может появляться путой лист\n    }\n  };\n\n  const hendlerChangeInputValue = event => {\n    event.preventDefault();\n    setInputValue(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(CountRowForPage, {\n    CountRow: countRow,\n    length: stateTable.length,\n    dataButtonOpenInput: dataButtonOpenInput,\n    onclickButtonInputOpen: hendlerButtonInputOpen,\n    inputValue: inputValue,\n    onchangeInputValue: hendlerChangeInputValue,\n    classname: props.classname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  });\n}\n\nexport default connect()(ContainerCountRowForPage);","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/components/FooterTable/ContainerCountRowForPage.js"],"names":["React","useState","connect","useDispatch","useSelector","CountRowForPage","changeCountRowTable","getCounterPagesTable","changeNumberList","getDataPageRowTable","ContainerCountRowForPage","props","dispatch","stateTable","state","stateTableEltypeClass","countRow","stateFlagsEltypeClass","countRowTable","numberList","dataButtonOpenInput","setDataButtonOpenInput","flag","icon","name","inputValue","setInputValue","hendlerButtonInputOpen","func","hendlerChangeInputValue","event","preventDefault","target","value","length","classname"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,WAA/B,QAAkD,aAAlD;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SACYC,mBADZ,EAEYC,oBAFZ,EAGYC,gBAHZ,EAIYC,mBAJZ,QAKe,yDALf;;AAQA,SAASC,wBAAT,CAAkCC,KAAlC,EAAyC;AAErC,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AAEA,QAAMU,UAAU,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,qBAAhB,CAA9B,CAJqC,CAIiC;;AACtE,QAAMC,QAAQ,GAAGZ,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACG,qBAAN,CAA4BC,aAAtC,CAA5B,CALqC,CAK6C;;AAClF,QAAMC,UAAU,GAAGf,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACG,qBAAN,CAA4BE,UAAtC,CAA9B,CANqC,CAM4C;;AAEjF,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDpB,QAAQ,CAAC;AACKqB,IAAAA,IAAI,EAAE,KADX;AAEKC,IAAAA,IAAI,EAAE,cAFX;AAGKC,IAAAA,IAAI,EAAE;AAHX,GAAD,CAA9D,CARqC,CAY+B;;AAGpE,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BzB,QAAQ,CAACe,QAAD,CAA5C,CAfqC,CAemB;;AAExD,QAAMW,sBAAsB,GAAG,MAAM;AAEjC,QAAIP,mBAAmB,CAACE,IAApB,KAA6B,KAAjC,EAAwC;AACpCD,MAAAA,sBAAsB,CAAC;AACKC,QAAAA,IAAI,EAAE,IADX;AAEKC,QAAAA,IAAI,EAAE,gBAFX;AAGKC,QAAAA,IAAI,EAAE;AAHX,OAAD,CAAtB;AAKH;;AAAA;;AACD,QAAIJ,mBAAmB,CAACE,IAApB,KAA6B,IAAjC,EAAuC;AACnCD,MAAAA,sBAAsB,CAAC;AACKC,QAAAA,IAAI,EAAE,KADX;AAEKC,QAAAA,IAAI,EAAE,cAFX;AAGKC,QAAAA,IAAI,EAAE;AAHX,OAAD,CAAtB;AAKAZ,MAAAA,QAAQ,CAACL,oBAAoB,CAACM,UAAD,EAAaY,UAAb,CAArB,CAAR;AACAb,MAAAA,QAAQ,CAACN,mBAAmB,CAACmB,UAAD,CAApB,CAAR;AACAb,MAAAA,QAAQ,CAACH,mBAAmB,CAACI,UAAD,EAAaY,UAAb,EAAyBN,UAAzB,CAApB,CAAR;;AAEA,UAAIA,UAAU,KAAK,CAAnB,EAAsB;AACjBR,QAAAA,KAAK,CAACiB,IAAN,GADiB,CACF;AACnB;;AAAA;AACDhB,MAAAA,QAAQ,CAACJ,gBAAgB,CAAC,CAAD,CAAjB,CAAR,CAbmC,CAaJ;AAClC;AAEJ,GAzBD;;AA0BA,QAAMqB,uBAAuB,GAAIC,KAAD,IAAW;AACvCA,IAAAA,KAAK,CAACC,cAAN;AACAL,IAAAA,aAAa,CAACI,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAb;AACH,GAHD;;AAKA,sBACI,oBAAC,eAAD;AACI,IAAA,QAAQ,EAAEjB,QADd;AAEI,IAAA,MAAM,EAAEH,UAAU,CAACqB,MAFvB;AAGI,IAAA,mBAAmB,EAAEd,mBAHzB;AAII,IAAA,sBAAsB,EAAEO,sBAJ5B;AAKI,IAAA,UAAU,EAAEF,UALhB;AAMI,IAAA,kBAAkB,EAAEI,uBANxB;AAOI,IAAA,SAAS,EAAElB,KAAK,CAACwB,SAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAYH;;AAED,eAAejC,OAAO,GAAGQ,wBAAH,CAAtB","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport CountRowForPage from './CountRowForPage';\r\nimport {\r\n            changeCountRowTable,\r\n            getCounterPagesTable,\r\n            changeNumberList,\r\n            getDataPageRowTable\r\n        } from '../../store/EltypeClass/actions/actionsFlagsEltypeClass';\r\n\r\n\r\nfunction ContainerCountRowForPage(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const stateTable = useSelector(state => state.stateTableEltypeClass); //ВСЯ база\r\n    const countRow = useSelector(state => state.stateFlagsEltypeClass.countRowTable); // количество строк на отображаемой странице\r\n    const numberList = useSelector(state => state.stateFlagsEltypeClass.numberList); //номер отображаемого листа\r\n\r\n    const [dataButtonOpenInput, setDataButtonOpenInput] = useState({\r\n                                                                        flag: false,\r\n                                                                        icon: \"fa fa-pencil\",\r\n                                                                        name: \"OpenInputChangeCountRow\"\r\n                                                                    }); //кнопка открытия и сохранения инпута\r\n\r\n\r\n    const [inputValue, setInputValue] = useState(countRow); // значение в интуре\r\n\r\n    const hendlerButtonInputOpen = () => {\r\n\r\n        if (dataButtonOpenInput.flag === false) {\r\n            setDataButtonOpenInput({\r\n                                        flag: true,\r\n                                        icon: \"fa fa-floppy-o\",\r\n                                        name: \"SaveChangeCountRow\"\r\n                                    });\r\n        };\r\n        if (dataButtonOpenInput.flag === true) {\r\n            setDataButtonOpenInput({\r\n                                        flag: false,\r\n                                        icon: \"fa fa-pencil\",\r\n                                        name: \"OpenInputChangeCountRow\"\r\n                                    });\r\n            dispatch(getCounterPagesTable(stateTable, inputValue));\r\n            dispatch(changeCountRowTable(inputValue));\r\n            dispatch(getDataPageRowTable(stateTable, inputValue, numberList));\r\n            \r\n            if (numberList !== 1) {\r\n                 props.func();  // переходим на страницу 1, фокус теряется, поэтому в хранилище обнуляем данные focus\r\n            };\r\n            dispatch(changeNumberList(1)); // при изменении к-ва строк на странице всегда возвращаемся на страницу №1, если это не надо, убрать эту строку, но может появляться путой лист\r\n        }\r\n       \r\n    }\r\n    const hendlerChangeInputValue = (event) => {\r\n        event.preventDefault();\r\n        setInputValue(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <CountRowForPage\r\n            CountRow={countRow}\r\n            length={stateTable.length}\r\n            dataButtonOpenInput={dataButtonOpenInput}\r\n            onclickButtonInputOpen={hendlerButtonInputOpen}\r\n            inputValue={inputValue}\r\n            onchangeInputValue={hendlerChangeInputValue}\r\n            classname={props.classname}\r\n        />\r\n\r\n    )\r\n}\r\n\r\nexport default connect()(ContainerCountRowForPage)"]},"metadata":{},"sourceType":"module"}