{"ast":null,"code":"export const sortBase = (sortKey, base) => {\n  const data = base;\n\n  if (typeof base[0][sortKey] === 'boolean') {\n    //���� ��� �������\n    const compare = function (a, b) {\n      let x;\n      let y;\n\n      if (a[sortKey] === true) {\n        x = 1;\n      } else {\n        x = 0;\n      }\n\n      ;\n\n      if (b[sortKey] === true) {\n        y = 1;\n      } else {\n        y = 0;\n      }\n\n      ;\n      return y - x;\n    };\n\n    base.sort(compare);\n  } else {\n    base.sort((a, b) => a[sortKey].localeCompare(b[sortKey]));\n  }\n\n  ;\n  const dataSort = [...base];\n  return dataSort;\n};","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/functions/Sort.js"],"names":["sortBase","sortKey","base","data","compare","a","b","x","y","sort","localeCompare","dataSort"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,CAACC,OAAD,EAAUC,IAAV,KAAmB;AAEvC,QAAMC,IAAI,GAAGD,IAAb;;AAEA,MAAI,OAAOA,IAAI,CAAC,CAAD,CAAJ,CAAQD,OAAR,CAAP,KAA4B,SAAhC,EAA2C;AAAE;AACzC,UAAMG,OAAO,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC5B,UAAIC,CAAJ;AACA,UAAIC,CAAJ;;AACA,UAAIH,CAAC,CAACJ,OAAD,CAAD,KAAe,IAAnB,EAAyB;AAAEM,QAAAA,CAAC,GAAG,CAAJ;AAAO,OAAlC,MAAwC;AAAEA,QAAAA,CAAC,GAAG,CAAJ;AAAO;;AAAA;;AACjD,UAAID,CAAC,CAACL,OAAD,CAAD,KAAe,IAAnB,EAAyB;AAAEO,QAAAA,CAAC,GAAG,CAAJ;AAAO,OAAlC,MAAwC;AAAEA,QAAAA,CAAC,GAAG,CAAJ;AAAO;;AAAA;AACjD,aAAOA,CAAC,GAAGD,CAAX;AACH,KAND;;AAOAL,IAAAA,IAAI,CAACO,IAAL,CAAUL,OAAV;AACH,GATD,MASO;AACHF,IAAAA,IAAI,CAACO,IAAL,CAAU,CAACJ,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACJ,OAAD,CAAD,CAAWS,aAAX,CAAyBJ,CAAC,CAACL,OAAD,CAA1B,CAApB;AACH;;AAAA;AAED,QAAMU,QAAQ,GAAG,CAAC,GAAGT,IAAJ,CAAjB;AAEA,SAAOS,QAAP;AACH,CApBM","sourcesContent":["export const sortBase = (sortKey, base) => {\r\n\r\n    const data = base;\r\n\r\n    if (typeof base[0][sortKey] === 'boolean') { //���� ��� �������\r\n        const compare = function (a, b) {\r\n            let x;\r\n            let y;\r\n            if (a[sortKey] === true) { x = 1 } else { x = 0 };\r\n            if (b[sortKey] === true) { y = 1 } else { y = 0 };\r\n            return y - x;\r\n        };\r\n        base.sort(compare);\r\n    } else {\r\n        base.sort((a, b) => a[sortKey].localeCompare(b[sortKey]))\r\n    };\r\n\r\n    const dataSort = [...base];\r\n\r\n    return dataSort\r\n}\r\n"]},"metadata":{},"sourceType":"module"}