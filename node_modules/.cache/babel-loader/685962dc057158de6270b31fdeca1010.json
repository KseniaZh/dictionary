{"ast":null,"code":"import { takeEvery, select, put, call } from 'redux-saga/effects';\nimport { getRequestServer } from '../../store/serverViewType/actions/actionViewType';\nimport { url_POST } from \"../../constans/url\";\nimport { START_POST_REQUEST } from '../../store/windowCreateNewData/types';\nimport { GET_REQUEST } from '../../store/serverViewType/types'; //import {newDataFromServer} from '../../containers/EditWindow/ContEditWindow'\n\nconst url = \"http://localhost:5000/api/ViewType/add\";\nexport function* workerStart_POST_RequestServer() {\n  try {\n    const stateSendServer = yield select(state => state.WindowCreateNewData.stateData);\n    stateSendServer.uid = Number(stateSendServer.uid);\n    console.log(\"Результат запроса state\", stateSendServer);\n    const data = yield call(fetch(url, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(stateSendServer)\n    }));\n    yield put(console.log(\"Результ POST \", data));\n    yield put(getRequestServer(data));\n  } catch (error) {\n    alert('workerStart_POST_RequestServer error ', error);\n  }\n}\nexport function* watchStart_POST_RequestServer() {\n  yield takeEvery(START_POST_REQUEST, workerStart_POST_RequestServer);\n}","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/sagas/ViewType/sagasNewDataViewType.js"],"names":["takeEvery","select","put","call","getRequestServer","url_POST","START_POST_REQUEST","GET_REQUEST","url","workerStart_POST_RequestServer","stateSendServer","state","WindowCreateNewData","stateData","uid","Number","console","log","data","fetch","method","headers","Accept","body","JSON","stringify","error","alert","watchStart_POST_RequestServer"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,GAA5B,EAAiCC,IAAjC,QAA6C,oBAA7C;AACA,SAAQC,gBAAR,QAA+B,mDAA/B;AACA,SAAQC,QAAR,QAAuB,oBAAvB;AACA,SAAQC,kBAAR,QAAiC,uCAAjC;AACA,SAAQC,WAAR,QAA0B,kCAA1B,C,CACA;;AAIA,MAAMC,GAAG,GAAG,wCAAZ;AAGA,OAAO,UAAUC,8BAAV,GAA0C;AAE7C,MAAI;AACA,UAAMC,eAAe,GAAG,MAAMT,MAAM,CAAEU,KAAK,IAAIA,KAAK,CAACC,mBAAN,CAA0BC,SAArC,CAApC;AAEAH,IAAAA,eAAe,CAACI,GAAhB,GAAsBC,MAAM,CAACL,eAAe,CAACI,GAAjB,CAA5B;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAa,yBAAb,EAAwCP,eAAxC;AAEA,UAAMQ,IAAI,GAAG,MAAMf,IAAI,CAACgB,KAAK,CAAEX,GAAF,EAAM;AAC3BY,MAAAA,MAAM,EAAE,MADmB;AAE3BC,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE,kBADH;AAEL,wBAAgB;AAFX,OAFkB;AAM3BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAef,eAAf;AANqB,KAAN,CAAN,CAAvB;AASA,UAAMR,GAAG,CAAEc,OAAO,CAACC,GAAR,CAAa,eAAb,EAA8BC,IAA9B,CAAF,CAAT;AAEA,UAAMhB,GAAG,CAAEE,gBAAgB,CAACc,IAAD,CAAlB,CAAT;AAGH,GArBD,CAqBE,OAAOQ,KAAP,EAAc;AACZC,IAAAA,KAAK,CAAC,uCAAD,EAA0CD,KAA1C,CAAL;AACH;AAEJ;AAED,OAAO,UAAUE,6BAAV,GAAyC;AAE5C,QAAM5B,SAAS,CAACM,kBAAD,EAAqBG,8BAArB,CAAf;AAEH","sourcesContent":["import { takeEvery, select, put, call } from 'redux-saga/effects';\r\nimport {getRequestServer} from '../../store/serverViewType/actions/actionViewType';\r\nimport {url_POST} from \"../../constans/url\"\r\nimport {START_POST_REQUEST} from '../../store/windowCreateNewData/types';\r\nimport {GET_REQUEST} from '../../store/serverViewType/types';\r\n//import {newDataFromServer} from '../../containers/EditWindow/ContEditWindow'\r\n\r\n\r\n\r\nconst url = \"http://localhost:5000/api/ViewType/add\"\r\n\r\n\r\nexport function* workerStart_POST_RequestServer(){\r\n    \r\n    try {\r\n        const stateSendServer = yield select( state => state.WindowCreateNewData.stateData);\r\n        \r\n        stateSendServer.uid = Number(stateSendServer.uid);\r\n        \r\n        console.log (\"Результат запроса state\", stateSendServer);\r\n\r\n        const data = yield call(fetch( url,{\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                  },\r\n                body: JSON.stringify(stateSendServer)\r\n                }));\r\n        \r\n        yield put( console.log (\"Результ POST \", data) );\r\n        \r\n        yield put( getRequestServer(data) );\r\n        \r\n        \r\n    } catch (error) {\r\n        alert('workerStart_POST_RequestServer error ', error);\r\n    }\r\n \r\n}\r\n\r\nexport function* watchStart_POST_RequestServer(){\r\n    \r\n    yield takeEvery(START_POST_REQUEST, workerStart_POST_RequestServer)\r\n\r\n}"]},"metadata":{},"sourceType":"module"}