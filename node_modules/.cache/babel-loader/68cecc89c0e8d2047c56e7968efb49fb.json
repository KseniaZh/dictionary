{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\containers\\\\baseEltypeClass\\\\CompareEltypeClass.js\";\nimport React, { useState } from 'react';\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport ButtonLinkSmallNotMouse from '../../UserInterface/Buttons/Button/ButtonLinkSmallNotMouse';\nimport ConsoleButton from '../../components/ConsoleButton/ConsoleButton';\nimport HeaderDictionary from '../../components/Header/HeaderDictionary';\nimport CompareTableEltypeClass from '../../components/Table/CompareTableEltypeClass';\nimport { saveTypeRequest, saveNameWindow } from '../../store/EltypeClass/actions/actionEltypeClass';\nimport { linkEltypeClass } from '../Navigation/Main';\nimport { linkEditWindowEltypeClass } from '../Navigation/Main';\nimport { linkWindowConfirmDeleting } from '../Navigation/Main';\n\nfunction CompareEltypeClass(props) {\n  const linkAddress = linkEltypeClass;\n  const linkAddressWindowEdit = linkEditWindowEltypeClass;\n  const linkAddressWindowDelete = linkWindowConfirmDeleting;\n  const dispatch = useDispatch();\n  const compareArr = useSelector(state => state.compareDataEltypeClass); // массив строк, избранных для сравнения\n\n  const focusData = useSelector(state => state.createDataEltypeClass.stateData); // запомнить данные выбранной строки\n\n  const [flagCompareTableOpen, setFlagCompareTableOpen] = useState(true); //открывается, если выбрано строк более 1\n\n  const hendlerOpenWindow = (nameWindow, typeRequest) => {\n    dispatch(saveTypeRequest(typeRequest));\n    dispatch(saveNameWindow(nameWindow));\n  };\n\n  const HendlerOnMouseover = () => {};\n\n  const HendlerOnMouseLeave = () => {};\n\n  const hendlerClick = () => {};\n\n  const hendlerDelete = () => {\n    console.log(\"Delete row\");\n  };\n\n  if (compareArr.length <= 1) {\n    setFlagCompareTableOpen(false);\n  }\n\n  ;\n  const stateConsoleButton = [{\n    text: \"Внести изменения\",\n    icon: \"fa fa-pencil-square-o fa-lg\",\n    onclick: () => hendlerOpenWindow(\"Внести изменения\", \"put\"),\n    link: [linkAddressWindowEdit]\n  }, {\n    text: \"Удалить\",\n    icon: \"fa fa-times fa-lg\",\n    onclick: () => {},\n    link: [linkAddressWindowDelete]\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"DataBase__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"DataBase__header__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ConsoleButton, {\n    classnameWrapper: \"DataBase__header__console\",\n    stateConsoleButton: stateConsoleButton,\n    onmouseover: HendlerOnMouseover,\n    onmouseleave: HendlerOnMouseLeave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(HeaderDictionary, {\n    classname: \"DataBase__header__header\",\n    nameHeader: \"\\u0421\\u0440\\u0430\\u0432\\u043D\\u0438\\u0442\\u044C \\u0438\\u0437\\u0431\\u0440\\u0430\\u043D\\u043D\\u043E\\u0435: \\u041A\\u043B\\u0430\\u0441\\u0441\\u044B \\u0434\\u043B\\u044F \\u0422\\u0438\\u043F\\u043E\\u0432 \\u0441\\u0432\\u044F\\u0437\\u0435\\u0439 \\u0438 \\u0422\\u0438\\u043F\\u043E\\u0432 \\u0441\\u0443\\u0449\\u043D\\u043E\\u0441\\u0442\\u0435\\u0439\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ButtonLinkSmallNotMouse, {\n    onclick: () => {},\n    to: linkAddress,\n    icon: \"fa fa-times\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  })), flagCompareTableOpen ? /*#__PURE__*/React.createElement(CompareTableEltypeClass, {\n    columnName: Object.keys(focusData),\n    dataTable: compareArr,\n    onclick: hendlerClick,\n    onclickDelete: hendlerDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 26\n    }\n  }, \" \\u041D\\u0435\\u0434\\u043E\\u0441\\u0442\\u0430\\u0442\\u043E\\u0447\\u043D\\u043E \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0439 \\u0434\\u043B\\u044F \\u0441\\u0440\\u0430\\u0432\\u043D\\u0435\\u043D\\u0438\\u044F\"));\n}\n\nexport default connect()(CompareEltypeClass);","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/containers/baseEltypeClass/CompareEltypeClass.js"],"names":["React","useState","connect","useDispatch","useSelector","ButtonLinkSmallNotMouse","ConsoleButton","HeaderDictionary","CompareTableEltypeClass","saveTypeRequest","saveNameWindow","linkEltypeClass","linkEditWindowEltypeClass","linkWindowConfirmDeleting","CompareEltypeClass","props","linkAddress","linkAddressWindowEdit","linkAddressWindowDelete","dispatch","compareArr","state","compareDataEltypeClass","focusData","createDataEltypeClass","stateData","flagCompareTableOpen","setFlagCompareTableOpen","hendlerOpenWindow","nameWindow","typeRequest","HendlerOnMouseover","HendlerOnMouseLeave","hendlerClick","hendlerDelete","console","log","length","stateConsoleButton","text","icon","onclick","link","Object","keys"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport ButtonLinkSmallNotMouse from '../../UserInterface/Buttons/Button/ButtonLinkSmallNotMouse';\r\nimport ConsoleButton from '../../components/ConsoleButton/ConsoleButton';\r\nimport HeaderDictionary from '../../components/Header/HeaderDictionary';\r\nimport CompareTableEltypeClass from '../../components/Table/CompareTableEltypeClass';\r\n\r\nimport {\r\n    saveTypeRequest,\r\n    saveNameWindow\r\n} from '../../store/EltypeClass/actions/actionEltypeClass';\r\n\r\nimport { linkEltypeClass } from '../Navigation/Main';\r\nimport { linkEditWindowEltypeClass } from '../Navigation/Main';\r\nimport { linkWindowConfirmDeleting } from '../Navigation/Main';\r\n\r\n\r\nfunction CompareEltypeClass(props) {\r\n\r\n    const linkAddress = linkEltypeClass;\r\n    const linkAddressWindowEdit = linkEditWindowEltypeClass;\r\n    const linkAddressWindowDelete = linkWindowConfirmDeleting;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const compareArr = useSelector(state => state.compareDataEltypeClass); // массив строк, избранных для сравнения\r\n    const focusData = useSelector(state => state.createDataEltypeClass.stateData); // запомнить данные выбранной строки\r\n\r\n    const [flagCompareTableOpen, setFlagCompareTableOpen] = useState(true); //открывается, если выбрано строк более 1\r\n\r\n    const hendlerOpenWindow = (nameWindow, typeRequest) => {\r\n        dispatch(saveTypeRequest(typeRequest));\r\n        dispatch(saveNameWindow(nameWindow));\r\n    }\r\n    const HendlerOnMouseover = () => {}\r\n    const HendlerOnMouseLeave = () => {}\r\n    const hendlerClick = () => { }\r\n    const hendlerDelete = () => {\r\n        console.log(\"Delete row\");\r\n    }\r\n\r\n    if (compareArr.length <= 1) {\r\n        setFlagCompareTableOpen(false);\r\n    };\r\n    const stateConsoleButton = [\r\n  \r\n        {\r\n            text: \"Внести изменения\",\r\n            icon: \"fa fa-pencil-square-o fa-lg\",\r\n            onclick: () => hendlerOpenWindow(\"Внести изменения\", \"put\"),\r\n            link: [linkAddressWindowEdit]\r\n        },\r\n        {\r\n            text: \"Удалить\",\r\n            icon: \"fa fa-times fa-lg\",\r\n            onclick: () => { },\r\n            link: [linkAddressWindowDelete]\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <div className=\"DataBase__container\">\r\n\r\n            <div className=\"DataBase__header__container\">\r\n\r\n                <ConsoleButton\r\n                    classnameWrapper=\"DataBase__header__console\"\r\n\r\n                    stateConsoleButton={stateConsoleButton}\r\n\r\n                    onmouseover={HendlerOnMouseover}\r\n                    onmouseleave={HendlerOnMouseLeave}\r\n\r\n                />\r\n\r\n                <HeaderDictionary\r\n                    classname=\"DataBase__header__header\"\r\n                    nameHeader=\"Сравнить избранное: Классы для Типов связей и Типов сущностей\"\r\n                />\r\n\r\n                <ButtonLinkSmallNotMouse\r\n                    onclick={() => { }}\r\n                    to={linkAddress}\r\n                    icon=\"fa fa-times\"\r\n                />\r\n            </div>\r\n\r\n\r\n            {\r\n                flagCompareTableOpen ?\r\n                        <CompareTableEltypeClass\r\n                                columnName={Object.keys(focusData)}\r\n                                dataTable={compareArr}\r\n                                onclick={hendlerClick}\r\n                                onclickDelete={hendlerDelete}\r\n                            />\r\n                        :<h1> Недостаточно значений для сравнения</h1>\r\n            }\r\n        \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect()(CompareEltypeClass)"]},"metadata":{},"sourceType":"module"}