{"ast":null,"code":"import { GET_REQUEST, POST_REQUEST, PUT_REQUEST, DELETE_REQUEST, SORTING_TABLE } from \"../types\";\nexport const getRequestServer = dataFromServer => {\n  return {\n    type: GET_REQUEST,\n    payload: dataFromServer\n  };\n};\nexport const postRequestServer = dataFromServer => {\n  return {\n    type: POST_REQUEST,\n    payload: dataFromServer\n  };\n};\nexport const putRequestServer = (dataFromServer, oldStateTable) => {\n  let newStateTable = oldStateTable.map(obj => {\n    if (obj.uid === dataFromServer.uid) {\n      obj = dataFromServer;\n    }\n\n    return obj;\n  });\n  return {\n    type: PUT_REQUEST,\n    payload: newStateTable\n  };\n};\nexport const deleteRequestServer = (dataFromServer, oldStateTable) => {\n  let newStateTable = oldStateTable.filter(obj => obj.uid !== dataFromServer.uid);\n  return {\n    type: DELETE_REQUEST,\n    payload: newStateTable\n  };\n}; // ���������� ������� \n\nexport const sortingTable = data => {\n  return {\n    type: SORTING_TABLE,\n    payload: data\n  };\n};","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/store/BasisReport/actions/actionBasisReport.js"],"names":["GET_REQUEST","POST_REQUEST","PUT_REQUEST","DELETE_REQUEST","SORTING_TABLE","getRequestServer","dataFromServer","type","payload","postRequestServer","putRequestServer","oldStateTable","newStateTable","map","obj","uid","deleteRequestServer","filter","sortingTable","data"],"mappings":"AAAA,SACIA,WADJ,EAEIC,YAFJ,EAGIC,WAHJ,EAIIC,cAJJ,EAKIC,aALJ,QAOO,UAPP;AASA,OAAO,MAAMC,gBAAgB,GAAIC,cAAD,IAAkB;AAE9C,SAAO;AACHC,IAAAA,IAAI,EAAEP,WADH;AAEHQ,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CANM;AAQP,OAAO,MAAMG,iBAAiB,GAAIH,cAAD,IAAkB;AAE/C,SAAO;AACHC,IAAAA,IAAI,EAAEN,YADH;AAEHO,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CANM;AAQP,OAAO,MAAMI,gBAAgB,GAAG,CAACJ,cAAD,EAAiBK,aAAjB,KAAiC;AAE7D,MAAIC,aAAa,GAAGD,aAAa,CAACE,GAAd,CAAoBC,GAAG,IAAG;AAC1C,QAAIA,GAAG,CAACC,GAAJ,KAAYT,cAAc,CAACS,GAA/B,EAAmC;AAC3BD,MAAAA,GAAG,GAAGR,cAAN;AACH;;AACG,WAAOQ,GAAP;AACX,GALmB,CAApB;AAOA,SAAO;AACHP,IAAAA,IAAI,EAAEL,WADH;AAEHM,IAAAA,OAAO,EAAEI;AAFN,GAAP;AAIH,CAbM;AAeP,OAAO,MAAMI,mBAAmB,GAAG,CAACV,cAAD,EAAiBK,aAAjB,KAAmC;AAElE,MAAIC,aAAa,GAAGD,aAAa,CAACM,MAAd,CAAsBH,GAAG,IAAIA,GAAG,CAACC,GAAJ,KAAYT,cAAc,CAACS,GAAxD,CAApB;AAEA,SAAO;AACHR,IAAAA,IAAI,EAAEJ,cADH;AAEHK,IAAAA,OAAO,EAAEI;AAFN,GAAP;AAIH,CARM,C,CASP;;AAEA,OAAO,MAAMM,YAAY,GAAIC,IAAD,IAAU;AAElC,SAAO;AACHZ,IAAAA,IAAI,EAAEH,aADH;AAEHI,IAAAA,OAAO,EAAEW;AAFN,GAAP;AAIH,CANM","sourcesContent":["import {\r\n    GET_REQUEST,\r\n    POST_REQUEST,\r\n    PUT_REQUEST,\r\n    DELETE_REQUEST,\r\n    SORTING_TABLE,\r\n\r\n} from \"../types\";\r\n\r\nexport const getRequestServer = (dataFromServer)=>{\r\n\r\n    return {\r\n        type: GET_REQUEST,\r\n        payload: dataFromServer\r\n    }\r\n}\r\n\r\nexport const postRequestServer = (dataFromServer)=>{\r\n    \r\n    return {\r\n        type: POST_REQUEST,\r\n        payload: dataFromServer\r\n    }\r\n}\r\n\r\nexport const putRequestServer = (dataFromServer, oldStateTable)=>{\r\n\r\n    let newStateTable = oldStateTable.map ( obj =>{\r\n        if (obj.uid === dataFromServer.uid){\r\n                obj = dataFromServer;\r\n            }\r\n                return obj\r\n    })\r\n\r\n    return {\r\n        type: PUT_REQUEST,\r\n        payload: newStateTable\r\n    }\r\n}\r\n\r\nexport const deleteRequestServer = (dataFromServer, oldStateTable) => {\r\n\r\n    let newStateTable = oldStateTable.filter( obj => obj.uid !== dataFromServer.uid )\r\n\r\n    return {\r\n        type: DELETE_REQUEST,\r\n        payload: newStateTable\r\n    }\r\n}\r\n// ���������� ������� \r\n\r\nexport const sortingTable = (data) => {\r\n\r\n    return {\r\n        type: SORTING_TABLE,\r\n        payload: data\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}