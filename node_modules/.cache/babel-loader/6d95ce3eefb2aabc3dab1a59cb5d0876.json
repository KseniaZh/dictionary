{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\components\\\\Table\\\\RowTable.js\";\nimport React, { useRef } from 'react';\n\nfunction RowTable(props) {\n  const rowRef = useRef(null);\n  const Keys = Object.keys(props.dataRow);\n  const uid = props.dataRow.uid; //const inputChecked = data => {\n  //    if (data === true) {\n  //        return 'checked'\n  //    } else {\n  //        return false\n  //    };\n  //}\n\n  const inputChecked = data => {\n    data ? 'checked' : false;\n  };\n\n  const hendlerClick = event => {\n    props.onclick(event, uid);\n    rowRef.current.focus();\n  };\n\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, props.number <= props.CountRow ? /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, \" \", props.number) : null, Keys.map((keyObj, index) => {\n    if (props.number <= props.CountRow) {\n      if (keyObj === 'name') {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          ref: rowRef,\n          key: index,\n          uid: props.dataRow.uid,\n          onClick: hendlerClick,\n          onContextMenu: hendlerClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 40\n          }\n        }, props.dataRow[keyObj]);\n      }\n\n      if (keyObj === 'isDeleted' || keyObj === 'isTemplate') {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: index,\n          uid: props.dataRow.uid,\n          onClick: hendlerClick,\n          onContextMenu: hendlerClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 40\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"checkbox\",\n          checked: inputChecked(props.dataRow[keyObj]),\n          disabled: \"disabled\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 37\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"fa fa-check\",\n          \"aria-hidden\": \"true\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 39\n          }\n        }));\n      }\n    }\n  }));\n}\n\nexport default RowTable;","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/components/Table/RowTable.js"],"names":["React","useRef","RowTable","props","rowRef","Keys","Object","keys","dataRow","uid","inputChecked","data","hendlerClick","event","onclick","current","focus","number","CountRow","map","keyObj","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA6B,OAA7B;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAErB,QAAMC,MAAM,GAAGH,MAAM,CAAC,IAAD,CAArB;AAEA,QAAMI,IAAI,GAAGC,MAAM,CAACC,IAAP,CAAYJ,KAAK,CAACK,OAAlB,CAAb;AACA,QAAMC,GAAG,GAAGN,KAAK,CAACK,OAAN,CAAcC,GAA1B,CALqB,CAOrB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMC,YAAY,GAAGC,IAAI,IAAI;AAAEA,IAAAA,IAAI,GAAG,SAAH,GAAe,KAAnB;AAA0B,GAAzD;;AAGA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5BV,IAAAA,KAAK,CAACW,OAAN,CAAcD,KAAd,EAAqBJ,GAArB;AACAL,IAAAA,MAAM,CAACW,OAAP,CAAeC,KAAf;AACH,GAHD;;AAKA,sBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAESb,KAAK,CAACc,MAAN,IAAgBd,KAAK,CAACe,QAAvB,gBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMf,KAAK,CAACc,MAAZ,CADJ,GAEK,IAJb,EAQQZ,IAAI,CAACc,GAAL,CAAS,CAACC,MAAD,EAASC,KAAT,KAAmB;AAExB,QAAIlB,KAAK,CAACc,MAAN,IAAgBd,KAAK,CAACe,QAA1B,EAAoC;AAE5B,UAAIE,MAAM,KAAK,MAAf,EAAuB;AACnB,4BAAO;AACH,UAAA,GAAG,EAAEhB,MADF;AAEH,UAAA,GAAG,EAAEiB,KAFF;AAGH,UAAA,GAAG,EAAElB,KAAK,CAACK,OAAN,CAAcC,GAHhB;AAIH,UAAA,OAAO,EAAEG,YAJN;AAKH,UAAA,aAAa,EAAEA,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WASMT,KAAK,CAACK,OAAN,CAAcY,MAAd,CATN,CAAP;AAYH;;AAED,UAAIA,MAAM,KAAK,WAAX,IAA0BA,MAAM,KAAK,YAAzC,EAAuD;AACnD,4BAAO;AACC,UAAA,GAAG,EAAEC,KADN;AAEC,UAAA,GAAG,EAAElB,KAAK,CAACK,OAAN,CAAcC,GAFpB;AAGC,UAAA,OAAO,EAAEG,YAHV;AAIC,UAAA,aAAa,EAAEA,YAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAOH;AACI,UAAA,IAAI,EAAC,UADT;AAEI,UAAA,OAAO,EAAEF,YAAY,CAACP,KAAK,CAACK,OAAN,CAAcY,MAAd,CAAD,CAFzB;AAGI,UAAA,QAAQ,EAAC,UAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPG,eAYD;AAAM,UAAA,SAAS,EAAC,aAAhB;AAA8B,yBAAY,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAZC,CAAP;AAcH;AACR;AAGJ,GAtCD,CARR,CAFJ;AAqDH;;AAED,eAAelB,QAAf","sourcesContent":["import React, { useRef} from 'react';\r\n\r\nfunction RowTable(props) {\r\n\r\n    const rowRef = useRef(null);\r\n    \r\n    const Keys = Object.keys(props.dataRow);\r\n    const uid = props.dataRow.uid;\r\n\r\n    //const inputChecked = data => {\r\n    //    if (data === true) {\r\n    //        return 'checked'\r\n    //    } else {\r\n    //        return false\r\n    //    };\r\n    //}\r\n    const inputChecked = data => { data ? 'checked' : false }\r\n       \r\n\r\n    const hendlerClick = (event) => {\r\n        props.onclick(event, uid);\r\n        rowRef.current.focus();\r\n    }\r\n\r\n    return(\r\n\r\n        <tr >\r\n            {\r\n                (props.number <= props.CountRow)?\r\n                    <td> {props.number}</td>\r\n                    :null\r\n            }\r\n            \r\n            {\r\n                Keys.map((keyObj, index) => {\r\n\r\n                    if (props.number <= props.CountRow) {\r\n\r\n                            if (keyObj === 'name') {\r\n                                return <td\r\n                                    ref={rowRef}\r\n                                    key={index}\r\n                                    uid={props.dataRow.uid}\r\n                                    onClick={hendlerClick}\r\n                                    onContextMenu={hendlerClick}\r\n\r\n\r\n                                        >\r\n                                            {props.dataRow[keyObj]}\r\n\r\n                                </td>\r\n                            }\r\n\r\n                            if (keyObj === 'isDeleted' || keyObj === 'isTemplate') {\r\n                                return <td\r\n                                        key={index}\r\n                                        uid={props.dataRow.uid}\r\n                                        onClick={hendlerClick}\r\n                                        onContextMenu={hendlerClick}\r\n\r\n                                >\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        checked={inputChecked(props.dataRow[keyObj])}\r\n                                        disabled=\"disabled\"\r\n\r\n                                    /><span className=\"fa fa-check\" aria-hidden=\"true\"></span>\r\n                                </td>\r\n                            }\r\n                    }\r\n\r\n                    \r\n                }) \r\n            }\r\n        \r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default RowTable"]},"metadata":{},"sourceType":"module"}