{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\hoc\\\\withClickSaveFocusRow.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { saveDataStore } from '../store/EltypeClass/actions/actionEltypeClass';\nimport { focusRowColorBackground } from '../functions/focusRowColorBackground';\n\nconst mapStateToProps = state => {\n  return {\n    //  activList: state.stateFlagsEltypeClass.dataListTable, // отображаемый лист\n    focusData: state.createDataEltypeClass.stateData,\n    //что хранится в фокусе\n    stateTable: state.stateTableEltypeClass //ВСЯ база\n\n  };\n};\n\nconst mapDispatchToProps = {\n  saveDataStore\n};\n\nconst withClickSaveFocusRow = (Component, activList) => {\n  class ComponentWithClickSaveFocus extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.handlerTableRowUID = (event, data) => {\n        //фокус на строку\n        event.preventDefault();\n\n        if (event.target.parentElement.tagName == 'TR' || event.target.parentElement.tagName == 'TD' || event.target.parentElement.tagName == 'DIV') {\n          this.props.stateTable.map(obj => {\n            if (obj.uid === data) {\n              this.props.saveDataStore(obj); // сохранить в хранилище для изменений\n            }\n          });\n        }\n\n        ;\n      };\n    }\n\n    componentDidUpdate(prevProps) {\n      if (this.props.focusData !== prevProps.focusData) {\n        focusRowColorBackground(activList, this.props.focusData);\n      }\n    }\n\n    render() {\n      let props = { ...this.props,\n        onclick: this.handlerTableRowUID\n      };\n      return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }));\n    }\n\n  }\n\n  return connect(mapStateToProps, mapDispatchToProps)(ComponentWithClickSaveFocus);\n};\n\nexport default withClickSaveFocusRow;","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/hoc/withClickSaveFocusRow.js"],"names":["React","connect","saveDataStore","focusRowColorBackground","mapStateToProps","state","focusData","createDataEltypeClass","stateData","stateTable","stateTableEltypeClass","mapDispatchToProps","withClickSaveFocusRow","Component","activList","ComponentWithClickSaveFocus","constructor","props","handlerTableRowUID","event","data","preventDefault","target","parentElement","tagName","map","obj","uid","componentDidUpdate","prevProps","render","onclick"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,gDAA9B;AAEA,SAASC,uBAAT,QAAwC,sCAAxC;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACL;AACEC,IAAAA,SAAS,EAAED,KAAK,CAACE,qBAAN,CAA4BC,SAFpC;AAE+C;AAClDC,IAAAA,UAAU,EAAEJ,KAAK,CAACK,qBAHf,CAGqC;;AAHrC,GAAP;AAKH,CAND;;AAQA,MAAMC,kBAAkB,GAAG;AACvBT,EAAAA;AADuB,CAA3B;;AAKA,MAAMU,qBAAqB,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AAEpD,QAAMC,2BAAN,SAA0Cf,KAAK,CAACa,SAAhD,CAA0D;AACtDG,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,YAAMA,KAAN;;AADe,WAInBC,kBAJmB,GAIE,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAAE;AACpCD,QAAAA,KAAK,CAACE,cAAN;;AACA,YAAIF,KAAK,CAACG,MAAN,CAAaC,aAAb,CAA2BC,OAA3B,IAAsC,IAAtC,IAA8CL,KAAK,CAACG,MAAN,CAAaC,aAAb,CAA2BC,OAA3B,IAAsC,IAApF,IAA4FL,KAAK,CAACG,MAAN,CAAaC,aAAb,CAA2BC,OAA3B,IAAsC,KAAtI,EAA6I;AAEzI,eAAKP,KAAL,CAAWR,UAAX,CAAsBgB,GAAtB,CAA2BC,GAAD,IAAS;AAC/B,gBAAIA,GAAG,CAACC,GAAJ,KAAYP,IAAhB,EAAsB;AAClB,mBAAKH,KAAL,CAAWf,aAAX,CAAyBwB,GAAzB,EADkB,CACa;AAClC;AACJ,WAJD;AAKH;;AAAA;AACJ,OAdkB;AAElB;;AAcDE,IAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B,UAAI,KAAKZ,KAAL,CAAWX,SAAX,KAAyBuB,SAAS,CAACvB,SAAvC,EAAkD;AAC9CH,QAAAA,uBAAuB,CAACW,SAAD,EAAY,KAAKG,KAAL,CAAWX,SAAvB,CAAvB;AACH;AACJ;;AAEDwB,IAAAA,MAAM,GAAG;AACL,UAAIb,KAAK,GAAG,EACR,GAAG,KAAKA,KADA;AAERc,QAAAA,OAAO,EAAE,KAAKb;AAFN,OAAZ;AAIA,0BACI,oBAAC,SAAD,oBAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAGH;;AA/BqD;;AAiC1D,SAAOhB,OAAO,CAACG,eAAD,EAAkBO,kBAAlB,CAAP,CAA6CI,2BAA7C,CAAP;AACH,CApCD;;AAqCA,eAAeH,qBAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { saveDataStore } from '../store/EltypeClass/actions/actionEltypeClass';\r\n\r\nimport { focusRowColorBackground } from '../functions/focusRowColorBackground';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      //  activList: state.stateFlagsEltypeClass.dataListTable, // отображаемый лист\r\n        focusData: state.createDataEltypeClass.stateData, //что хранится в фокусе\r\n        stateTable: state.stateTableEltypeClass //ВСЯ база\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveDataStore\r\n}\r\n\r\n\r\nconst withClickSaveFocusRow = (Component, activList) => {\r\n\r\n    class ComponentWithClickSaveFocus extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n        }\r\n\r\n        handlerTableRowUID = (event, data) => { //фокус на строку\r\n            event.preventDefault();\r\n            if (event.target.parentElement.tagName == 'TR' || event.target.parentElement.tagName == 'TD' || event.target.parentElement.tagName == 'DIV') {\r\n\r\n                this.props.stateTable.map((obj) => {\r\n                    if (obj.uid === data) {\r\n                        this.props.saveDataStore(obj); // сохранить в хранилище для изменений\r\n                    }\r\n                });\r\n            };\r\n        }\r\n\r\n        componentDidUpdate(prevProps) {\r\n            if (this.props.focusData !== prevProps.focusData) {\r\n                focusRowColorBackground(activList, this.props.focusData);\r\n            }\r\n        }\r\n\r\n        render() {\r\n            let props = {\r\n                ...this.props,\r\n                onclick: this.handlerTableRowUID\r\n            }\r\n            return (\r\n                <Component {...props} />\r\n                )\r\n        }\r\n    }\r\n    return connect(mapStateToProps, mapDispatchToProps)(ComponentWithClickSaveFocus)\r\n}\r\nexport default withClickSaveFocusRow"]},"metadata":{},"sourceType":"module"}