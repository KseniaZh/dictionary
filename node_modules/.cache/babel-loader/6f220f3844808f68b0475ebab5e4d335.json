{"ast":null,"code":"export const hendlerSortBase = (event, sortKey, sortBase, func1, func2, counterRow, numOpenList) => {\n  const data = sortBase;\n\n  if (typeof data[0][sortKey] == 'boolean') {\n    //���� ��� �������\n    const compare = function (a, b) {\n      let x;\n      let y;\n\n      if (a[sortKey] == true) {\n        x = 1;\n      } else {\n        x = 0;\n      }\n\n      ;\n\n      if (b[sortKey] == true) {\n        y = 1;\n      } else {\n        y = 0;\n      }\n\n      ;\n      return y - x;\n    };\n\n    data.sort(compare);\n  } else {\n    data.sort((a, b) => a[sortKey].localeCompare(b[sortKey]));\n  }\n\n  dispatch(func1(data)); // ������� ��������� ��� ���� ������\n\n  dispatch(func2(data, counterRow, numOpenList)); // ����� ������ ��� �����, ������� ������� � ������ ������ �� ��������\n};","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/functions/Sort.js"],"names":["hendlerSortBase","event","sortKey","sortBase","func1","func2","counterRow","numOpenList","data","compare","a","b","x","y","sort","localeCompare","dispatch"],"mappings":"AAAA,OAAO,MAAMA,eAAe,GAAG,CAACC,KAAD,EAAQC,OAAR,EAAiBC,QAAjB,EAA2BC,KAA3B,EAAkCC,KAAlC,EAAyCC,UAAzC,EAAqDC,WAArD,KAAqE;AAEhG,QAAMC,IAAI,GAAGL,QAAb;;AAEA,MAAI,OAAOK,IAAI,CAAC,CAAD,CAAJ,CAAQN,OAAR,CAAP,IAA2B,SAA/B,EAA0C;AAAE;AACxC,UAAMO,OAAO,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC5B,UAAIC,CAAJ;AACA,UAAIC,CAAJ;;AACA,UAAIH,CAAC,CAACR,OAAD,CAAD,IAAc,IAAlB,EAAwB;AAAEU,QAAAA,CAAC,GAAG,CAAJ;AAAO,OAAjC,MAAuC;AAAEA,QAAAA,CAAC,GAAG,CAAJ;AAAO;;AAAA;;AAChD,UAAID,CAAC,CAACT,OAAD,CAAD,IAAc,IAAlB,EAAwB;AAAEW,QAAAA,CAAC,GAAG,CAAJ;AAAO,OAAjC,MAAuC;AAAEA,QAAAA,CAAC,GAAG,CAAJ;AAAO;;AAAA;AAChD,aAAOA,CAAC,GAAGD,CAAX;AACH,KAND;;AAOAJ,IAAAA,IAAI,CAACM,IAAL,CAAUL,OAAV;AACH,GATD,MASO;AACHD,IAAAA,IAAI,CAACM,IAAL,CAAU,CAACJ,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACR,OAAD,CAAD,CAAWa,aAAX,CAAyBJ,CAAC,CAACT,OAAD,CAA1B,CAApB;AACH;;AAEDc,EAAAA,QAAQ,CAACZ,KAAK,CAACI,IAAD,CAAN,CAAR,CAjBgG,CAiBzE;;AACvBQ,EAAAA,QAAQ,CAACX,KAAK,CAACG,IAAD,EAAOF,UAAP,EAAmBC,WAAnB,CAAN,CAAR,CAlBgG,CAkBhD;AAEnD,CApBM","sourcesContent":["export const hendlerSortBase = (event, sortKey, sortBase, func1, func2, counterRow, numOpenList) => {\r\n\r\n    const data = sortBase;\r\n\r\n    if (typeof data[0][sortKey] == 'boolean') { //���� ��� �������\r\n        const compare = function (a, b) {\r\n            let x;\r\n            let y;\r\n            if (a[sortKey] == true) { x = 1 } else { x = 0 };\r\n            if (b[sortKey] == true) { y = 1 } else { y = 0 };\r\n            return y - x;\r\n        };\r\n        data.sort(compare);\r\n    } else {\r\n        data.sort((a, b) => a[sortKey].localeCompare(b[sortKey]))\r\n    }\r\n\r\n    dispatch(func1(data)); // ������� ��������� ��� ���� ������\r\n    dispatch(func2(data, counterRow, numOpenList)); // ����� ������ ��� �����, ������� ������� � ������ ������ �� ��������\r\n\r\n}"]},"metadata":{},"sourceType":"module"}