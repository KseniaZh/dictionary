{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\containers\\\\Personalize\\\\Personalize.js\";\nimport React, { useState } from 'react';\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport Checkbox from '../../UserInterface/Input/Checkbox';\nimport { employDescriptionAll } from '../../store/Flags/actionsFlags';\nimport Select from '../../UserInterface/Select/Select';\nimport { changeStyleSelect } from '../../store/Style/actionsStyle';\nimport { linkLoginAuthChange } from '../Navigation/Main';\nimport ButtonLink from '../../UserInterface/Buttons/Button/ButtonLink';\n\nfunction Personalize(props) {\n  //переключение цветового решения приложения\n  const stateStylesAll = useSelector(state => state.stateFlagsAll.stateStyle.stylesAll);\n  const staleSelect = useSelector(state => state.stateFlagsAll.stateStyle.styleSelect);\n  const keysStyle = Object.keys(stateStylesAll);\n  const [styleValue, setStyleValue] = useState(staleSelect);\n\n  const hendlerSelect = event => {\n    event.preventDefault();\n    if (event.target.tagName !== 'SELECT') return;\n    setStyleValue(event.target.value);\n    console.log('Выбран ', event.target.value);\n    dispatch(changeStyleSelect(event.target.value));\n  }; //переключение подсказок во всем приложении\n\n\n  const flagEmployDescription = useSelector(state => state.stateFlagsAll.employDescriptionAll);\n  const dispatch = useDispatch();\n\n  const inputChecked = flag => {\n    if (flag === true) {\n      return \"checked\";\n    } else {\n      return \"\";\n    }\n  };\n\n  const HendlerHaveDescription = event => {\n    if (event.target.type === \"checkbox\") {\n      dispatch(employDescriptionAll(!flagEmployDescription));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Personalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    id: \"styleSelect\",\n    onchange: hendlerSelect,\n    value: styleValue,\n    tabindex: \"1\",\n    arrOptionSelect: keysStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Checkbox, {\n    label: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u044B\\u0432\\u0430\\u0442\\u044C \\u0432\\u0441\\u043F\\u043B\\u044B\\u0432\\u0430\\u044E\\u0449\\u0438\\u0435 \\u043F\\u043E\\u0434\\u0441\\u043A\\u0430\\u0437\\u043A\\u0438\",\n    id: \"haveDescription\",\n    type: \"checkbox\",\n    onchange: HendlerHaveDescription,\n    checked: inputChecked(flagEmployDescription),\n    classNameLabel: \"\",\n    classNameCheckbox: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ButtonLink, {\n    onclick: () => console.log('Открыть окно смены пароля LoginAuthСhange'),\n    to: linkLoginAuthChange,\n    name: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n    icon: \"fa fa-user-secret\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default connect()(Personalize);","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/containers/Personalize/Personalize.js"],"names":["React","useState","connect","useDispatch","useSelector","Checkbox","employDescriptionAll","Select","changeStyleSelect","linkLoginAuthChange","ButtonLink","Personalize","props","stateStylesAll","state","stateFlagsAll","stateStyle","stylesAll","staleSelect","styleSelect","keysStyle","Object","keys","styleValue","setStyleValue","hendlerSelect","event","preventDefault","target","tagName","value","console","log","dispatch","flagEmployDescription","inputChecked","flag","HendlerHaveDescription","type"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Checkbox from '../../UserInterface/Input/Checkbox';\r\nimport { employDescriptionAll } from '../../store/Flags/actionsFlags';\r\nimport Select from '../../UserInterface/Select/Select';\r\nimport { changeStyleSelect } from '../../store/Style/actionsStyle';\r\nimport { linkLoginAuthChange } from '../Navigation/Main';\r\nimport ButtonLink from '../../UserInterface/Buttons/Button/ButtonLink';\r\n\r\nfunction Personalize(props) {\r\n\r\n\r\n    //переключение цветового решения приложения\r\n    const stateStylesAll = useSelector(state => state.stateFlagsAll.stateStyle.stylesAll);\r\n    const staleSelect = useSelector(state => state.stateFlagsAll.stateStyle.styleSelect);\r\n    const keysStyle = Object.keys(stateStylesAll);\r\n\r\n    const [styleValue, setStyleValue] = useState(staleSelect);\r\n\r\n    const hendlerSelect = (event) => {\r\n        event.preventDefault();\r\n        if (event.target.tagName !== 'SELECT') return;\r\n        setStyleValue(event.target.value);\r\n        console.log('Выбран ', event.target.value);\r\n        dispatch(changeStyleSelect(event.target.value));\r\n    }\r\n\r\n    //переключение подсказок во всем приложении\r\n    const flagEmployDescription = useSelector(state => state.stateFlagsAll.employDescriptionAll);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const inputChecked = flag => {\r\n        if (flag === true) {\r\n            return \"checked\"\r\n        } else {\r\n            return \"\"\r\n        }\r\n    }\r\n    const HendlerHaveDescription = (event) => {\r\n        if (event.target.type === \"checkbox\") {\r\n            dispatch(employDescriptionAll(!flagEmployDescription));\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n            <div className=\"Personalize\">\r\n                <div>\r\n                    <Select\r\n                        id=\"styleSelect\"\r\n                        onchange={hendlerSelect}\r\n                        value={styleValue}\r\n                        tabindex='1'\r\n                        arrOptionSelect={keysStyle}\r\n                     />\r\n                </div>\r\n                <Checkbox\r\n                    label=\"Показывать всплывающие подсказки\"\r\n                    id=\"haveDescription\"\r\n                    type='checkbox'\r\n\r\n                    onchange={HendlerHaveDescription}\r\n                    checked={inputChecked(flagEmployDescription)}\r\n                    classNameLabel=''\r\n                    classNameCheckbox=''\r\n            />\r\n            <ButtonLink\r\n                onclick={()=>console.log('Открыть окно смены пароля LoginAuthСhange')}\r\n                to={linkLoginAuthChange}\r\n                name=\"Изменить пароль\"\r\n                icon=\"fa fa-user-secret\"\r\n            />\r\n\r\n            </div>\r\n\r\n    )\r\n}\r\n\r\nexport default connect()(Personalize)"]},"metadata":{},"sourceType":"module"}