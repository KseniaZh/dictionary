{"ast":null,"code":"import { takeEvery, select, put, call } from 'redux-saga/effects';\nimport { postRequestServer } from '../../store/EltypeClass/actions/actionEltypeClass';\nimport fetchData from '../../functions/fetchData';\nimport { url_EltypeClass_POST } from \"../../constans/url\";\nimport { START_POST_REQUEST } from '../../store/EltypeClass/types';\nexport function* workerStart_POST_RequestServer() {\n  const stateSendServer = yield select(state => state.createDataEltypeClass.stateData);\n\n  try {\n    const data = yield call(fetchData, url_EltypeClass_POST, 'POST', stateSendServer);\n    delete stateSendServer.uid;\n    yield put(postRequestServer(data));\n  } catch (error) {\n    console.log('workerStartRequestServer error ', error);\n  }\n}\nexport function* watch_EltypeClass_POST_RequestServer() {\n  yield takeEvery(START_POST_REQUEST, workerStart_POST_RequestServer);\n}","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/sagas/EltypeClass/sagas_POST_EltypeClass.js"],"names":["takeEvery","select","put","call","postRequestServer","fetchData","url_EltypeClass_POST","START_POST_REQUEST","workerStart_POST_RequestServer","stateSendServer","state","createDataEltypeClass","stateData","data","uid","error","console","log","watch_EltypeClass_POST_RequestServer"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,GAA5B,EAAiCC,IAAjC,QAA6C,oBAA7C;AACA,SAASC,iBAAT,QAAkC,mDAAlC;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,oBAAT,QAAqC,oBAArC;AACA,SAASC,kBAAT,QAAmC,+BAAnC;AAEA,OAAO,UAAUC,8BAAV,GAA0C;AAE7C,QAAMC,eAAe,GAAG,MAAMR,MAAM,CAACS,KAAK,IAAIA,KAAK,CAACC,qBAAN,CAA4BC,SAAtC,CAApC;;AAEA,MAAI;AAEA,UAAMC,IAAI,GAAG,MAAMV,IAAI,CAACE,SAAD,EAAYC,oBAAZ,EAAkC,MAAlC,EAA0CG,eAA1C,CAAvB;AAEA,WAAOA,eAAe,CAACK,GAAvB;AAEA,UAAMZ,GAAG,CAACE,iBAAiB,CAACS,IAAD,CAAlB,CAAT;AAEH,GARD,CAQE,OAAOE,KAAP,EAAc;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CF,KAA/C;AACF;AAEJ;AAED,OAAO,UAAUG,oCAAV,GAAgD;AAEnD,QAAMlB,SAAS,CAACO,kBAAD,EAAqBC,8BAArB,CAAf;AAEH","sourcesContent":["import { takeEvery, select, put, call } from 'redux-saga/effects';\r\nimport { postRequestServer } from '../../store/EltypeClass/actions/actionEltypeClass';\r\nimport fetchData from '../../functions/fetchData';\r\nimport { url_EltypeClass_POST } from \"../../constans/url\";\r\nimport { START_POST_REQUEST } from '../../store/EltypeClass/types';\r\n\r\nexport function* workerStart_POST_RequestServer(){\r\n    \r\n    const stateSendServer = yield select(state => state.createDataEltypeClass.stateData);\r\n    \r\n    try {\r\n\r\n        const data = yield call(fetchData, url_EltypeClass_POST, 'POST', stateSendServer);\r\n\r\n        delete stateSendServer.uid;\r\n        \r\n        yield put(postRequestServer(data));\r\n         \r\n    } catch (error) {\r\n       console.log('workerStartRequestServer error ', error);\r\n    }\r\n \r\n}\r\n\r\nexport function* watch_EltypeClass_POST_RequestServer(){\r\n    \r\n    yield takeEvery(START_POST_REQUEST, workerStart_POST_RequestServer)\r\n\r\n}"]},"metadata":{},"sourceType":"module"}