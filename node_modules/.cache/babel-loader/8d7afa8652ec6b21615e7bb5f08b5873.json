{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\containers\\\\Basis\\\\BasisCompare.js\";\nimport React, { useEffect } from 'react';\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport HeaderCompare from '../../components/Header/HeaderCompare';\nimport TableList from '../../components/Table/TableList';\nimport WarningCompare from '../../components/WarningWindow/WarningCompare';\nimport ContextMenuCompare from '../../components/ContextMenuWindow/ContextMenuCompare';\nimport { sortingCompareArr } from '../../store/User/actions/actionsCompareUser';\nimport { addDescription } from \"../../store/Description/actionsDescription\";\nimport withContextMenuWindow from '../../hoc/withContextMenuWindow';\n\nfunction BasisCompare(props) {\n  const dispatch = useDispatch();\n  const flagEmployDescription = useSelector(state => state.stateFlagsAll.employDescriptionAll); // разрешен ли пользователем показ подсказок\n\n  const arrDescription = useSelector(state => state.stateDescription); // массив подсказок из store (пока без кнопок консоли, заполнится после рединга)\n  //переключение цветового решения приложения\n\n  const stateStylesAll = useSelector(state => state.stateStyle.stylesAll);\n  const staleSelect = useSelector(state => state.stateStyle.styleSelect);\n\n  const haveDescription = dataStateConsoleButton => {\n    //добавляем подсказки на кнопки консоли\n    if (flagEmployDescription === true) {\n      let aboutDescription = {};\n      dataStateConsoleButton.map(obj => {\n        aboutDescription[obj.name] = [obj.text];\n      });\n      dispatch(addDescription(aboutDescription, arrDescription));\n    }\n\n    ;\n  }; //логика добавления контекстного меню через hoc\n\n\n  const CompareTableWithContextMenu = withContextMenuWindow(TableList, ContextMenuCompare, props.stateConsoleButton, stateStylesAll[staleSelect].contextMenuWindow);\n  useEffect(() => {\n    haveDescription(props.stateConsoleButton);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: stateStylesAll[staleSelect].dataBaseContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HeaderCompare, {\n    classnameHeaderConsole: stateStylesAll[staleSelect].dataBaseHeaderConsole,\n    stateConsoleButton: props.stateConsoleButton,\n    classnameDescription: stateStylesAll[staleSelect].descriptionButton,\n    nameBase: props.nameBase,\n    nameHeader: props.nameHeader,\n    hendlerCloseWindow: props.hendlerCloseWindow,\n    to: props.linkBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), props.compareArr.length > 1 ? /*#__PURE__*/React.createElement(CompareTableWithContextMenu, {\n    classnameConsoleCountRow: stateStylesAll[staleSelect].consoleCountRow,\n    classnameButtonConsoleCountPow: stateStylesAll[staleSelect].personalizeButton,\n    classnameRowTable: stateStylesAll[staleSelect].userRowTable,\n    classnameCheckbox: stateStylesAll[staleSelect].beautifulCheckboxTable,\n    classnameDescription: stateStylesAll[staleSelect].descriptionButton,\n    colorRowTableBackground: stateStylesAll[staleSelect].rowTableBackground,\n    colorFocusRowBackground: stateStylesAll[staleSelect].focusRowBackground,\n    flagOpenCompareWindow: props.flagOpenCompareWindow,\n    textFooter: \"\\u0410\\u043A\\u0442\\u0438\\u0432\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D \\u0440\\u0435\\u0436\\u0438\\u043C \\u0441\\u0440\\u0430\\u0432\\u043D\\u0435\\u043D\\u0438\\u044F \\u0438\\u0437\\u0431\\u0440\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\",\n    stateTable: props.compareArr,\n    visibleNameСolumns: props.visibleNameСolumns,\n    dataTable: props.compareArr,\n    sortСolumns: props.sortСolumns,\n    CountRow: props.compareArr.length + 1,\n    onclickDelete: props.hendlerButtonRowClickDeleteCompareData,\n    typeDataColumns: props.typeDataColumns,\n    funcSorting: data => dispatch(sortingCompareArr(data)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(WarningCompare, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 23\n    }\n  }));\n}\n\nexport default connect()(BasisCompare);","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/containers/Basis/BasisCompare.js"],"names":["React","useEffect","connect","useDispatch","useSelector","HeaderCompare","TableList","WarningCompare","ContextMenuCompare","sortingCompareArr","addDescription","withContextMenuWindow","BasisCompare","props","dispatch","flagEmployDescription","state","stateFlagsAll","employDescriptionAll","arrDescription","stateDescription","stateStylesAll","stateStyle","stylesAll","staleSelect","styleSelect","haveDescription","dataStateConsoleButton","aboutDescription","map","obj","name","text","CompareTableWithContextMenu","stateConsoleButton","contextMenuWindow","dataBaseContainer","dataBaseHeaderConsole","descriptionButton","nameBase","nameHeader","hendlerCloseWindow","linkBack","compareArr","length","consoleCountRow","personalizeButton","userRowTable","beautifulCheckboxTable","rowTableBackground","focusRowBackground","flagOpenCompareWindow","visibleNameСolumns","sortСolumns","hendlerButtonRowClickDeleteCompareData","typeDataColumns","data"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport HeaderCompare from '../../components/Header/HeaderCompare';\r\nimport TableList from '../../components/Table/TableList';\r\nimport WarningCompare from '../../components/WarningWindow/WarningCompare';\r\nimport ContextMenuCompare from '../../components/ContextMenuWindow/ContextMenuCompare';\r\n\r\nimport { sortingCompareArr } from '../../store/User/actions/actionsCompareUser';\r\nimport { addDescription } from \"../../store/Description/actionsDescription\";\r\n\r\nimport withContextMenuWindow from '../../hoc/withContextMenuWindow';\r\n\r\n\r\nfunction BasisCompare(props) {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const flagEmployDescription = useSelector(state => state.stateFlagsAll.employDescriptionAll) // разрешен ли пользователем показ подсказок\r\n\r\n    const arrDescription = useSelector(state => state.stateDescription); // массив подсказок из store (пока без кнопок консоли, заполнится после рединга)\r\n\r\n    //переключение цветового решения приложения\r\n    const stateStylesAll = useSelector(state => state.stateStyle.stylesAll);\r\n    const staleSelect = useSelector(state => state.stateStyle.styleSelect);\r\n\r\n    const haveDescription = (dataStateConsoleButton) => {\r\n        //добавляем подсказки на кнопки консоли\r\n        if (flagEmployDescription === true) {\r\n            let aboutDescription = {};\r\n            dataStateConsoleButton.map((obj) => {\r\n                aboutDescription[obj.name] = [obj.text];\r\n            });\r\n            dispatch(addDescription(aboutDescription, arrDescription));\r\n        };\r\n    }\r\n\r\n    //логика добавления контекстного меню через hoc\r\n    const CompareTableWithContextMenu = withContextMenuWindow(TableList, ContextMenuCompare, props.stateConsoleButton, stateStylesAll[staleSelect].contextMenuWindow);\r\n    \r\n    useEffect(() => {\r\n        haveDescription(props.stateConsoleButton);\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <div className={stateStylesAll[staleSelect].dataBaseContainer}>\r\n\r\n            <HeaderCompare\r\n                classnameHeaderConsole={stateStylesAll[staleSelect].dataBaseHeaderConsole}\r\n                stateConsoleButton={props.stateConsoleButton}\r\n                classnameDescription={stateStylesAll[staleSelect].descriptionButton}\r\n                nameBase={props.nameBase}\r\n                nameHeader={props.nameHeader}\r\n                hendlerCloseWindow={props.hendlerCloseWindow}\r\n                to={props.linkBack}\r\n            />\r\n\r\n            {\r\n                (props.compareArr.length > 1) ?\r\n                    <CompareTableWithContextMenu\r\n                        classnameConsoleCountRow={stateStylesAll[staleSelect].consoleCountRow}\r\n                        classnameButtonConsoleCountPow={stateStylesAll[staleSelect].personalizeButton}\r\n                        classnameRowTable={stateStylesAll[staleSelect].userRowTable}\r\n                        classnameCheckbox={stateStylesAll[staleSelect].beautifulCheckboxTable}\r\n                        classnameDescription={stateStylesAll[staleSelect].descriptionButton}\r\n                        colorRowTableBackground={stateStylesAll[staleSelect].rowTableBackground}\r\n                        colorFocusRowBackground={stateStylesAll[staleSelect].focusRowBackground}\r\n\r\n                        flagOpenCompareWindow={props.flagOpenCompareWindow}\r\n                        textFooter=\"Активирован режим сравнения избранных данных\"\r\n\r\n                        stateTable={props.compareArr}\r\n                        visibleNameСolumns={props.visibleNameСolumns}\r\n                        dataTable={props.compareArr}\r\n                        sortСolumns={props.sortСolumns}\r\n                        CountRow={props.compareArr.length + 1}\r\n                        onclickDelete={props.hendlerButtonRowClickDeleteCompareData}\r\n                        typeDataColumns={props.typeDataColumns}\r\n                        funcSorting={(data)=> dispatch(sortingCompareArr(data))}\r\n                    />\r\n                    : <WarningCompare />\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect()(BasisCompare)"]},"metadata":{},"sourceType":"module"}