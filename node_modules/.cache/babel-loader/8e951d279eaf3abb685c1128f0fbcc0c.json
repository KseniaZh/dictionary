{"ast":null,"code":"import { takeEvery, select, put, call } from 'redux-saga/effects';\nimport { getRequestServer } from '../../store/BasisReport/actions/actionBasisReport';\nimport { saveStartFocusDataStore } from '../../store/BasisReport/actions/actionFocusData';\nimport { loadingShow, getCounterPagesTable, getDataPageRowTable, changeActivArrNumberPagesFooterTable } from '../../store/BasisReport/actions/actionsFlagsBasisReport';\nimport { START_GET_REQUEST } from '../../store/ViewType/types';\nimport fetchData from '../../functions/fetchData';\nexport function* workerStart_ViewType_GET_RequestServer() {\n  const url = yield select(state => state.stateUrl.url_ViewType);\n\n  try {\n    const countRowTable = yield select(state => state.stateFlagsBasisReport.countRowTable);\n    const numberList = yield select(state => state.stateFlagsBasisReport.numberList);\n    const focusData = yield select(state => state.focusData);\n    const oldArr = yield select(state => state.stateFlagsBasisReport.activArrNumberPagesFooterTable);\n    yield put(loadingShow(true));\n    const data = yield call(fetchData, url);\n    yield put(getRequestServer(data));\n    yield put(getCounterPagesTable(data, countRowTable));\n    yield put(getDataPageRowTable(data, countRowTable, numberList));\n    yield put(changeActivArrNumberPagesFooterTable(numberList, countRowTable, oldArr, data));\n    yield put(saveStartFocusDataStore(data, focusData));\n    yield put(loadingShow(false));\n  } catch (error) {\n    console.log('workerStart_GET_RequestServer error ', error);\n  }\n}\nexport function* watch_ViewType_GET_RequestServer() {\n  yield takeEvery(START_GET_REQUEST, workerStart_ViewType_GET_RequestServer);\n}","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/sagas/ViewType/sagas_GET_ViewType.js"],"names":["takeEvery","select","put","call","getRequestServer","saveStartFocusDataStore","loadingShow","getCounterPagesTable","getDataPageRowTable","changeActivArrNumberPagesFooterTable","START_GET_REQUEST","fetchData","workerStart_ViewType_GET_RequestServer","url","state","stateUrl","url_ViewType","countRowTable","stateFlagsBasisReport","numberList","focusData","oldArr","activArrNumberPagesFooterTable","data","error","console","log","watch_ViewType_GET_RequestServer"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,GAA5B,EAAiCC,IAAjC,QAA6C,oBAA7C;AACA,SAASC,gBAAT,QAAiC,mDAAjC;AACA,SAASC,uBAAT,QAAwC,iDAAxC;AACA,SACIC,WADJ,EAEIC,oBAFJ,EAGIC,mBAHJ,EAIIC,oCAJJ,QAKO,yDALP;AAMA,SAASC,iBAAT,QAAkC,4BAAlC;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AAGA,OAAO,UAAUC,sCAAV,GAAmD;AAEtD,QAAMC,GAAG,GAAG,MAAMZ,MAAM,CAACa,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeC,YAAzB,CAAxB;;AAEA,MAAI;AACA,UAAMC,aAAa,GAAG,MAAMhB,MAAM,CAACa,KAAK,IAAIA,KAAK,CAACI,qBAAN,CAA4BD,aAAtC,CAAlC;AACA,UAAME,UAAU,GAAG,MAAMlB,MAAM,CAACa,KAAK,IAAIA,KAAK,CAACI,qBAAN,CAA4BC,UAAtC,CAA/B;AACA,UAAMC,SAAS,GAAG,MAAMnB,MAAM,CAACa,KAAK,IAAIA,KAAK,CAACM,SAAhB,CAA9B;AACA,UAAMC,MAAM,GAAG,MAAMpB,MAAM,CAACa,KAAK,IAAIA,KAAK,CAACI,qBAAN,CAA4BI,8BAAtC,CAA3B;AAEA,UAAMpB,GAAG,CAACI,WAAW,CAAC,IAAD,CAAZ,CAAT;AAEA,UAAMiB,IAAI,GAAG,MAAMpB,IAAI,CAACQ,SAAD,EAAYE,GAAZ,CAAvB;AAEA,UAAMX,GAAG,CAACE,gBAAgB,CAACmB,IAAD,CAAjB,CAAT;AACA,UAAMrB,GAAG,CAACK,oBAAoB,CAACgB,IAAD,EAAON,aAAP,CAArB,CAAT;AACA,UAAMf,GAAG,CAACM,mBAAmB,CAACe,IAAD,EAAON,aAAP,EAAsBE,UAAtB,CAApB,CAAT;AACA,UAAMjB,GAAG,CAACO,oCAAoC,CAACU,UAAD,EAAaF,aAAb,EAA4BI,MAA5B,EAAoCE,IAApC,CAArC,CAAT;AACA,UAAMrB,GAAG,CAACG,uBAAuB,CAACkB,IAAD,EAAOH,SAAP,CAAxB,CAAT;AAEA,UAAMlB,GAAG,CAACI,WAAW,CAAC,KAAD,CAAZ,CAAT;AAEH,GAlBD,CAkBE,OAAOkB,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDF,KAApD;AACH;AACJ;AAED,OAAO,UAAUG,gCAAV,GAA4C;AAE/C,QAAM3B,SAAS,CAACU,iBAAD,EAAoBE,sCAApB,CAAf;AACH","sourcesContent":["import { takeEvery, select, put, call } from 'redux-saga/effects';\r\nimport { getRequestServer } from '../../store/BasisReport/actions/actionBasisReport';\r\nimport { saveStartFocusDataStore } from '../../store/BasisReport/actions/actionFocusData';\r\nimport {\r\n    loadingShow,\r\n    getCounterPagesTable,\r\n    getDataPageRowTable,\r\n    changeActivArrNumberPagesFooterTable\r\n} from '../../store/BasisReport/actions/actionsFlagsBasisReport';\r\nimport { START_GET_REQUEST } from '../../store/ViewType/types';\r\nimport fetchData from '../../functions/fetchData';\r\n\r\n\r\nexport function* workerStart_ViewType_GET_RequestServer() {\r\n\r\n    const url = yield select(state => state.stateUrl.url_ViewType);\r\n    \r\n    try {\r\n        const countRowTable = yield select(state => state.stateFlagsBasisReport.countRowTable);\r\n        const numberList = yield select(state => state.stateFlagsBasisReport.numberList);\r\n        const focusData = yield select(state => state.focusData);\r\n        const oldArr = yield select(state => state.stateFlagsBasisReport.activArrNumberPagesFooterTable);\r\n\r\n        yield put(loadingShow(true));\r\n\r\n        const data = yield call(fetchData, url);\r\n\r\n        yield put(getRequestServer(data));\r\n        yield put(getCounterPagesTable(data, countRowTable));\r\n        yield put(getDataPageRowTable(data, countRowTable, numberList));\r\n        yield put(changeActivArrNumberPagesFooterTable(numberList, countRowTable, oldArr, data));\r\n        yield put(saveStartFocusDataStore(data, focusData));\r\n        \r\n        yield put(loadingShow(false));\r\n  \r\n    } catch (error) {\r\n        console.log('workerStart_GET_RequestServer error ', error);\r\n    }\r\n}\r\n\r\nexport function* watch_ViewType_GET_RequestServer(){\r\n    \r\n    yield takeEvery(START_GET_REQUEST, workerStart_ViewType_GET_RequestServer)\r\n}"]},"metadata":{},"sourceType":"module"}