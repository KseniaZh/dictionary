{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\hoc\\\\withClickSaveFocusRow.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { saveDataStore } from '../store/EltypeClass/actions/actionEltypeClass';\nimport { focusRowColorBackground } from '../functions/focusRowColorBackground';\n\nconst mapStateToProps = state => {\n  return {\n    //  activList: state.stateFlagsEltypeClass.dataListTable, // отображаемый лист\n    //  compareArr: state.compareDataEltypeClass, // массив строк, избранных для сравнения\n    focusData: state.createDataEltypeClass.stateData //что хранится в фокусе\n\n  };\n};\n\nconst mapDispatchToProps = {\n  saveDataStore\n};\n\nconst withClickSaveFocusRow = (Component, base) => {\n  class ComponentWithClickSaveFocus extends React.Component {\n    constructor(props) {\n      super(props); //   this.activArr = [];\n\n      this.handlerTableRowUID = (event, data) => {\n        //фокус на строку\n        event.preventDefault();\n\n        if (event.target.parentElement.tagName == 'TR' || event.target.parentElement.tagName == 'TD' || event.target.parentElement.tagName == 'DIV') {\n          base.map(obj => {\n            if (obj.uid === data) {\n              this.props.saveDataStore(obj); // сохранить в хранилище для изменений\n            }\n          });\n        }\n\n        ; //    if (typeList == \"Base\") {\n        //        this.activArr = this.props.activList;\n        //        console.log('Base')\n        //    } else if (typeList == \"Compare\") {\n        //        this.activArr = this.props.compareArr\n        //        console.log('Compare')\n        //    } else { return }\n      };\n    }\n\n    componentDidUpdate(prevProps) {\n      console.log('componentDidUpdate');\n\n      if (this.props.focusData !== prevProps.focusData) {\n        focusRowColorBackground(base, this.props.focusData);\n      }\n    }\n\n    render() {\n      let props = { ...this.props,\n        onclick: this.handlerTableRowUID\n      };\n      return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }));\n    }\n\n  }\n\n  return connect(mapStateToProps, mapDispatchToProps)(ComponentWithClickSaveFocus);\n};\n\nexport default withClickSaveFocusRow;","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/hoc/withClickSaveFocusRow.js"],"names":["React","connect","saveDataStore","focusRowColorBackground","mapStateToProps","state","focusData","createDataEltypeClass","stateData","mapDispatchToProps","withClickSaveFocusRow","Component","base","ComponentWithClickSaveFocus","constructor","props","handlerTableRowUID","event","data","preventDefault","target","parentElement","tagName","map","obj","uid","componentDidUpdate","prevProps","console","log","render","onclick"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,gDAA9B;AAEA,SAASC,uBAAT,QAAwC,sCAAxC;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACL;AACA;AACEC,IAAAA,SAAS,EAAED,KAAK,CAACE,qBAAN,CAA4BC,SAHpC,CAG+C;;AAH/C,GAAP;AAKH,CAND;;AAQA,MAAMC,kBAAkB,GAAG;AACvBP,EAAAA;AADuB,CAA3B;;AAKA,MAAMQ,qBAAqB,GAAG,CAACC,SAAD,EAAYC,IAAZ,KAAqB;AAI/C,QAAMC,2BAAN,SAA0Cb,KAAK,CAACW,SAAhD,CAA0D;AACtDG,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,YAAMA,KAAN,EADe,CAElB;;AAFkB,WAMnBC,kBANmB,GAME,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAAE;AACpCD,QAAAA,KAAK,CAACE,cAAN;;AACA,YAAIF,KAAK,CAACG,MAAN,CAAaC,aAAb,CAA2BC,OAA3B,IAAsC,IAAtC,IAA8CL,KAAK,CAACG,MAAN,CAAaC,aAAb,CAA2BC,OAA3B,IAAsC,IAApF,IAA4FL,KAAK,CAACG,MAAN,CAAaC,aAAb,CAA2BC,OAA3B,IAAsC,KAAtI,EAA6I;AAEzIV,UAAAA,IAAI,CAACW,GAAL,CAAUC,GAAD,IAAS;AACd,gBAAIA,GAAG,CAACC,GAAJ,KAAYP,IAAhB,EAAsB;AAClB,mBAAKH,KAAL,CAAWb,aAAX,CAAyBsB,GAAzB,EADkB,CACa;AAClC;AACJ,WAJD;AAKH;;AAAA,SATiC,CAWtC;AACA;AACA;AACA;AACA;AACA;AACA;AACD,OAxBoB;AAGlB;;AAuBDE,IAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;;AACA,UAAI,KAAKd,KAAL,CAAWT,SAAX,KAAyBqB,SAAS,CAACrB,SAAvC,EAAkD;AAC9CH,QAAAA,uBAAuB,CAACS,IAAD,EAAO,KAAKG,KAAL,CAAWT,SAAlB,CAAvB;AACH;AACJ;;AAEDwB,IAAAA,MAAM,GAAG;AACL,UAAIf,KAAK,GAAG,EACR,GAAG,KAAKA,KADA;AAERgB,QAAAA,OAAO,EAAE,KAAKf;AAFN,OAAZ;AAIA,0BACI,oBAAC,SAAD,oBAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAGH;;AA1CqD;;AA4C1D,SAAOd,OAAO,CAACG,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CI,2BAA7C,CAAP;AACH,CAjDD;;AAkDA,eAAeH,qBAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { saveDataStore } from '../store/EltypeClass/actions/actionEltypeClass';\r\n\r\nimport { focusRowColorBackground } from '../functions/focusRowColorBackground';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      //  activList: state.stateFlagsEltypeClass.dataListTable, // отображаемый лист\r\n      //  compareArr: state.compareDataEltypeClass, // массив строк, избранных для сравнения\r\n        focusData: state.createDataEltypeClass.stateData, //что хранится в фокусе\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveDataStore\r\n}\r\n\r\n\r\nconst withClickSaveFocusRow = (Component, base) => {\r\n\r\n\r\n        \r\n    class ComponentWithClickSaveFocus extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n         //   this.activArr = [];\r\n        }\r\n\r\n\r\n        handlerTableRowUID = (event, data) => { //фокус на строку\r\n            event.preventDefault();\r\n            if (event.target.parentElement.tagName == 'TR' || event.target.parentElement.tagName == 'TD' || event.target.parentElement.tagName == 'DIV') {\r\n\r\n                base.map((obj) => {\r\n                    if (obj.uid === data) {\r\n                        this.props.saveDataStore(obj); // сохранить в хранилище для изменений\r\n                    }\r\n                });\r\n            };\r\n\r\n        //    if (typeList == \"Base\") {\r\n        //        this.activArr = this.props.activList;\r\n        //        console.log('Base')\r\n        //    } else if (typeList == \"Compare\") {\r\n        //        this.activArr = this.props.compareArr\r\n        //        console.log('Compare')\r\n        //    } else { return }\r\n      }\r\n\r\n        componentDidUpdate(prevProps) {\r\n            console.log('componentDidUpdate')\r\n            if (this.props.focusData !== prevProps.focusData) {\r\n                focusRowColorBackground(base, this.props.focusData);\r\n            }\r\n        }\r\n\r\n        render() {\r\n            let props = {\r\n                ...this.props,\r\n                onclick: this.handlerTableRowUID\r\n            }\r\n            return (\r\n                <Component {...props} />\r\n                )\r\n        }\r\n    }\r\n    return connect(mapStateToProps, mapDispatchToProps)(ComponentWithClickSaveFocus)\r\n}\r\nexport default withClickSaveFocusRow"]},"metadata":{},"sourceType":"module"}