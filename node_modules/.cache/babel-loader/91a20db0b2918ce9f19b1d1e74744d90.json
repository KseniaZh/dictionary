{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\hoc\\\\withHoverDescription.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport DescriptionNavigation from '../components/Description/DescriptionNavigation';\nimport { aboutLinks } from \"../constans/aboutLinks\";\n\nconst withHoverDescription = Component => {\n  function mapStateToProps(state) {\n    return {\n      flagHaveDescription: state.stateFlagsAll.haveDescriptionAll\n    };\n  }\n\n  class ComponentUpgrade extends React.Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        isOpen: false\n      };\n\n      this.mouseOver = () => this.setState({\n        isOpen: true\n      });\n\n      this.mouseOut = () => this.setState({\n        isOpen: false\n      });\n    }\n\n    render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        onMouseOver: this.mouseOver,\n        onMouseOut: this.mouseOut,\n        onClick: this.mouseOut,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }\n      }, this.state.isOpen == true && this.props.flagHaveDescription == true ? /*#__PURE__*/React.createElement(DescriptionNavigation, {\n        aboutLink: aboutLinks[props.name],\n        classname: \"NavigationLinkAbout\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }\n      }) : null, /*#__PURE__*/React.createElement(Component, Object.assign({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }\n      })));\n    }\n\n  }\n\n  return connect(mapStateToProps)(ComponentUpgrade);\n};\n\nexport default withHoverDescription;","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/hoc/withHoverDescription.js"],"names":["React","connect","DescriptionNavigation","aboutLinks","withHoverDescription","Component","mapStateToProps","state","flagHaveDescription","stateFlagsAll","haveDescriptionAll","ComponentUpgrade","isOpen","mouseOver","setState","mouseOut","render","props","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAuB,aAAvB;AACA,OAAOC,qBAAP,MAAkC,iDAAlC;AACA,SAASC,UAAT,QAA2B,wBAA3B;;AAGA,MAAMC,oBAAoB,GAAIC,SAAD,IAAe;AAExC,WAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,WAAO;AACHC,MAAAA,mBAAmB,EAAED,KAAK,CAACE,aAAN,CAAoBC;AADtC,KAAP;AAGH;;AACD,QAAMC,gBAAN,SAA+BX,KAAK,CAACK,SAArC,CAA+C;AAAA;AAAA;AAAA,WAE3CE,KAF2C,GAEnC;AAAEK,QAAAA,MAAM,EAAE;AAAV,OAFmC;;AAAA,WAG3CC,SAH2C,GAG/B,MAAM,KAAKC,QAAL,CAAc;AAAEF,QAAAA,MAAM,EAAE;AAAV,OAAd,CAHyB;;AAAA,WAI3CG,QAJ2C,GAIhC,MAAM,KAAKD,QAAL,CAAc;AAAEF,QAAAA,MAAM,EAAE;AAAV,OAAd,CAJ0B;AAAA;;AAM3CI,IAAAA,MAAM,GAAG;AAEL,0BAEI;AACI,QAAA,WAAW,EAAE,KAAKH,SADtB;AAEI,QAAA,UAAU,EAAE,KAAKE,QAFrB;AAGI,QAAA,OAAO,EAAE,KAAKA,QAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMQ,KAAKR,KAAL,CAAWK,MAAX,IAAqB,IAArB,IAA6B,KAAKK,KAAL,CAAWT,mBAAX,IAAkC,IAA/D,gBAEI,oBAAE,qBAAF;AACI,QAAA,SAAS,EAAEL,UAAU,CAACc,KAAK,CAACC,IAAP,CADzB;AAEI,QAAA,SAAS,EAAC,qBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,GAMM,IAZd,eAcI,oBAAC,SAAD,oBAAe,KAAKD,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAdJ,CAFJ;AAmBH;;AA3B0C;;AA8B/C,SAAOhB,OAAO,CAACK,eAAD,CAAP,CAAyBK,gBAAzB,CAAP;AACH,CAtCD;;AAwCA,eAAeP,oBAAf","sourcesContent":["import React from 'react';\r\nimport { connect} from \"react-redux\";\r\nimport DescriptionNavigation from '../components/Description/DescriptionNavigation';\r\nimport { aboutLinks } from \"../constans/aboutLinks\";\r\n\r\n\r\nconst withHoverDescription = (Component) => {\r\n\r\n    function mapStateToProps(state) {\r\n        return {\r\n            flagHaveDescription: state.stateFlagsAll.haveDescriptionAll\r\n        }\r\n    } \r\n    class ComponentUpgrade extends React.Component {\r\n\r\n        state = { isOpen: false };\r\n        mouseOver = () => this.setState({ isOpen: true });\r\n        mouseOut = () => this.setState({ isOpen: false });\r\n\r\n        render() {\r\n\r\n            return(\r\n\r\n                <div\r\n                    onMouseOver={this.mouseOver}\r\n                    onMouseOut={this.mouseOut}\r\n                    onClick={this.mouseOut}\r\n                >\r\n                    {\r\n                        this.state.isOpen == true && this.props.flagHaveDescription == true?\r\n\r\n                            < DescriptionNavigation\r\n                                aboutLink={aboutLinks[props.name]}\r\n                                classname=\"NavigationLinkAbout\"\r\n                            />\r\n                            : null\r\n                    }\r\n                    <Component {...this.props} />\r\n                </div>\r\n                )\r\n        }\r\n    }\r\n    \r\n    return connect(mapStateToProps)(ComponentUpgrade)\r\n}\r\n\r\nexport default withHoverDescription"]},"metadata":{},"sourceType":"module"}