{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\hoc\\\\withClickSaveFocusRow.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { saveDataStore } from '../store/EltypeClass/actions/actionEltypeClass';\nimport { tablebodyBackground_Coffee, rowFocus_Coffee } from '../styles/const_color';\nimport { tablebodyBackgroundClear } from '../functions/tablebodyBackgroundClear';\n\nconst mapStateToProps = state => {\n  return {\n    activList: state.stateFlagsEltypeClass.dataListTable,\n    // отображаемый лист\n    focusData: state.createDataEltypeClass.stateData,\n    //что хранится в фокусе\n    stateTable: state.stateTableEltypeClass //ВСЯ база\n\n  };\n};\n\nconst mapDispatchToProps = {\n  saveDataStore\n};\n\nconst withClickSaveFocusRow = Component => {\n  class ComponentWithClickSaveFocus extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.handlerTableRowUID = (event, data) => {\n        //фокус на строку\n        event.preventDefault();\n\n        if (event.target.parentElement.tagName == 'TR' || event.target.parentElement.tagName == 'TD' || event.target.parentElement.tagName == 'DIV') {\n          this.props.stateTable.map(obj => {\n            if (obj.uid === data) {\n              this.props.saveDataStore(obj); // сохранить в хранилище для изменений\n            }\n          });\n        }\n\n        ;\n      };\n    }\n\n    componentDidMount() {\n      console.log(\"очищаем поле, фокус на выбранную строку\");\n      let tablebody = document.querySelector('tbody');\n\n      for (let child of tablebody.children) {\n        child.style.background = this.allRowColorBackground; //убираем цвет ранее выбранной строки\n      }\n\n      ;\n      this.props.activList.map((obj, index) => {\n        if (obj.uid == this.props.focusData.uid) {\n          tablebody.children[index].style.background = this.focusColorBackground;\n        } else {\n          return;\n        }\n      });\n    }\n\n    render() {\n      let props = { ...this.props,\n        onclick: this.handlerTableRowUID\n      };\n      return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }));\n    }\n\n  }\n\n  return connect(mapStateToProps, mapDispatchToProps)(ComponentWithClickSaveFocus);\n};\n\nexport default withClickSaveFocusRow;","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/hoc/withClickSaveFocusRow.js"],"names":["React","connect","saveDataStore","tablebodyBackground_Coffee","rowFocus_Coffee","tablebodyBackgroundClear","mapStateToProps","state","activList","stateFlagsEltypeClass","dataListTable","focusData","createDataEltypeClass","stateData","stateTable","stateTableEltypeClass","mapDispatchToProps","withClickSaveFocusRow","Component","ComponentWithClickSaveFocus","constructor","props","handlerTableRowUID","event","data","preventDefault","target","parentElement","tagName","map","obj","uid","componentDidMount","console","log","tablebody","document","querySelector","child","children","style","background","allRowColorBackground","index","focusColorBackground","render","onclick"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,gDAA9B;AACA,SAASC,0BAAT,EAAqCC,eAArC,QAA4D,uBAA5D;AACA,SAASC,wBAAT,QAAyC,uCAAzC;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,SAAS,EAAED,KAAK,CAACE,qBAAN,CAA4BC,aADpC;AACmD;AACtDC,IAAAA,SAAS,EAAEJ,KAAK,CAACK,qBAAN,CAA4BC,SAFpC;AAE+C;AAClDC,IAAAA,UAAU,EAAEP,KAAK,CAACQ,qBAHf,CAGqC;;AAHrC,GAAP;AAKH,CAND;;AAQA,MAAMC,kBAAkB,GAAG;AACvBd,EAAAA;AADuB,CAA3B;;AAKA,MAAMe,qBAAqB,GAAIC,SAAD,IAAe;AAEzC,QAAMC,2BAAN,SAA0CnB,KAAK,CAACkB,SAAhD,CAA0D;AACtDE,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,YAAMA,KAAN;;AADe,WAInBC,kBAJmB,GAIE,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAAE;AACpCD,QAAAA,KAAK,CAACE,cAAN;;AACA,YAAIF,KAAK,CAACG,MAAN,CAAaC,aAAb,CAA2BC,OAA3B,IAAsC,IAAtC,IAA8CL,KAAK,CAACG,MAAN,CAAaC,aAAb,CAA2BC,OAA3B,IAAsC,IAApF,IAA4FL,KAAK,CAACG,MAAN,CAAaC,aAAb,CAA2BC,OAA3B,IAAsC,KAAtI,EAA6I;AAEzI,eAAKP,KAAL,CAAWP,UAAX,CAAsBe,GAAtB,CAA2BC,GAAD,IAAS;AAC/B,gBAAIA,GAAG,CAACC,GAAJ,KAAYP,IAAhB,EAAsB;AAClB,mBAAKH,KAAL,CAAWnB,aAAX,CAAyB4B,GAAzB,EADkB,CACa;AAClC;AACJ,WAJD;AAKH;;AAAA;AACJ,OAdkB;AAElB;;AAcDE,IAAAA,iBAAiB,GAAE;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;AAEA,UAAIC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAhB;;AACA,WAAK,IAAIC,KAAT,IAAkBH,SAAS,CAACI,QAA5B,EAAsC;AAClCD,QAAAA,KAAK,CAACE,KAAN,CAAYC,UAAZ,GAAyB,KAAKC,qBAA9B,CADkC,CACkB;AACvD;;AAAA;AAED,WAAKrB,KAAL,CAAWb,SAAX,CAAqBqB,GAArB,CAAyB,CAACC,GAAD,EAAMa,KAAN,KAAgB;AACrC,YAAIb,GAAG,CAACC,GAAJ,IAAW,KAAKV,KAAL,CAAWV,SAAX,CAAqBoB,GAApC,EAAyC;AACrCI,UAAAA,SAAS,CAACI,QAAV,CAAmBI,KAAnB,EAA0BH,KAA1B,CAAgCC,UAAhC,GAA6C,KAAKG,oBAAlD;AACH,SAFD,MAEO;AACH;AACH;AACJ,OAND;AAOH;;AAGDC,IAAAA,MAAM,GAAG;AACL,UAAIxB,KAAK,GAAG,EACR,GAAG,KAAKA,KADA;AAERyB,QAAAA,OAAO,EAAE,KAAKxB;AAFN,OAAZ;AAIA,0BACI,oBAAC,SAAD,oBAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAGH;;AA3CqD;;AA6C1D,SAAOpB,OAAO,CAACK,eAAD,EAAkBU,kBAAlB,CAAP,CAA6CG,2BAA7C,CAAP;AACH,CAhDD;;AAiDA,eAAeF,qBAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { saveDataStore } from '../store/EltypeClass/actions/actionEltypeClass';\r\nimport { tablebodyBackground_Coffee, rowFocus_Coffee } from '../styles/const_color';\r\nimport { tablebodyBackgroundClear } from '../functions/tablebodyBackgroundClear';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        activList: state.stateFlagsEltypeClass.dataListTable, // отображаемый лист\r\n        focusData: state.createDataEltypeClass.stateData, //что хранится в фокусе\r\n        stateTable: state.stateTableEltypeClass //ВСЯ база\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveDataStore\r\n}\r\n\r\n\r\nconst withClickSaveFocusRow = (Component) => {\r\n\r\n    class ComponentWithClickSaveFocus extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n        }\r\n\r\n        handlerTableRowUID = (event, data) => { //фокус на строку\r\n            event.preventDefault();\r\n            if (event.target.parentElement.tagName == 'TR' || event.target.parentElement.tagName == 'TD' || event.target.parentElement.tagName == 'DIV') {\r\n\r\n                this.props.stateTable.map((obj) => {\r\n                    if (obj.uid === data) {\r\n                        this.props.saveDataStore(obj); // сохранить в хранилище для изменений\r\n                    }\r\n                });\r\n            };\r\n        }\r\n\r\n        componentDidMount(){\r\n            console.log(\"очищаем поле, фокус на выбранную строку\");\r\n \r\n            let tablebody = document.querySelector('tbody');\r\n            for (let child of tablebody.children) {\r\n                child.style.background = this.allRowColorBackground;//убираем цвет ранее выбранной строки\r\n            };\r\n\r\n            this.props.activList.map((obj, index) => {\r\n                if (obj.uid == this.props.focusData.uid) {\r\n                    tablebody.children[index].style.background = this.focusColorBackground;\r\n                } else {\r\n                    return\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        render() {\r\n            let props = {\r\n                ...this.props,\r\n                onclick: this.handlerTableRowUID\r\n            }\r\n            return (\r\n                <Component {...props} />\r\n                )\r\n        }\r\n    }\r\n    return connect(mapStateToProps, mapDispatchToProps)(ComponentWithClickSaveFocus)\r\n}\r\nexport default withClickSaveFocusRow"]},"metadata":{},"sourceType":"module"}