{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\containers\\\\baseEltypeClass\\\\EltypeClass.js\";\nimport React, { useEffect } from 'react';\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport ConsoleButton from '../../components/ConsoleButton/ConsoleButton';\nimport TableList from '../../components/Table/TableListEltypeClass';\nimport HeaderDictionary from '../../components/Header/HeaderDictionary';\nimport AwaitLoading from '../../UserInterface/AwaitLoading/AwaitLoading';\nimport { startGetRequestServer, saveDataStore, saveTypeRequest, saveNameWindow } from '../../store/EltypeClass/actions/actionEltypeClass';\nimport { linkEditWindowEltypeClass } from '../Navigation/Main';\nimport { linkWindowConfirmDeleting } from '../Navigation/Main';\nimport \"../../styles/DataBase.scss\";\nimport \"../../styles/AwaitLoading.scss\";\n\nfunction EltypeClass(props) {\n  const linkAddressWindowEdit = linkEditWindowEltypeClass;\n  const linkAddressWindowDelete = linkWindowConfirmDeleting;\n  const dispatch = useDispatch();\n  const stateLoading = useSelector(state => state.stateFlagsEltypeClass.loading);\n  const stateTable = useSelector(state => state.stateTableEltypeClass);\n\n  const handlerTableRowUID = (event, data) => {\n    event.preventDefault();\n    stateTable.map((obj, index) => {\n      if (obj.uid === data) {\n        console.log(\"index \", index);\n        dispatch(saveDataStore(obj));\n      }\n    });\n  };\n\n  const hendlerOpenWindow = (nameWindow, typeRequest) => {\n    dispatch(saveTypeRequest(typeRequest));\n    dispatch(saveNameWindow(nameWindow));\n  };\n\n  const HendlerOnMouseover = () => {};\n\n  const HendlerOnMouseLeave = () => {};\n\n  useEffect(() => {\n    dispatch(startGetRequestServer());\n  }, []);\n  const styles = {\n    loading: \"Loading\"\n  };\n  const stateConsoleButton = [{\n    name: \"Обновить\",\n    icon: \"fa fa-download fa-lg\"\n  }, {\n    name: \"Добавить новые данные\",\n    icon: \"fa fa-plus fa-lg\"\n  }, {\n    name: \"Внести изменения\",\n    icon: \"fa fa-pencil-square-o fa-lg\"\n  }, {\n    name: \"Удалить\",\n    icon: \"fa fa-times fa-lg\"\n  }, {\n    name: \"Показать только активные\",\n    icon: \"fa fa-filter fa-lg\"\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"DataBase__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"DataBase__header__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ConsoleButton, {\n    classnameWrapper: \"DataBase__header__console\",\n    linkWindowEdit: linkAddressWindowEdit,\n    linkWindowConfirmDeleting: linkAddressWindowDelete,\n    stateConsoleButton: stateConsoleButton,\n    onmouseover: HendlerOnMouseover,\n    onmouseleave: HendlerOnMouseLeave,\n    onclick1: () => {\n      dispatch(startGetRequestServer());\n    },\n    onclick2: () => hendlerOpenWindow(\"Новые данные\", \"post\"),\n    onclick3: () => hendlerOpenWindow(\"Изменения\", \"put\"),\n    onclick4: () => console.log(\"button delete open window\"),\n    onclick5: () => console.log('click'),\n    tabindex: \"-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(HeaderDictionary, {\n    classname: \"DataBase__header__header\",\n    nameHeader: \"\\u041A\\u043B\\u0430\\u0441\\u0441\\u044B \\u0434\\u043B\\u044F \\u0422\\u0438\\u043F\\u043E\\u0432 \\u0441\\u0432\\u044F\\u0437\\u0435\\u0439 \\u0438 \\u0422\\u0438\\u043F\\u043E\\u0432 \\u0441\\u0443\\u0449\\u043D\\u043E\\u0441\\u0442\\u0435\\u0439\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  })), stateLoading ? /*#__PURE__*/React.createElement(AwaitLoading, {\n    classname: styles.loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(TableList, {\n    classname: \"DataBase__table__container\",\n    columnName: Object.keys(stateTable[0]),\n    dataTable: stateTable,\n    onclick: (event, data) => handlerTableRowUID(event, data),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }));\n}\n\nexport default connect()(EltypeClass);","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/containers/baseEltypeClass/EltypeClass.js"],"names":["React","useEffect","connect","useDispatch","useSelector","ConsoleButton","TableList","HeaderDictionary","AwaitLoading","startGetRequestServer","saveDataStore","saveTypeRequest","saveNameWindow","linkEditWindowEltypeClass","linkWindowConfirmDeleting","EltypeClass","props","linkAddressWindowEdit","linkAddressWindowDelete","dispatch","stateLoading","state","stateFlagsEltypeClass","loading","stateTable","stateTableEltypeClass","handlerTableRowUID","event","data","preventDefault","map","obj","index","uid","console","log","hendlerOpenWindow","nameWindow","typeRequest","HendlerOnMouseover","HendlerOnMouseLeave","styles","stateConsoleButton","name","icon","Object","keys"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport ConsoleButton from '../../components/ConsoleButton/ConsoleButton';\r\nimport TableList from '../../components/Table/TableListEltypeClass';\r\nimport HeaderDictionary from '../../components/Header/HeaderDictionary';\r\nimport AwaitLoading from '../../UserInterface/AwaitLoading/AwaitLoading';\r\n\r\nimport {\r\n        startGetRequestServer,\r\n        saveDataStore,\r\n        saveTypeRequest,\r\n        saveNameWindow\r\n} from '../../store/EltypeClass/actions/actionEltypeClass';\r\n\r\nimport { linkEditWindowEltypeClass } from '../Navigation/Main';\r\nimport { linkWindowConfirmDeleting } from '../Navigation/Main';\r\n\r\nimport \"../../styles/DataBase.scss\";\r\nimport \"../../styles/AwaitLoading.scss\";\r\n\r\nfunction EltypeClass(props) {\r\n\r\n    const linkAddressWindowEdit = linkEditWindowEltypeClass;\r\n    const linkAddressWindowDelete = linkWindowConfirmDeleting;\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const stateLoading = useSelector(state => state.stateFlagsEltypeClass.loading);\r\n\r\n    const stateTable = useSelector(state => state.stateTableEltypeClass);\r\n\r\n    const handlerTableRowUID = (event, data)=>{\r\n        event.preventDefault();\r\n        \r\n        stateTable.map( (obj, index) => {\r\n            if (obj.uid === data){\r\n                console.log(\"index \", index);\r\n                dispatch(saveDataStore(obj));\r\n            }\r\n        })\r\n    }\r\n    const hendlerOpenWindow = (nameWindow, typeRequest) => {\r\n        dispatch(saveTypeRequest(typeRequest));\r\n        dispatch(saveNameWindow(nameWindow));\r\n    }\r\n    const HendlerOnMouseover = () => {\r\n\r\n    }\r\n    const HendlerOnMouseLeave = () => {\r\n\r\n    }\r\n\r\n useEffect(() => {\r\n     dispatch(startGetRequestServer());\r\n    }, [])\r\n\r\n    const styles = { loading: \"Loading\" };\r\n\r\n    const stateConsoleButton = [\r\n        {\r\n            name: \"Обновить\",\r\n            icon: \"fa fa-download fa-lg\"\r\n            },\r\n        {\r\n            name: \"Добавить новые данные\",\r\n            icon: \"fa fa-plus fa-lg\"\r\n            },\r\n        {\r\n            name: \"Внести изменения\",\r\n            icon: \"fa fa-pencil-square-o fa-lg\"\r\n            },\r\n        {\r\n            name: \"Удалить\",\r\n            icon: \"fa fa-times fa-lg\"\r\n            },\r\n        {\r\n            name: \"Показать только активные\",\r\n            icon: \"fa fa-filter fa-lg\"\r\n            }\r\n    ];\r\n    \r\n    return (\r\n        <div className=\"DataBase__container\">\r\n            <div className=\"DataBase__header__container\">\r\n                <ConsoleButton\r\n                        classnameWrapper=\"DataBase__header__console\"\r\n\r\n                        linkWindowEdit={linkAddressWindowEdit}\r\n                        linkWindowConfirmDeleting={linkAddressWindowDelete}\r\n        \r\n                        stateConsoleButton = {stateConsoleButton}\r\n\r\n                        onmouseover={HendlerOnMouseover}\r\n                        onmouseleave={HendlerOnMouseLeave}\r\n\r\n                        onclick1={() => { dispatch(startGetRequestServer()) }}\r\n\r\n                        onclick2={() => hendlerOpenWindow(\"Новые данные\", \"post\")}\r\n\r\n                        onclick3={() => hendlerOpenWindow(\"Изменения\", \"put\")}\r\n\r\n                        onclick4={() => console.log(\"button delete open window\")}\r\n\r\n                        onclick5={() => console.log('click')}\r\n\r\n                        tabindex=\"-1\"\r\n\r\n                        />\r\n\r\n                <HeaderDictionary\r\n                        classname=\"DataBase__header__header\"\r\n                        nameHeader=\"Классы для Типов связей и Типов сущностей\"\r\n                    />\r\n            </div>\r\n            {\r\n                stateLoading?\r\n                    <AwaitLoading\r\n                        classname={styles.loading}\r\n                    />\r\n                   :<TableList\r\n                        classname=\"DataBase__table__container\"\r\n                        columnName={Object.keys(stateTable[0])}\r\n                        dataTable={stateTable}\r\n                        onclick={(event, data) => handlerTableRowUID(event, data)}\r\n                    /> \r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default connect()(EltypeClass)\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}