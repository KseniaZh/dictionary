{"ast":null,"code":"import { takeEvery, put, call } from 'redux-saga/effects';\nimport { getRequestServer } from '../../store/EltypeClasse/actions/actionEltypeClasse';\nimport { START_GET_REQUEST } from '../../store/EltypeClasse/types';\nimport fetchData from '../../functions/fetchData';\nimport { url_EltypeClasse } from \"../../constans/url\";\nexport function* workerStart_GET_RequestServer() {\n  try {\n    const data = yield call(fetchData, url_EltypeClasse);\n    yield put(getRequestServer(data));\n  } catch (error) {\n    alert('workerStart_GET_RequestServer error ', error);\n  }\n}\nexport function* watch_EltypeClasse_GET_RequestServer() {\n  yield takeEvery(START_GET_REQUEST, workerStart_GET_RequestServer);\n}","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/sagas/EltypeClasse/sagasGetEltypeClass.js"],"names":["takeEvery","put","call","getRequestServer","START_GET_REQUEST","fetchData","url_EltypeClasse","workerStart_GET_RequestServer","data","error","alert","watch_EltypeClasse_GET_RequestServer"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,QAAqC,oBAArC;AACA,SAASC,gBAAT,QAAiC,qDAAjC;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,gBAAT,QAAgC,oBAAhC;AAGA,OAAO,UAAUC,6BAAV,GAAyC;AAE5C,MAAI;AACA,UAAMC,IAAI,GAAG,MAAMN,IAAI,CAACG,SAAD,EAAYC,gBAAZ,CAAvB;AAEA,UAAML,GAAG,CAACE,gBAAgB,CAACK,IAAD,CAAjB,CAAT;AAEH,GALD,CAKE,OAAOC,KAAP,EAAc;AACZC,IAAAA,KAAK,CAAC,sCAAD,EAAyCD,KAAzC,CAAL;AACH;AACJ;AAED,OAAO,UAAUE,oCAAV,GAAgD;AAEnD,QAAMX,SAAS,CAACI,iBAAD,EAAoBG,6BAApB,CAAf;AACH","sourcesContent":["import { takeEvery, put, call } from 'redux-saga/effects';\r\nimport { getRequestServer } from '../../store/EltypeClasse/actions/actionEltypeClasse';\r\nimport { START_GET_REQUEST } from '../../store/EltypeClasse/types';\r\nimport fetchData from '../../functions/fetchData';\r\nimport { url_EltypeClasse} from \"../../constans/url\"\r\n\r\n\r\nexport function* workerStart_GET_RequestServer(){\r\n    \r\n    try {\r\n        const data = yield call(fetchData, url_EltypeClasse);\r\n\r\n        yield put(getRequestServer(data));\r\n  \r\n    } catch (error) {\r\n        alert('workerStart_GET_RequestServer error ', error);\r\n    }\r\n}\r\n\r\nexport function* watch_EltypeClasse_GET_RequestServer(){\r\n    \r\n    yield takeEvery(START_GET_REQUEST, workerStart_GET_RequestServer)\r\n}"]},"metadata":{},"sourceType":"module"}