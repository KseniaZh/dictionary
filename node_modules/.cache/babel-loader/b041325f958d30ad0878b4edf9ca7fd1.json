{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\containers\\\\ViewType\\\\ViewType.js\";\nimport React from 'react';\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport Basis from '../Basis/Basis';\nimport { start_ViewType_GET_RequestServer } from '../../store/ViewType/actions/actionViewType';\nimport { saveDataStore } from '../../store/BasisReport/actions/actionFocusData';\nimport { saveTypeRequest, saveNameWindow } from '../../store/ViewType/actions/actionEditWindowViewType';\nimport { deleteDataCompareArr, addDataCompareArr } from '../../store/ViewType/actions/actionsCompareViewType';\nimport { changeFlagOpenCompareWindow } from '../../store/ViewType/actions/actionsFlagsViewType';\nimport { changeAdressOpenTable } from '../../store/ViewType/actions/actionsLinksViewType';\n\nfunction ViewType(props) {\n  const dispatch = useDispatch();\n  const visibleNameСolumns = useSelector(state => state.stateInputEditWindowViewType.nameСolumnsTableList); // наименования ключей для заполнения колонок в таблице\n\n  const searchСolumnsName = useSelector(state => state.stateInputEditWindowViewType.searchСolumnsName); // объект с разрешением отображения поиска в колонках в таблице\n\n  const sortСolumns = useSelector(state => state.stateInputEditWindowViewType.sortСolumns); // объект с разрешением отображения сортировки в колонках в таблице\n\n  const searchKey = useSelector(state => state.stateInputEditWindowViewType.searchKey); // ключ для типа поиска в окошке в шапке таблицы\n\n  const typeDataColumns = useSelector(state => state.stateInputEditWindowViewType.typeData); // тип данных значений, заполняющих колонки\n\n  const focusData = useSelector(state => state.focusData); // фокус. запомнить данные выбранной строки\n\n  const compareArr = useSelector(state => state.stateCompareViewType); // массив строк, избранных для сравнения\n\n  const links = useSelector(state => state.stateLinksViewType); //список ссылок для переходов между окнами\n\n  const flagOpenCompareWindow = useSelector(state => state.stateFlagsViewType.flagOpenCompareWindow); // флаг открытия таблицы сравнения\n\n  const login = useSelector(state => state.stateAuthorization.user.login); // определение логина пользователя\n  //переключение цветового решения приложения\n\n  const stateStylesAll = useSelector(state => state.stateStyle.stylesAll);\n  const staleSelect = useSelector(state => state.stateStyle.styleSelect);\n  const classRowTable = stateStylesAll[staleSelect].viewTypeRowTable; //переменные и функции для передачи в Basis\n\n  const funcStartGetRequestServer = () => dispatch(start_ViewType_GET_RequestServer());\n\n  const compareArrUid = compareArr.map(obj => obj.uid);\n\n  const focusNull = () => {\n    dispatch(saveDataStore({\n      \"uid\": \"\",\n      \"name\": \"\",\n      \"comment\": \"\",\n      \"classViewProperty\": \"\",\n      \"dbTable\": \"\"\n    }));\n  };\n\n  const hendlerOpenWindow = (nameWindow, typeRequest) => {\n    dispatch(saveTypeRequest(typeRequest));\n    dispatch(saveNameWindow(nameWindow));\n\n    if (typeRequest === \"post\") {\n      focusNull();\n    }\n  };\n\n  const hendlerAddCompareData = () => {\n    if (focusData.uid === '' || focusData.uid === null || focusData.uid === undefined) {\n      return;\n    }\n\n    ;\n    dispatch(addDataCompareArr(focusData, compareArr));\n  };\n\n  const hendlerButtonRowClickAddCompareData = data => {\n    if ([data].uid === '' || [data] === null || [data] === undefined) {\n      return;\n    }\n\n    ;\n    dispatch(addDataCompareArr(data, compareArr));\n  };\n\n  const hendlerOpenCompareWindow = () => {\n    dispatch(changeFlagOpenCompareWindow(true));\n    focusNull();\n    dispatch(changeAdressOpenTable(links.linkCompare));\n  };\n\n  const hendlerButtonRowClickDeleteCompareData = data => {\n    if ([data].uid === '' || [data] === null || [data] === undefined) {\n      return;\n    }\n\n    ;\n    dispatch(deleteDataCompareArr(data, compareArr));\n  };\n\n  const stateButtonsAdmin = [{\n    text: \"Обновить\",\n    name: 'update',\n    icon: \"fa fa-download fa-lg\",\n    onclick: funcStartGetRequestServer,\n    link: links.linkBase\n  }, {\n    text: \"Внести изменения\",\n    name: 'edit',\n    icon: \"fa fa-pencil-square-o fa-lg\",\n    onclick: () => hendlerOpenWindow(\"Внести изменения\", \"put\"),\n    link: links.linkEditWindow\n  }, {\n    text: \"Сравнить\",\n    name: 'compare',\n    icon: \"fa fa-balance-scale\",\n    onclick: hendlerOpenCompareWindow,\n    link: links.linkCompare\n  }, {\n    text: \"Добавить к сравнению\",\n    name: 'addCompare',\n    icon: \"fa fa-filter fa-lg\",\n    onclick: hendlerAddCompareData,\n    link: links.linkBase\n  }];\n  const stateButtonsUsers = [{\n    text: \"Обновить\",\n    name: 'update',\n    icon: \"fa fa-download fa-lg\",\n    onclick: funcStartGetRequestServer,\n    link: links.linkBase\n  }, {\n    text: \"Сравнить\",\n    name: 'compare',\n    icon: \"fa fa-balance-scale\",\n    onclick: hendlerOpenCompareWindow,\n    link: links.linkCompare\n  }, {\n    text: \"Добавить к сравнению\",\n    name: 'addCompare',\n    icon: \"fa fa-filter fa-lg\",\n    onclick: hendlerAddCompareData,\n    link: links.linkBase\n  }];\n\n  const stateConsoleButton = () => {\n    if (login === \"administrator\") {\n      return stateButtonsAdmin;\n    } else {\n      return stateButtonsUsers;\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/React.createElement(Basis, {\n    funcStartGetRequestServer: funcStartGetRequestServer,\n    stateConsoleButton: stateConsoleButton(),\n    focusNull: focusNull,\n    hendlerButtonRowClickDeleteCompareData: hendlerButtonRowClickDeleteCompareData,\n    visibleNameСolumns: visibleNameСolumns,\n    searchСolumnsName: searchСolumnsName,\n    sortСolumns: sortСolumns,\n    searchKey: searchKey,\n    typeDataColumns: typeDataColumns,\n    flagOpenCompareWindow: flagOpenCompareWindow,\n    nameHeader: \"\\u0422\\u0438\\u043F\\u044B \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\",\n    onclickButtonRowClickAddCompareData: hendlerButtonRowClickAddCompareData,\n    compareArrUid: compareArrUid,\n    classRowTable: classRowTable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  });\n}\n\nexport default connect()(ViewType);","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/containers/ViewType/ViewType.js"],"names":["React","connect","useDispatch","useSelector","Basis","start_ViewType_GET_RequestServer","saveDataStore","saveTypeRequest","saveNameWindow","deleteDataCompareArr","addDataCompareArr","changeFlagOpenCompareWindow","changeAdressOpenTable","ViewType","props","dispatch","visibleNameСolumns","state","stateInputEditWindowViewType","nameСolumnsTableList","searchСolumnsName","sortСolumns","searchKey","typeDataColumns","typeData","focusData","compareArr","stateCompareViewType","links","stateLinksViewType","flagOpenCompareWindow","stateFlagsViewType","login","stateAuthorization","user","stateStylesAll","stateStyle","stylesAll","staleSelect","styleSelect","classRowTable","viewTypeRowTable","funcStartGetRequestServer","compareArrUid","map","obj","uid","focusNull","hendlerOpenWindow","nameWindow","typeRequest","hendlerAddCompareData","undefined","hendlerButtonRowClickAddCompareData","data","hendlerOpenCompareWindow","linkCompare","hendlerButtonRowClickDeleteCompareData","stateButtonsAdmin","text","name","icon","onclick","link","linkBase","linkEditWindow","stateButtonsUsers","stateConsoleButton"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Basis from '../Basis/Basis';\r\n\r\nimport { start_ViewType_GET_RequestServer } from '../../store/ViewType/actions/actionViewType';\r\nimport { saveDataStore } from '../../store/BasisReport/actions/actionFocusData';\r\nimport {\r\n    saveTypeRequest,\r\n    saveNameWindow\r\n} from '../../store/ViewType/actions/actionEditWindowViewType';\r\nimport {\r\n    deleteDataCompareArr,\r\n    addDataCompareArr\r\n} from '../../store/ViewType/actions/actionsCompareViewType';\r\nimport { changeFlagOpenCompareWindow } from '../../store/ViewType/actions/actionsFlagsViewType';\r\nimport { changeAdressOpenTable } from '../../store/ViewType/actions/actionsLinksViewType';\r\n\r\n\r\n\r\nfunction ViewType(props) {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const visibleNameСolumns = useSelector(state => state.stateInputEditWindowViewType.nameСolumnsTableList); // наименования ключей для заполнения колонок в таблице\r\n\r\n    const searchСolumnsName = useSelector(state => state.stateInputEditWindowViewType.searchСolumnsName); // объект с разрешением отображения поиска в колонках в таблице\r\n\r\n    const sortСolumns = useSelector(state => state.stateInputEditWindowViewType.sortСolumns); // объект с разрешением отображения сортировки в колонках в таблице\r\n\r\n    const searchKey = useSelector(state => state.stateInputEditWindowViewType.searchKey); // ключ для типа поиска в окошке в шапке таблицы\r\n\r\n    const typeDataColumns = useSelector(state => state.stateInputEditWindowViewType.typeData); // тип данных значений, заполняющих колонки\r\n\r\n    const focusData = useSelector(state => state.focusData); // фокус. запомнить данные выбранной строки\r\n\r\n    const compareArr = useSelector(state => state.stateCompareViewType); // массив строк, избранных для сравнения\r\n\r\n    const links = useSelector(state => state.stateLinksViewType); //список ссылок для переходов между окнами\r\n\r\n    const flagOpenCompareWindow = useSelector(state => state.stateFlagsViewType.flagOpenCompareWindow); // флаг открытия таблицы сравнения\r\n\r\n    const login = useSelector(state => state.stateAuthorization.user.login); // определение логина пользователя\r\n\r\n    //переключение цветового решения приложения\r\n    const stateStylesAll = useSelector(state => state.stateStyle.stylesAll);\r\n    const staleSelect = useSelector(state => state.stateStyle.styleSelect);\r\n\r\n    const classRowTable = stateStylesAll[staleSelect].viewTypeRowTable;\r\n\r\n    //переменные и функции для передачи в Basis\r\n\r\n    const funcStartGetRequestServer = () => dispatch(start_ViewType_GET_RequestServer());\r\n\r\n    const compareArrUid = compareArr.map(obj => obj.uid);\r\n\r\n    const focusNull = () => {\r\n        dispatch(saveDataStore({\r\n            \"uid\": \"\",\r\n            \"name\": \"\",\r\n            \"comment\": \"\",\r\n            \"classViewProperty\": \"\",\r\n            \"dbTable\": \"\"\r\n        }));\r\n        }\r\n\r\n    const hendlerOpenWindow = (nameWindow, typeRequest) => {\r\n\r\n        dispatch(saveTypeRequest(typeRequest));\r\n        dispatch(saveNameWindow(nameWindow));\r\n        if (typeRequest === \"post\") {\r\n            focusNull();\r\n        }\r\n    }\r\n\r\n    const hendlerAddCompareData = () => {\r\n        if (focusData.uid === '' || focusData.uid === null || focusData.uid === undefined) {\r\n            return\r\n        };\r\n        dispatch(addDataCompareArr(focusData, compareArr));\r\n    }\r\n    const hendlerButtonRowClickAddCompareData = (data) => {\r\n        if ([data].uid === '' || [data] === null || [data] === undefined) {\r\n            return\r\n        };\r\n        dispatch(addDataCompareArr(data, compareArr));\r\n    }\r\n\r\n    const hendlerOpenCompareWindow = () => {\r\n        dispatch(changeFlagOpenCompareWindow(true)); \r\n        focusNull();\r\n        dispatch(changeAdressOpenTable(links.linkCompare)); \r\n    }\r\n\r\n    const hendlerButtonRowClickDeleteCompareData = (data) => {\r\n        if ([data].uid === '' || [data] === null || [data] === undefined) {\r\n            return\r\n        };\r\n        dispatch(deleteDataCompareArr(data, compareArr));\r\n    }\r\n    const stateButtonsAdmin = [\r\n        {\r\n            text: \"Обновить\",\r\n            name: 'update',\r\n            icon: \"fa fa-download fa-lg\",\r\n            onclick: funcStartGetRequestServer,\r\n            link: links.linkBase\r\n        },\r\n        {\r\n            text: \"Внести изменения\",\r\n            name: 'edit',\r\n            icon: \"fa fa-pencil-square-o fa-lg\",\r\n            onclick: () => hendlerOpenWindow(\"Внести изменения\", \"put\"),\r\n            link: links.linkEditWindow\r\n        },\r\n        {\r\n            text: \"Сравнить\",\r\n            name: 'compare',\r\n            icon: \"fa fa-balance-scale\",\r\n            onclick: hendlerOpenCompareWindow,\r\n            link: links.linkCompare\r\n        },\r\n        {\r\n            text: \"Добавить к сравнению\",\r\n            name: 'addCompare',\r\n            icon: \"fa fa-filter fa-lg\",\r\n            onclick: hendlerAddCompareData,\r\n            link: links.linkBase\r\n        }\r\n    ];  \r\n    const stateButtonsUsers = [\r\n        {\r\n            text: \"Обновить\",\r\n            name: 'update',\r\n            icon: \"fa fa-download fa-lg\",\r\n            onclick: funcStartGetRequestServer,\r\n            link: links.linkBase\r\n        },\r\n        {\r\n            text: \"Сравнить\",\r\n            name: 'compare',\r\n            icon: \"fa fa-balance-scale\",\r\n            onclick: hendlerOpenCompareWindow,\r\n            link: links.linkCompare\r\n        },\r\n        {\r\n            text: \"Добавить к сравнению\",\r\n            name: 'addCompare',\r\n            icon: \"fa fa-filter fa-lg\",\r\n            onclick: hendlerAddCompareData,\r\n            link: links.linkBase\r\n        }\r\n    ];  \r\n\r\n    const stateConsoleButton = () => {\r\n        if (login === \"administrator\") {\r\n            return stateButtonsAdmin\r\n        } else {\r\n            return stateButtonsUsers\r\n        };\r\n    };\r\n\r\n       \r\n\r\n    return (\r\n\r\n        <Basis\r\n            funcStartGetRequestServer={funcStartGetRequestServer}\r\n            stateConsoleButton={stateConsoleButton()}\r\n            focusNull={focusNull}\r\n            hendlerButtonRowClickDeleteCompareData={hendlerButtonRowClickDeleteCompareData}\r\n            visibleNameСolumns={visibleNameСolumns}\r\n            searchСolumnsName={searchСolumnsName}\r\n            sortСolumns={sortСolumns}\r\n            searchKey={searchKey}\r\n            typeDataColumns={typeDataColumns}\r\n            flagOpenCompareWindow={flagOpenCompareWindow}\r\n            nameHeader=\"Типы данных\"\r\n            onclickButtonRowClickAddCompareData={hendlerButtonRowClickAddCompareData}\r\n            compareArrUid={compareArrUid}\r\n            classRowTable={classRowTable}\r\n        />\r\n    )\r\n}\r\n\r\nexport default connect()(ViewType)"]},"metadata":{},"sourceType":"module"}