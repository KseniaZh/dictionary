{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\containers\\\\Navigation\\\\Header.js\";\nimport React, { useState } from 'react';\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport NavigationWindowBlind from '../../UserInterface/Navigation/NavigationWindowBlind';\nimport NavigationToggle from '../../UserInterface/Navigation/NavigationToggle';\nimport withHoverDescription from '../../hoc/withHoverDescription';\nimport ButtonLink from '../../UserInterface/Buttons/Button/ButtonLink';\nimport ButtonLinkSmall from '../../UserInterface/Buttons/Button/ButtonLinkSmall';\nimport DescriptionNavigation from '../../components/Description/DescriptionNavigation';\nimport { saveDataStore } from '../../store/BasisReport/actions/actionFocusData';\n\nfunction Header(props) {\n  const login = useSelector(state => state.stateAuthorization.user.login); //переключение цветового решения приложения\n\n  const stateStylesAll = useSelector(state => state.stateStyle.stylesAll);\n  const staleSelect = useSelector(state => state.stateStyle.styleSelect);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const hendlerNavigationToggle = () => {\n    console.log(\"hendlerNavigationToggle  isOpen \", isOpen);\n\n    if (isOpen === false) {\n      dispatch(saveDataStore({//\"uid\": \"\",\n        //\"name\": \"\",\n        //\"isDeleted\": false,\n        //\"isTemplate\": false\n      }));\n    }\n\n    setIsOpen(!isOpen);\n  };\n\n  const navStyle = [stateStylesAll[staleSelect].navigation];\n\n  if (!isOpen) {\n    navStyle.push(\"close\");\n  }\n\n  ;\n  const pages = [{\n    to: '/',\n    name: 'Home'\n  }, {\n    to: '/EltypeClass',\n    name: 'EltypeClass'\n  }]; // логика всплывающей подсказки спрятана в обертку hoc, \n  // обертка кнопок и подсказка реализованы в ButtonNavigationSmall и ButtonNavigation\n\n  const ButtonNavigationSmall = withHoverDescription(ButtonLinkSmall, DescriptionNavigation);\n  const ButtonNavigation = withHoverDescription(ButtonLink, DescriptionNavigation);\n  return /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    className: navStyle.join(' '),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ButtonNavigationSmall, {\n    to: \"/Personalize\",\n    icon: \"fa fa-user-circle-o\",\n    classname: stateStylesAll[staleSelect].personalizeButton,\n    name: \"Personalize\",\n    onclick: () => setIsOpen(false),\n    tabindex: \"-1\",\n    haveDescription: isOpen,\n    classnameDescription: stateStylesAll[staleSelect].navigationLinkAbout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }), login === \"administrator\" ? /*#__PURE__*/React.createElement(ButtonNavigation, {\n    to: \"/User\",\n    name: \"User\",\n    onclick: () => setIsOpen(false),\n    classname: stateStylesAll[staleSelect].navigationButtonLink,\n    tabIndex: \"2\",\n    haveDescription: isOpen,\n    classnameDescription: stateStylesAll[staleSelect].navigationLinkAbout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 33\n    }\n  }) : null, pages.map((page, index) => /*#__PURE__*/React.createElement(ButtonNavigation, {\n    to: page.to,\n    name: page.name,\n    onclick: () => setIsOpen(false),\n    classname: stateStylesAll[staleSelect].navigationButtonLink,\n    tabIndex: index + 2,\n    key: index + 2,\n    haveDescription: isOpen,\n    classnameDescription: stateStylesAll[staleSelect].navigationLinkAbout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 33\n    }\n  }))), isOpen ? /*#__PURE__*/React.createElement(NavigationWindowBlind, {\n    onclick: () => setIsOpen(false),\n    classname: stateStylesAll[staleSelect].navigationWindowBlind,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }) : null, /*#__PURE__*/React.createElement(NavigationToggle, {\n    openNavigation: hendlerNavigationToggle,\n    isOpen: isOpen,\n    classname: stateStylesAll[staleSelect].navigationToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default connect()(Header);","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/containers/Navigation/Header.js"],"names":["React","useState","connect","useDispatch","useSelector","NavigationWindowBlind","NavigationToggle","withHoverDescription","ButtonLink","ButtonLinkSmall","DescriptionNavigation","saveDataStore","Header","props","login","state","stateAuthorization","user","stateStylesAll","stateStyle","stylesAll","staleSelect","styleSelect","isOpen","setIsOpen","hendlerNavigationToggle","console","log","dispatch","navStyle","navigation","push","pages","to","name","ButtonNavigationSmall","ButtonNavigation","join","personalizeButton","navigationLinkAbout","navigationButtonLink","map","page","index","navigationWindowBlind","navigationToggle"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,WAA/B,QAAkD,aAAlD;AAEA,OAAOC,qBAAP,MAAkC,sDAAlC;AACA,OAAOC,gBAAP,MAA6B,iDAA7B;AAEA,OAAOC,oBAAP,MAAiC,gCAAjC;AACA,OAAOC,UAAP,MAAuB,+CAAvB;AACA,OAAOC,eAAP,MAA4B,oDAA5B;AACA,OAAOC,qBAAP,MAAkC,oDAAlC;AAEA,SAASC,aAAT,QAA8B,iDAA9B;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAEnB,QAAMC,KAAK,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,kBAAN,CAAyBC,IAAzB,CAA8BH,KAAxC,CAAzB,CAFmB,CAInB;;AACA,QAAMI,cAAc,GAAGd,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACI,UAAN,CAAiBC,SAA3B,CAAlC;AACA,QAAMC,WAAW,GAAGjB,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACI,UAAN,CAAiBG,WAA3B,CAA/B;AAEA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBvB,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMwB,uBAAuB,GAAG,MAAM;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDJ,MAAhD;;AACA,QAAIA,MAAM,KAAK,KAAf,EAAsB;AAClBK,MAAAA,QAAQ,CAACjB,aAAa,CAAC,CACnB;AACA;AACA;AACA;AAJmB,OAAD,CAAd,CAAR;AAMH;;AACDa,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACH,GAXD;;AAaA,QAAMM,QAAQ,GAAG,CAACX,cAAc,CAACG,WAAD,CAAd,CAA4BS,UAA7B,CAAjB;;AACA,MAAI,CAACP,MAAL,EAAa;AACTM,IAAAA,QAAQ,CAACE,IAAT,CAAc,OAAd;AACH;;AAAA;AAED,QAAMC,KAAK,GAAG,CACV;AACIC,IAAAA,EAAE,EAAE,GADR;AAEIC,IAAAA,IAAI,EAAE;AAFV,GADU,EAKV;AACID,IAAAA,EAAE,EAAE,cADR;AAEIC,IAAAA,IAAI,EAAE;AAFV,GALU,CAAd,CA5BmB,CAsCnB;AACA;;AACA,QAAMC,qBAAqB,GAAG5B,oBAAoB,CAACE,eAAD,EAAkBC,qBAAlB,CAAlD;AACA,QAAM0B,gBAAgB,GAAG7B,oBAAoB,CAACC,UAAD,EAAaE,qBAAb,CAA7C;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEmB,QAAQ,CAACQ,IAAT,CAAc,GAAd,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEQ,oBAAC,qBAAD;AACY,IAAA,EAAE,EAAC,cADf;AAEY,IAAA,IAAI,EAAC,qBAFjB;AAGY,IAAA,SAAS,EAAEnB,cAAc,CAACG,WAAD,CAAd,CAA4BiB,iBAHnD;AAIY,IAAA,IAAI,EAAC,aAJjB;AAKY,IAAA,OAAO,EAAE,MAAMd,SAAS,CAAC,KAAD,CALpC;AAMY,IAAA,QAAQ,EAAC,IANrB;AAOY,IAAA,eAAe,EAAED,MAP7B;AAQY,IAAA,oBAAoB,EAAEL,cAAc,CAACG,WAAD,CAAd,CAA4BkB,mBAR9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,EAaYzB,KAAK,KAAK,eAAV,gBACQ,oBAAC,gBAAD;AACY,IAAA,EAAE,EAAE,OADhB;AAEY,IAAA,IAAI,EAAC,MAFjB;AAGY,IAAA,OAAO,EAAE,MAAMU,SAAS,CAAC,KAAD,CAHpC;AAIY,IAAA,SAAS,EAAEN,cAAc,CAACG,WAAD,CAAd,CAA4BmB,oBAJnD;AAKY,IAAA,QAAQ,EAAE,GALtB;AAMY,IAAA,eAAe,EAAEjB,MAN7B;AAOY,IAAA,oBAAoB,EAAEL,cAAc,CAACG,WAAD,CAAd,CAA4BkB,mBAP9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,GAUU,IAvBtB,EA0BYP,KAAK,CAACS,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACF,oBAAC,gBAAD;AACY,IAAA,EAAE,EAAED,IAAI,CAACT,EADrB;AAEY,IAAA,IAAI,EAAES,IAAI,CAACR,IAFvB;AAGY,IAAA,OAAO,EAAE,MAAMV,SAAS,CAAC,KAAD,CAHpC;AAIY,IAAA,SAAS,EAAEN,cAAc,CAACG,WAAD,CAAd,CAA4BmB,oBAJnD;AAKY,IAAA,QAAQ,EAAEG,KAAK,GAAG,CAL9B;AAMY,IAAA,GAAG,EAAEA,KAAK,GAAG,CANzB;AAOY,IAAA,eAAe,EAAEpB,MAP7B;AAQY,IAAA,oBAAoB,EAAEL,cAAc,CAACG,WAAD,CAAd,CAA4BkB,mBAR9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,CA1BZ,CADJ,EA2CQhB,MAAM,gBACF,oBAAC,qBAAD;AACI,IAAA,OAAO,EAAE,MAAMC,SAAS,CAAC,KAAD,CAD5B;AAEI,IAAA,SAAS,EAAEN,cAAc,CAACG,WAAD,CAAd,CAA4BuB,qBAF3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADE,GAKA,IAhDd,eAmDI,oBAAC,gBAAD;AACI,IAAA,cAAc,EAAEnB,uBADpB;AAEI,IAAA,MAAM,EAAEF,MAFZ;AAGI,IAAA,SAAS,EAAEL,cAAc,CAACG,WAAD,CAAd,CAA4BwB,gBAH3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnDJ,CADJ;AA4DH;;AACD,eAAe3C,OAAO,GAAGU,MAAH,CAAtB","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport NavigationWindowBlind from '../../UserInterface/Navigation/NavigationWindowBlind';\r\nimport NavigationToggle from '../../UserInterface/Navigation/NavigationToggle';\r\n\r\nimport withHoverDescription from '../../hoc/withHoverDescription';\r\nimport ButtonLink from '../../UserInterface/Buttons/Button/ButtonLink';\r\nimport ButtonLinkSmall from '../../UserInterface/Buttons/Button/ButtonLinkSmall';\r\nimport DescriptionNavigation from '../../components/Description/DescriptionNavigation';\r\n\r\nimport { saveDataStore } from '../../store/BasisReport/actions/actionFocusData';\r\n\r\nfunction Header(props) {\r\n\r\n    const login = useSelector(state => state.stateAuthorization.user.login);\r\n\r\n    //переключение цветового решения приложения\r\n    const stateStylesAll = useSelector(state => state.stateStyle.stylesAll);\r\n    const staleSelect = useSelector(state => state.stateStyle.styleSelect);\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const hendlerNavigationToggle = () => {\r\n        console.log(\"hendlerNavigationToggle  isOpen \", isOpen);\r\n        if (isOpen === false) {\r\n            dispatch(saveDataStore({\r\n                //\"uid\": \"\",\r\n                //\"name\": \"\",\r\n                //\"isDeleted\": false,\r\n                //\"isTemplate\": false\r\n            }));\r\n        }\r\n        setIsOpen(!isOpen);\r\n    }\r\n\r\n    const navStyle = [stateStylesAll[staleSelect].navigation];\r\n    if (!isOpen) {\r\n        navStyle.push(\"close\");\r\n    };\r\n\r\n    const pages = [\r\n        {\r\n            to: '/',\r\n            name: 'Home'\r\n        },\r\n        {\r\n            to: '/EltypeClass',\r\n            name: 'EltypeClass'\r\n        }\r\n    ]\r\n    // логика всплывающей подсказки спрятана в обертку hoc, \r\n    // обертка кнопок и подсказка реализованы в ButtonNavigationSmall и ButtonNavigation\r\n    const ButtonNavigationSmall = withHoverDescription(ButtonLinkSmall, DescriptionNavigation);\r\n    const ButtonNavigation = withHoverDescription(ButtonLink, DescriptionNavigation);\r\n\r\n    return (\r\n        <header>\r\n            <nav className={navStyle.join(' ')}>\r\n\r\n                    <ButtonNavigationSmall\r\n                                to='/Personalize'\r\n                                icon=\"fa fa-user-circle-o\"\r\n                                classname={stateStylesAll[staleSelect].personalizeButton}\r\n                                name='Personalize'\r\n                                onclick={() => setIsOpen(false)}\r\n                                tabindex=\"-1\"\r\n                                haveDescription={isOpen}\r\n                                classnameDescription={stateStylesAll[staleSelect].navigationLinkAbout}\r\n                    />\r\n                    {\r\n                        login === \"administrator\" ?\r\n                                <ButtonNavigation\r\n                                            to= '/User'\r\n                                            name='User'\r\n                                            onclick={() => setIsOpen(false)}\r\n                                            classname={stateStylesAll[staleSelect].navigationButtonLink}\r\n                                            tabIndex= '2'\r\n                                            haveDescription={isOpen}\r\n                                            classnameDescription={stateStylesAll[staleSelect].navigationLinkAbout}\r\n                                />\r\n                                : null\r\n                    }\r\n                    {\r\n                        pages.map((page, index) => \r\n                                <ButtonNavigation\r\n                                            to={page.to}\r\n                                            name={page.name}\r\n                                            onclick={() => setIsOpen(false)}\r\n                                            classname={stateStylesAll[staleSelect].navigationButtonLink}\r\n                                            tabIndex={index + 2}\r\n                                            key={index + 2}\r\n                                            haveDescription={isOpen}\r\n                                            classnameDescription={stateStylesAll[staleSelect].navigationLinkAbout}\r\n                              />)\r\n                    }\r\n                \r\n            </nav>\r\n \r\n            {\r\n                isOpen ?\r\n                    <NavigationWindowBlind\r\n                        onclick={() => setIsOpen(false)}\r\n                        classname={stateStylesAll[staleSelect].navigationWindowBlind}\r\n                    />\r\n                    : null\r\n            }\r\n            \r\n            <NavigationToggle\r\n                openNavigation={hendlerNavigationToggle}\r\n                isOpen={isOpen}\r\n                classname={stateStylesAll[staleSelect].navigationToggle}\r\n            />\r\n\r\n        </header>\r\n    )\r\n}\r\nexport default connect()(Header)\r\n"]},"metadata":{},"sourceType":"module"}