{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\hoc\\\\withClickSaveFocusRow.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { saveDataStore } from '../store/EltypeClass/actions/actionEltypeClass';\nimport { focusRowColorBackground } from '../functions/focusRowColorBackground';\n\nconst mapStateToProps = state => {\n  return {\n    activList: state.stateFlagsEltypeClass.dataListTable,\n    // отображаемый лист\n    compareArr: state.compareDataEltypeClass,\n    // массив строк, избранных для сравнения\n    focusData: state.createDataEltypeClass.stateData //что хранится в фокусе\n    //    stateTable: state.stateTableEltypeClass //ВСЯ база\n\n  };\n};\n\nconst mapDispatchToProps = {\n  saveDataStore\n};\n\nconst withClickSaveFocusRow = (Component, typeList) => {\n  class ComponentWithClickSaveFocus extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.handlerTableRowUID = (event, data) => {\n        //фокус на строку\n        event.preventDefault();\n\n        if (event.target.parentElement.tagName == 'TR' || event.target.parentElement.tagName == 'TD' || event.target.parentElement.tagName == 'DIV') {\n          this.props.stateTable.map(obj => {\n            if (obj.uid === data) {\n              this.props.saveDataStore(obj); // сохранить в хранилище для изменений\n            }\n          });\n        }\n\n        ;\n\n        if (typeList == \"Base\") {\n          this.activArr = this.props.activList;\n          console.log('Base');\n        } else if (typeList == \"Compare\") {\n          this.activArr = this.props.compareArr;\n          console.log('Compare');\n        } else {\n          return;\n        }\n      };\n\n      this.activArr = [];\n    }\n\n    componentDidUpdate(prevProps) {\n      if (this.props.focusData !== prevProps.focusData) {\n        focusRowColorBackground(this.activArr, this.props.focusData);\n      }\n    } //componentDidMount() {\n    //    focusRowColorBackground(this.activArr, this.props.focusData);\n    //}\n\n\n    render() {\n      let props = { ...this.props,\n        onclick: this.handlerTableRowUID\n      };\n      return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }));\n    }\n\n  }\n\n  return connect(mapStateToProps, mapDispatchToProps)(ComponentWithClickSaveFocus);\n};\n\nexport default withClickSaveFocusRow;","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/hoc/withClickSaveFocusRow.js"],"names":["React","connect","saveDataStore","focusRowColorBackground","mapStateToProps","state","activList","stateFlagsEltypeClass","dataListTable","compareArr","compareDataEltypeClass","focusData","createDataEltypeClass","stateData","mapDispatchToProps","withClickSaveFocusRow","Component","typeList","ComponentWithClickSaveFocus","constructor","props","handlerTableRowUID","event","data","preventDefault","target","parentElement","tagName","stateTable","map","obj","uid","activArr","console","log","componentDidUpdate","prevProps","render","onclick"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,gDAA9B;AAEA,SAASC,uBAAT,QAAwC,sCAAxC;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,SAAS,EAAED,KAAK,CAACE,qBAAN,CAA4BC,aADpC;AACmD;AACtDC,IAAAA,UAAU,EAAEJ,KAAK,CAACK,sBAFf;AAEuC;AAC1CC,IAAAA,SAAS,EAAEN,KAAK,CAACO,qBAAN,CAA4BC,SAHpC,CAG+C;AACtD;;AAJO,GAAP;AAMH,CAPD;;AASA,MAAMC,kBAAkB,GAAG;AACvBZ,EAAAA;AADuB,CAA3B;;AAKA,MAAMa,qBAAqB,GAAG,CAACC,SAAD,EAAYC,QAAZ,KAAyB;AAInD,QAAMC,2BAAN,SAA0ClB,KAAK,CAACgB,SAAhD,CAA0D;AACtDG,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,YAAMA,KAAN;;AADe,WAMnBC,kBANmB,GAME,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAAE;AACpCD,QAAAA,KAAK,CAACE,cAAN;;AACA,YAAIF,KAAK,CAACG,MAAN,CAAaC,aAAb,CAA2BC,OAA3B,IAAsC,IAAtC,IAA8CL,KAAK,CAACG,MAAN,CAAaC,aAAb,CAA2BC,OAA3B,IAAsC,IAApF,IAA4FL,KAAK,CAACG,MAAN,CAAaC,aAAb,CAA2BC,OAA3B,IAAsC,KAAtI,EAA6I;AAEzI,eAAKP,KAAL,CAAWQ,UAAX,CAAsBC,GAAtB,CAA2BC,GAAD,IAAS;AAC/B,gBAAIA,GAAG,CAACC,GAAJ,KAAYR,IAAhB,EAAsB;AAClB,mBAAKH,KAAL,CAAWlB,aAAX,CAAyB4B,GAAzB,EADkB,CACa;AAClC;AACJ,WAJD;AAKH;;AAAA;;AAED,YAAIb,QAAQ,IAAI,MAAhB,EAAwB;AACpB,eAAKe,QAAL,GAAgB,KAAKZ,KAAL,CAAWd,SAA3B;AACA2B,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH,SAHD,MAGO,IAAIjB,QAAQ,IAAI,SAAhB,EAA2B;AAC9B,eAAKe,QAAL,GAAgB,KAAKZ,KAAL,CAAWX,UAA3B;AACAwB,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,SAHM,MAGA;AAAE;AAAQ;AACpB,OAxBkB;;AAEf,WAAKF,QAAL,GAAgB,EAAhB;AACH;;AAuBDG,IAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B,UAAI,KAAKhB,KAAL,CAAWT,SAAX,KAAyByB,SAAS,CAACzB,SAAvC,EAAkD;AAC9CR,QAAAA,uBAAuB,CAAC,KAAK6B,QAAN,EAAgB,KAAKZ,KAAL,CAAWT,SAA3B,CAAvB;AACH;AACJ,KA/BqD,CAgCtD;AACA;AACA;;;AACA0B,IAAAA,MAAM,GAAG;AACL,UAAIjB,KAAK,GAAG,EACR,GAAG,KAAKA,KADA;AAERkB,QAAAA,OAAO,EAAE,KAAKjB;AAFN,OAAZ;AAIA,0BACI,oBAAC,SAAD,oBAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAGH;;AA3CqD;;AA6C1D,SAAOnB,OAAO,CAACG,eAAD,EAAkBU,kBAAlB,CAAP,CAA6CI,2BAA7C,CAAP;AACH,CAlDD;;AAmDA,eAAeH,qBAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { saveDataStore } from '../store/EltypeClass/actions/actionEltypeClass';\r\n\r\nimport { focusRowColorBackground } from '../functions/focusRowColorBackground';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        activList: state.stateFlagsEltypeClass.dataListTable, // отображаемый лист\r\n        compareArr: state.compareDataEltypeClass, // массив строк, избранных для сравнения\r\n        focusData: state.createDataEltypeClass.stateData, //что хранится в фокусе\r\n    //    stateTable: state.stateTableEltypeClass //ВСЯ база\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveDataStore\r\n}\r\n\r\n\r\nconst withClickSaveFocusRow = (Component, typeList) => {\r\n\r\n\r\n        \r\n    class ComponentWithClickSaveFocus extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.activArr = [];\r\n        }\r\n\r\n\r\n        handlerTableRowUID = (event, data) => { //фокус на строку\r\n            event.preventDefault();\r\n            if (event.target.parentElement.tagName == 'TR' || event.target.parentElement.tagName == 'TD' || event.target.parentElement.tagName == 'DIV') {\r\n\r\n                this.props.stateTable.map((obj) => {\r\n                    if (obj.uid === data) {\r\n                        this.props.saveDataStore(obj); // сохранить в хранилище для изменений\r\n                    }\r\n                });\r\n            };\r\n\r\n            if (typeList == \"Base\") {\r\n                this.activArr = this.props.activList;\r\n                console.log('Base')\r\n            } else if (typeList == \"Compare\") {\r\n                this.activArr = this.props.compareArr\r\n                console.log('Compare')\r\n            } else { return }\r\n        }\r\n\r\n        componentDidUpdate(prevProps) {\r\n            if (this.props.focusData !== prevProps.focusData) {\r\n                focusRowColorBackground(this.activArr, this.props.focusData);\r\n            }\r\n        }\r\n        //componentDidMount() {\r\n        //    focusRowColorBackground(this.activArr, this.props.focusData);\r\n        //}\r\n        render() {\r\n            let props = {\r\n                ...this.props,\r\n                onclick: this.handlerTableRowUID\r\n            }\r\n            return (\r\n                <Component {...props} />\r\n                )\r\n        }\r\n    }\r\n    return connect(mapStateToProps, mapDispatchToProps)(ComponentWithClickSaveFocus)\r\n}\r\nexport default withClickSaveFocusRow"]},"metadata":{},"sourceType":"module"}