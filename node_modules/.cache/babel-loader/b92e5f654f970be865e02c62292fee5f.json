{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\UserInterface\\\\Input\\\\Input.js\";\nimport React, { useEffect, useRef } from 'react';\n\nfunction Input(props) {\n  const data = props.data;\n  const typeInput = props.type;\n  const ref = useRef(props.value);\n  useEffect(() => {\n    ref.current.focus();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: props.id,\n    className: props.classNameLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, props.label), /*#__PURE__*/React.createElement(\"input\", {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: event => props.onchange(event, data, typeInput),\n    value: props.value,\n    tabIndex: props.tabindex,\n    className: props.classNameInput,\n    autoComplete: \"off\",\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Input;","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/UserInterface/Input/Input.js"],"names":["React","useEffect","useRef","Input","props","data","typeInput","type","ref","value","current","focus","id","classNameLabel","label","placeholder","event","onchange","tabindex","classNameInput"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;;AAEA,SAASC,KAAT,CAAgBC,KAAhB,EAAsB;AAElB,QAAMC,IAAI,GAAGD,KAAK,CAACC,IAAnB;AACA,QAAMC,SAAS,GAAGF,KAAK,CAACG,IAAxB;AAEA,QAAMC,GAAG,GAAGN,MAAM,CAACE,KAAK,CAACK,KAAP,CAAlB;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,GAAG,CAACE,OAAJ,CAAYC,KAAZ;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AACQ,IAAA,OAAO,EAAEP,KAAK,CAACQ,EADvB;AAEQ,IAAA,SAAS,EAAER,KAAK,CAACS,cAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKT,KAAK,CAACU,KAJX,CAFJ,eASI;AACQ,IAAA,EAAE,EAAIV,KAAK,CAACQ,EADpB;AAEQ,IAAA,IAAI,EAAIR,KAAK,CAACG,IAFtB;AAGQ,IAAA,WAAW,EAAEH,KAAK,CAACW,WAH3B;AAIQ,IAAA,QAAQ,EAAGC,KAAD,IAAWZ,KAAK,CAACa,QAAN,CAAeD,KAAf,EAAsBX,IAAtB,EAA4BC,SAA5B,CAJ7B;AAKQ,IAAA,KAAK,EAAIF,KAAK,CAACK,KALvB;AAMQ,IAAA,QAAQ,EAAIL,KAAK,CAACc,QAN1B;AAOQ,IAAA,SAAS,EAAEd,KAAK,CAACe,cAPzB;AAQQ,IAAA,YAAY,EAAC,KARrB;AASQ,IAAA,GAAG,EAAEX,GATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CADJ;AAyBH;;AAED,eAAeL,KAAf","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\n\r\nfunction Input (props){\r\n    \r\n    const data = props.data;\r\n    const typeInput = props.type;\r\n\r\n    const ref = useRef(props.value);\r\n\r\n    useEffect(() => {\r\n        ref.current.focus();\r\n    }, []);\r\n \r\n    return(\r\n        <div>\r\n        \r\n            <label \r\n                    htmlFor={props.id}\r\n                    className={props.classNameLabel}\r\n            >\r\n                {props.label}\r\n           </label>\r\n        \r\n            <input\r\n                    id = {props.id}\r\n                    type = {props.type}\r\n                    placeholder={props.placeholder}\r\n                    onChange={(event) => props.onchange(event, data, typeInput)}\r\n                    value = {props.value}\r\n                    tabIndex = {props.tabindex}\r\n                    className={props.classNameInput}\r\n                    autoComplete='off'\r\n                    ref={ref}\r\n            />\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input\r\n\r\n"]},"metadata":{},"sourceType":"module"}