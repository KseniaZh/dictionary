{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\containers\\\\Navigation\\\\Header.js\";\nimport React, { useState } from 'react';\nimport { connect, useDispatch } from \"react-redux\";\nimport ButtonLink from '../../UserInterface/Buttons/Button/ButtonLink';\nimport NavigationWindowBlind from '../../UserInterface/Navigation/NavigationWindowBlind';\nimport NavigationLinkAbout from '../../UserInterface/Navigation/NavigationLinkAbout';\nimport NavigationToggle from '../../UserInterface/Navigation/NavigationToggle';\nimport { startGetRequestServer } from '../../store/serverViewType/actions/actionViewType'; //import iceBaikal from '../../image/iceBaikal.jpg';\n//import { NavLink } from 'react-router-dom';\n\nimport \"../../styles/Navigation.scss\";\nimport '../../styles/NavigationToggle.scss';\nimport '../../styles/NavigationWindowBlind.scss';\nimport { aboutLinks } from \"../../constans/aboutLinks\";\n\nfunction Header() {\n  const dispatch = useDispatch();\n  const [linkAbout, setLinkAbout] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const [isOpenAbout, setIsOpenAbout] = useState(false);\n  const navStyle = [\"Navigation\"];\n\n  if (!isOpen) {\n    navStyle.push(\"close\");\n  }\n\n  ;\n\n  const hendlerHoverLink = data => {\n    setLinkAbout(aboutLinks[data]);\n    setIsOpenAbout(true);\n  };\n\n  const hendlerLeaveLink = () => {\n    setLinkAbout(\"\");\n    setIsOpenAbout(false);\n  };\n\n  const hendlerToggleNavigation = () => {\n    setIsOpen(!isOpenAbout);\n  };\n\n  const hendlerCloseNavigation = () => {\n    setIsOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    className: navStyle.join(' '),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ButtonLink, {\n    to: \"/\",\n    name: \"Home\",\n    onclick: hendlerCloseNavigation,\n    onmouseover: () => hendlerHoverLink('Home'),\n    onmouseleave: hendlerLeaveLink,\n    classname: \"NavigationButtonLink\",\n    tabIndex: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(ButtonLink, {\n    to: \"/ViewType\",\n    name: \"ViewType\",\n    onclick: hendlerCloseNavigation,\n    onmouseover: () => hendlerHoverLink('ViewType'),\n    onmouseleave: hendlerLeaveLink,\n    classname: \"NavigationButtonLink\",\n    tabIndex: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(ButtonLink, {\n    to: \"/EltypeClass\",\n    name: \"EltypeClass\",\n    onclick: hendlerCloseNavigation,\n    onmouseover: () => hendlerHoverLink('EltypeClass'),\n    onmouseleave: hendlerLeaveLink,\n    classname: \"NavigationButtonLink\",\n    tabIndex: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  })), isOpen ? /*#__PURE__*/React.createElement(NavigationWindowBlind, {\n    isOpen: isOpen,\n    onClick: hendlerCloseNavigation,\n    classname: \"NavigationWindowBlind\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }) : null, isOpenAbout === true ? /*#__PURE__*/React.createElement(NavigationLinkAbout, {\n    aboutLink: linkAbout,\n    classname: \"navigationLinkAbout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }) : null, /*#__PURE__*/React.createElement(NavigationToggle, {\n    openNavigation: hendlerToggleNavigation,\n    isOpen: isOpen,\n    classname: \"NavigationToggle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default connect()(Header); //{ this.props.isOpen ? <WindowBlind onClick={this.props.onClose} /> : null }","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/containers/Navigation/Header.js"],"names":["React","useState","connect","useDispatch","ButtonLink","NavigationWindowBlind","NavigationLinkAbout","NavigationToggle","startGetRequestServer","aboutLinks","Header","dispatch","linkAbout","setLinkAbout","isOpen","setIsOpen","isOpenAbout","setIsOpenAbout","navStyle","push","hendlerHoverLink","data","hendlerLeaveLink","hendlerToggleNavigation","hendlerCloseNavigation","join"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport ButtonLink from '../../UserInterface/Buttons/Button/ButtonLink';\r\nimport NavigationWindowBlind from '../../UserInterface/Navigation/NavigationWindowBlind';\r\nimport NavigationLinkAbout from '../../UserInterface/Navigation/NavigationLinkAbout';\r\nimport NavigationToggle from '../../UserInterface/Navigation/NavigationToggle';\r\nimport { startGetRequestServer } from '../../store/serverViewType/actions/actionViewType';\r\n//import iceBaikal from '../../image/iceBaikal.jpg';\r\n//import { NavLink } from 'react-router-dom';\r\n\r\nimport \"../../styles/Navigation.scss\";\r\nimport '../../styles/NavigationToggle.scss';\r\nimport '../../styles/NavigationWindowBlind.scss';\r\nimport { aboutLinks } from \"../../constans/aboutLinks\";\r\n\r\n\r\nfunction Header() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n   \r\n    const [linkAbout, setLinkAbout] = useState(\"\");\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [isOpenAbout, setIsOpenAbout] = useState(false);\r\n\r\n    const navStyle = [\"Navigation\"];\r\n    if (!isOpen) {\r\n        navStyle.push(\"close\");\r\n    };\r\n\r\n    const hendlerHoverLink = (data) => {\r\n        setLinkAbout(aboutLinks[data]);\r\n        setIsOpenAbout(true);\r\n    }\r\n    const hendlerLeaveLink = () => {\r\n        setLinkAbout(\"\");\r\n        setIsOpenAbout(false);\r\n    }\r\n    const hendlerToggleNavigation = () => {\r\n        setIsOpen(!isOpenAbout);\r\n    }\r\n    const hendlerCloseNavigation = () => {\r\n        setIsOpen(false);\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <nav className={navStyle.join(' ')}>\r\n \r\n                    <ButtonLink\r\n                        to='/'\r\n                        name='Home'\r\n                        onclick={hendlerCloseNavigation}\r\n                        onmouseover={() => hendlerHoverLink('Home')}\r\n                        onmouseleave={hendlerLeaveLink}\r\n                        classname='NavigationButtonLink'\r\n                        tabIndex='1'\r\n                    />\r\n                    <ButtonLink\r\n                        to='/ViewType'\r\n                        name='ViewType'\r\n                        onclick={hendlerCloseNavigation}\r\n                        onmouseover={() => hendlerHoverLink('ViewType')}\r\n                        onmouseleave={hendlerLeaveLink}\r\n                        classname='NavigationButtonLink'\r\n                        tabIndex='2'\r\n                    />\r\n                    <ButtonLink\r\n                        to='/EltypeClass'\r\n                        name='EltypeClass'\r\n                        onclick={hendlerCloseNavigation}\r\n                        onmouseover={() => hendlerHoverLink('EltypeClass')}\r\n                        onmouseleave={hendlerLeaveLink}\r\n                        classname='NavigationButtonLink'\r\n                        tabIndex='3'\r\n                 />\r\n\r\n            </nav>\r\n\r\n            {\r\n                isOpen ?\r\n                    <NavigationWindowBlind\r\n                        isOpen={isOpen}\r\n                        onClick={hendlerCloseNavigation}\r\n                        classname=\"NavigationWindowBlind\"\r\n                    />\r\n                    : null\r\n            }\r\n                    {\r\n                        isOpenAbout === true ?\r\n                        <NavigationLinkAbout\r\n                            aboutLink={linkAbout}\r\n                            classname=\"navigationLinkAbout\"\r\n                         />\r\n                        : null\r\n                     }\r\n            \r\n            <NavigationToggle\r\n                openNavigation={hendlerToggleNavigation}\r\n                isOpen={isOpen}\r\n                classname='NavigationToggle'\r\n            />\r\n\r\n        </header>\r\n    )\r\n}\r\nexport default connect()(Header)\r\n\r\n//{ this.props.isOpen ? <WindowBlind onClick={this.props.onClose} /> : null }"]},"metadata":{},"sourceType":"module"}