{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\components\\\\Table\\\\RowTable.js\";\nimport React, { useState } from 'react';\n\nfunction RowTable(props) {\n  const Keys = Object.keys(props.dataRow);\n  const uid = props.dataRow.uid;\n\n  const inputChecked = data => {\n    if (data === true) {\n      return 'checked';\n    } else {\n      return false;\n    }\n\n    ;\n  };\n\n  const [rowBackground, setRowBackground] = useState({\n    background: \"\"\n  });\n  const focusUid = props.focusUid;\n\n  if (props.dataRow.uid == props.focusUid) {\n    setRowBackground({\n      background: \"red\"\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, props.number <= props.CountRow ? /*#__PURE__*/React.createElement(\"td\", {\n    style: rowBackground,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, \" \", props.number) : null, Keys.map((keyObj, index) => {\n    if (props.number <= props.CountRow) {\n      if (keyObj === 'name') {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: index,\n          uid: props.dataRow.uid,\n          onClick: event => props.onclick(event, uid),\n          style: rowBackground,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 40\n          }\n        }, props.dataRow[keyObj]);\n      }\n\n      if (keyObj === 'isDeleted' || keyObj === 'isTemplate') {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: index,\n          uid: props.dataRow.uid,\n          onClick: event => props.onclick(event, uid),\n          style: rowBackground,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 40\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"checkbox\",\n          checked: inputChecked(props.dataRow[keyObj]),\n          disabled: \"disabled\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 37\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"fa fa-check\",\n          \"aria-hidden\": \"true\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 39\n          }\n        }));\n      }\n    }\n  }));\n}\n\nexport default RowTable;","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/components/Table/RowTable.js"],"names":["React","useState","RowTable","props","Keys","Object","keys","dataRow","uid","inputChecked","data","rowBackground","setRowBackground","background","focusUid","number","CountRow","map","keyObj","index","event","onclick"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;;AAEA,SAASC,QAAT,CAAmBC,KAAnB,EAAyB;AAErB,QAAMC,IAAI,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAK,CAACI,OAAlB,CAAb;AACA,QAAMC,GAAG,GAAGL,KAAK,CAACI,OAAN,CAAcC,GAA1B;;AAEA,QAAMC,YAAY,GAAGC,IAAI,IAAI;AACzB,QAAIA,IAAI,KAAK,IAAb,EAAmB;AACf,aAAO,SAAP;AACH,KAFD,MAEO;AACH,aAAO,KAAP;AACH;;AAAA;AACJ,GAND;;AAOA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC;AAAEY,IAAAA,UAAU,EAAE;AAAd,GAAD,CAAlD;AACA,QAAMC,QAAQ,GAAGX,KAAK,CAACW,QAAvB;;AAED,MAAIX,KAAK,CAACI,OAAN,CAAcC,GAAd,IAAqBL,KAAK,CAACW,QAA/B,EAAyC;AACrCF,IAAAA,gBAAgB,CAAC;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAD,CAAhB;AACF;;AAED,sBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAESV,KAAK,CAACY,MAAN,IAAgBZ,KAAK,CAACa,QAAvB,gBACI;AAAI,IAAA,KAAK,EAAEL,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA4BR,KAAK,CAACY,MAAlC,CADJ,GAEK,IAJb,EAQQX,IAAI,CAACa,GAAL,CAAS,CAACC,MAAD,EAASC,KAAT,KAAmB;AAExB,QAAIhB,KAAK,CAACY,MAAN,IAAgBZ,KAAK,CAACa,QAA1B,EAAoC;AAE5B,UAAIE,MAAM,KAAK,MAAf,EAAuB;AACnB,4BAAO;AACK,UAAA,GAAG,EAAEC,KADV;AAEK,UAAA,GAAG,EAAEhB,KAAK,CAACI,OAAN,CAAcC,GAFxB;AAGK,UAAA,OAAO,EAAGY,KAAD,IAAWjB,KAAK,CAACkB,OAAN,CAAcD,KAAd,EAAqBZ,GAArB,CAHzB;AAIH,UAAA,KAAK,EAAEG,aAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAMMR,KAAK,CAACI,OAAN,CAAcW,MAAd,CANN,CAAP;AASH;;AAED,UAAIA,MAAM,KAAK,WAAX,IAA0BA,MAAM,KAAK,YAAzC,EAAuD;AACnD,4BAAO;AACH,UAAA,GAAG,EAAEC,KADF;AAEH,UAAA,GAAG,EAAEhB,KAAK,CAACI,OAAN,CAAcC,GAFhB;AAGH,UAAA,OAAO,EAAGY,KAAD,IAAWjB,KAAK,CAACkB,OAAN,CAAcD,KAAd,EAAqBZ,GAArB,CAHjB;AAIH,UAAA,KAAK,EAAEG,aAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAOH;AACI,UAAA,IAAI,EAAC,UADT;AAEI,UAAA,OAAO,EAAEF,YAAY,CAACN,KAAK,CAACI,OAAN,CAAcW,MAAd,CAAD,CAFzB;AAGI,UAAA,QAAQ,EAAC,UAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPG,eAYD;AAAM,UAAA,SAAS,EAAC,aAAhB;AAA8B,yBAAY,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAZC,CAAP;AAcH;AACR;AAGJ,GAnCD,CARR,CAFJ;AAkDH;;AAED,eAAehB,QAAf","sourcesContent":["import React, { useState} from 'react';\r\n\r\nfunction RowTable (props){\r\n    \r\n    const Keys = Object.keys(props.dataRow);\r\n    const uid = props.dataRow.uid;\r\n\r\n    const inputChecked = data => {\r\n        if (data === true) {\r\n            return 'checked'\r\n        } else {\r\n            return false\r\n        };\r\n    }\r\n    const [rowBackground, setRowBackground] = useState({ background: \"\" });\r\n    const focusUid = props.focusUid;\r\n\r\n   if (props.dataRow.uid == props.focusUid) {\r\n       setRowBackground({ background: \"red\" });\r\n    }\r\n\r\n    return(\r\n\r\n        <tr >\r\n            {\r\n                (props.number <= props.CountRow)?\r\n                    <td style={rowBackground}> {props.number}</td>\r\n                    :null\r\n            }\r\n            \r\n            {\r\n                Keys.map((keyObj, index) => {\r\n\r\n                    if (props.number <= props.CountRow) {\r\n\r\n                            if (keyObj === 'name') {\r\n                                return <td\r\n                                            key={index}\r\n                                            uid={props.dataRow.uid}\r\n                                            onClick={(event) => props.onclick(event, uid)}\r\n                                    style={rowBackground}\r\n                                        >\r\n                                            {props.dataRow[keyObj]}\r\n\r\n                                </td>\r\n                            }\r\n\r\n                            if (keyObj === 'isDeleted' || keyObj === 'isTemplate') {\r\n                                return <td\r\n                                    key={index}\r\n                                    uid={props.dataRow.uid}\r\n                                    onClick={(event) => props.onclick(event, uid)}\r\n                                    style={rowBackground}\r\n\r\n                                >\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        checked={inputChecked(props.dataRow[keyObj])}\r\n                                        disabled=\"disabled\"\r\n\r\n                                    /><span className=\"fa fa-check\" aria-hidden=\"true\"></span>\r\n                                </td>\r\n                            }\r\n                    }\r\n\r\n                    \r\n                }) \r\n            }\r\n        \r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default RowTable"]},"metadata":{},"sourceType":"module"}