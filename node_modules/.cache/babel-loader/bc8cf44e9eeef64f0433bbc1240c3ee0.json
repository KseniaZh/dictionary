{"ast":null,"code":"import { CREATE_DATA } from \"../types\";\nconst initialState = {\n  flag: false,\n  stateData: {\n    uid: 0,\n    name: \"\",\n    comment: \"\",\n    classViewProperty: \"\",\n    dbTable: \"\"\n  },\n  nameWindow: \"Новые данные\",\n  labels: ['uid', 'Наименование', 'Примечания', 'classViewProperty', 'dbTable'],\n  placeholders: ['uid', 'Введите полное наименование', 'Дополнения и комментарии', 'classViewProperty', 'dbTable'],\n  typeData: [\"number\", \"text\", \"text\", \"text\", \"text\"]\n};\n\nconst WindowCreateNewData = (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_DATA:\n      return { ...state,\n        stateData: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default WindowCreateNewData;","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/store/serverViewType/reducers/reducerWindowCreateNewData.js"],"names":["CREATE_DATA","initialState","flag","stateData","uid","name","comment","classViewProperty","dbTable","nameWindow","labels","placeholders","typeData","WindowCreateNewData","state","action","type","payload"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,UAA1B;AAEA,MAAMC,YAAY,GAAE;AAChBC,EAAAA,IAAI,EAAE,KADU;AAEhBC,EAAAA,SAAS,EAAE;AACCC,IAAAA,GAAG,EAAE,CADN;AAECC,IAAAA,IAAI,EAAE,EAFP;AAGCC,IAAAA,OAAO,EAAE,EAHV;AAICC,IAAAA,iBAAiB,EAAE,EAJpB;AAKCC,IAAAA,OAAO,EAAE;AALV,GAFK;AAShBC,EAAAA,UAAU,EAAE,cATI;AAUhBC,EAAAA,MAAM,EAAE,CACI,KADJ,EAEI,cAFJ,EAGI,YAHJ,EAII,mBAJJ,EAKI,SALJ,CAVQ;AAiBhBC,EAAAA,YAAY,EAAE,CACF,KADE,EAEF,6BAFE,EAGF,0BAHE,EAIF,mBAJE,EAKF,SALE,CAjBE;AAwBhBC,EAAAA,QAAQ,EAAE,CACE,QADF,EAEE,MAFF,EAGE,MAHF,EAIE,MAJF,EAKE,MALF;AAxBM,CAApB;;AAiCA,MAAMC,mBAAmB,GAAG,CAACC,KAAK,GAAGb,YAAT,EAAuBc,MAAvB,KAAkC;AAE1D,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKhB,WAAL;AACI,aAAO,EACH,GAAGc,KADA;AAEHX,QAAAA,SAAS,EAAEY,MAAM,CAACE;AAFf,OAAP;;AAKJ;AACI,aAAOH,KAAP;AATR;AAWH,CAbD;;AAcA,eAAeD,mBAAf","sourcesContent":["import {CREATE_DATA} from \"../types\"\r\n\r\nconst initialState ={\r\n    flag: false,\r\n    stateData: {\r\n                uid: 0,\r\n                name: \"\",\r\n                comment: \"\",\r\n                classViewProperty: \"\",\r\n                dbTable: \"\"\r\n            },\r\n    nameWindow: \"Новые данные\",\r\n    labels: [\r\n                'uid',\r\n                'Наименование',\r\n                'Примечания',\r\n                'classViewProperty',\r\n                'dbTable'\r\n            ],\r\n    placeholders: [\r\n                'uid',\r\n                'Введите полное наименование',\r\n                'Дополнения и комментарии',\r\n                'classViewProperty',\r\n                'dbTable'\r\n            ],\r\n    typeData: [\r\n                \"number\",\r\n                \"text\",\r\n                \"text\",\r\n                \"text\",\r\n                \"text\"\r\n            ]\r\n                    };\r\n\r\nconst WindowCreateNewData = (state = initialState, action) => {\r\n    \r\n    switch (action.type){\r\n            \r\n        case CREATE_DATA:\r\n            return {\r\n                ...state,\r\n                stateData: action.payload\r\n            }\r\n\r\n        default: \r\n            return state;\r\n    }\r\n}\r\nexport default WindowCreateNewData"]},"metadata":{},"sourceType":"module"}