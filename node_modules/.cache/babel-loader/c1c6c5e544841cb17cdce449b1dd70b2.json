{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\hoc\\\\withClickSaveFocusRow.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { saveDataStore } from '../store/EltypeClass/actions/actionEltypeClass';\nimport { tablebodyBackground_Coffee, rowFocus_Coffee } from '../styles/const_color';\n\nconst mapStateToProps = state => {\n  return {\n    focusData: state.createDataEltypeClass.stateData,\n    //что хранится в фокусе\n    stateTable: state.stateTableEltypeClass //ВСЯ база\n\n  };\n};\n\nconst mapDispatchToProps = {\n  saveDataStore\n};\n\nconst withClickSaveFocusRow = Component => {\n  class ComponentWithClickSaveFocus extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.handlerTableRowUID = (event, data) => {\n        //фокус на строку\n        event.preventDefault();\n        let tr; //строка выбранной ячейки\n\n        if (event.target.parentElement.tagName == 'TR') {\n          tr = event.target.parentElement;\n          tr.style.background = \"rgba(95, 48, 25, 0.4)\"; // выделяем цветом строчку\n\n          this.props.stateTable.map(obj => {\n            if (obj.uid === data) {\n              this.props.saveDataStore(obj); // сохранить в хранилище для изменений\n            }\n          });\n        } else if (event.target.parentElement.tagName == 'TD') {\n          tr = event.target.parentElement.parentElement;\n          this.props.stateTable.map(obj => {\n            if (obj.uid === data) {\n              this.props.saveDataStore(obj); // сохранить в хранилище для изменений\n            }\n          });\n        } else if (event.target.parentElement.tagName == 'DIV') {\n          tr = event.target.parentElement.parentElement.parentElement; //просто выделить, удаление идет через кнопку\n        }\n\n        ;\n        let tablebody = document.querySelector('tbody');\n\n        for (let child of tablebody.children) {\n          child.style.background = 'red'; //убираем цвет ранее выбранной строки\n\n          console.log('BACKGROUND');\n        }\n\n        ; // очищаем поле\n\n        tr.style.background = \"rgba(95, 48, 25, 0.4)\"; // выделяем цветом строчку\n      };\n\n      this.rowFocus_Coffee = rowFocus_Coffee;\n      this.tablebodyBackground_Coffee = tablebodyBackground_Coffee;\n    }\n\n    render() {\n      let props = { ...this.props,\n        onclick: this.handlerTableRowUID\n      };\n      console.log(\"props \", props);\n      return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }));\n    }\n\n  }\n\n  return connect(mapStateToProps, mapDispatchToProps)(ComponentWithClickSaveFocus);\n};\n\nexport default withClickSaveFocusRow;","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/hoc/withClickSaveFocusRow.js"],"names":["React","connect","saveDataStore","tablebodyBackground_Coffee","rowFocus_Coffee","mapStateToProps","state","focusData","createDataEltypeClass","stateData","stateTable","stateTableEltypeClass","mapDispatchToProps","withClickSaveFocusRow","Component","ComponentWithClickSaveFocus","constructor","props","handlerTableRowUID","event","data","preventDefault","tr","target","parentElement","tagName","style","background","map","obj","uid","tablebody","document","querySelector","child","children","console","log","render","onclick"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { saveDataStore } from '../store/EltypeClass/actions/actionEltypeClass';\r\nimport { tablebodyBackground_Coffee, rowFocus_Coffee } from '../styles/const_color';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        focusData: state.createDataEltypeClass.stateData, //что хранится в фокусе\r\n        stateTable: state.stateTableEltypeClass //ВСЯ база\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveDataStore\r\n}\r\n\r\n\r\nconst withClickSaveFocusRow = (Component) => {\r\n\r\n    class ComponentWithClickSaveFocus extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.rowFocus_Coffee = rowFocus_Coffee;\r\n            this.tablebodyBackground_Coffee = tablebodyBackground_Coffee;\r\n        }\r\n\r\n        handlerTableRowUID = (event, data) => { //фокус на строку\r\n            event.preventDefault();\r\n\r\n            let tr; //строка выбранной ячейки\r\n            if (event.target.parentElement.tagName == 'TR') {\r\n                tr = event.target.parentElement;\r\n                tr.style.background = \"rgba(95, 48, 25, 0.4)\"; // выделяем цветом строчку\r\n                this.props.stateTable.map((obj) => {\r\n                    if (obj.uid === data) {\r\n                        this.props.saveDataStore(obj); // сохранить в хранилище для изменений\r\n                    }\r\n                })\r\n            } else if (event.target.parentElement.tagName == 'TD') {\r\n                tr = event.target.parentElement.parentElement;\r\n\r\n                this.props.stateTable.map((obj) => {\r\n                    if (obj.uid === data) {\r\n                        this.props.saveDataStore(obj); // сохранить в хранилище для изменений\r\n                    }\r\n                })\r\n            } else if (event.target.parentElement.tagName == 'DIV') {\r\n                tr = event.target.parentElement.parentElement.parentElement; //просто выделить, удаление идет через кнопку\r\n            };\r\n\r\n            let tablebody = document.querySelector('tbody');\r\n            for (let child of tablebody.children) {\r\n                child.style.background = 'red';//убираем цвет ранее выбранной строки\r\n                console.log('BACKGROUND')\r\n            }; // очищаем поле\r\n            tr.style.background = \"rgba(95, 48, 25, 0.4)\"; // выделяем цветом строчку\r\n        }\r\n        render() {\r\n            let props = {\r\n                ...this.props,\r\n                onclick: this.handlerTableRowUID\r\n            }\r\n            console.log(\"props \", props)\r\n            return (\r\n                <Component {...props} />\r\n                )\r\n        }\r\n    }\r\n    return connect(mapStateToProps, mapDispatchToProps)(ComponentWithClickSaveFocus)\r\n}\r\nexport default withClickSaveFocusRow"]},"metadata":{},"sourceType":"module"}