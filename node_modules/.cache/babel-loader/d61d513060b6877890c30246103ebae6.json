{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\containers\\\\baseEltypeClass\\\\EditWindowEltypeClass.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport \"../../styles/WarningValueNotSelected.scss\";\nimport \"../../styles/EditWindow.scss\";\nimport ComponentEditWindow_EltypeClass from '../../components/EditWindow/ComponentEditWindowEltypeClass';\nimport { saveDataStore, start_POST_RequestServer, start_PUT_RequestServer } from '../../store/EltypeClass/actions/actionEltypeClass';\nimport WarningValueNotSelected from '../../components/WarningWindow/WarningValueNotSelected';\nimport { linkEltypeClass } from '../Navigation/Main';\nconst mapDispatchToProps = {\n  saveDataStore,\n  start_POST_RequestServer,\n  start_PUT_RequestServer\n};\n\nconst mapStateToProps = state => {\n  return {\n    initialProperties: state.createDataEltypeClass\n  };\n};\n\nclass EditWindow_EltypeClass extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handlerOnChange = (event, keyName, typeInput) => {\n      if (typeInput === \"text\") {\n        this.setState({\n          [keyName]: event.target.value\n        });\n      }\n\n      ;\n\n      if (typeInput === \"checkbox\") {\n        this.setState({\n          [keyName]: !this.state[keyName]\n        });\n        console.log(\"checkbox \", !this.state[keyName]);\n      }\n\n      ;\n    };\n\n    this.nullStateApp = () => {\n      let nullState = {};\n      Object.keys(this.state).map(key => nullState[key] = '');\n      this.setState({ ...nullState\n      });\n    };\n\n    this.handlerClose = () => {\n      let nullState = {};\n      Object.keys(this.state).map(key => nullState[key] = ''); //this.saveDataStore({ ...nullState });\n\n      this.setState({ ...nullState\n      });\n    };\n\n    this.handlerSave = () => {\n      this.saveDataStore(this.state);\n\n      if (this.typeRequestServer === 'post') {\n        this.start_POST_RequestServer();\n      } else if (this.typeRequestServer === 'put') {\n        this.start_PUT_RequestServer();\n      }\n\n      this.handlerClose();\n    };\n\n    this.handler = () => {};\n\n    this.state = props.initialProperties.stateData;\n    this.nameWindow = props.initialProperties.nameWindow;\n    this.labels = props.initialProperties.labels;\n    this.placeholders = props.initialProperties.placeholders;\n    this.typeData = props.initialProperties.typeData;\n    this.saveDataStore = props.saveDataStore;\n    this.start_POST_RequestServer = props.start_POST_RequestServer;\n    this.start_PUT_RequestServer = props.start_PUT_RequestServer;\n    this.typeRequestServer = props.initialProperties.typeRequest;\n    this.linkAddress = linkEltypeClass;\n  }\n\n  componentDidMount() {\n    if (this.typeRequestServer === 'post') {\n      this.nullStateApp();\n    }\n  }\n\n  render() {\n    return this.typeRequestServer === 'put' && this.state.uid === \"\" ? /*#__PURE__*/React.createElement(WarningValueNotSelected, {\n      classnameWarningValueNotSelected: \"WarningValueNotSelected\",\n      classnameWarningHelp: \"WarningHelp\",\n      classnameButtonWarningHelp: \"ButtonWarningHelp\",\n      classnameButtonWarningComeBack: \"ButtonWarningComeBack\",\n      classnameWrapper: \"Wrapper\",\n      onclickWarning: () => console.log(\"WarningValueNotSelected\"),\n      to: this.linkAddress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }) : /*#__PURE__*/React.createElement(ComponentEditWindow_EltypeClass, {\n      classnameWrapper: \"Wrapper\",\n      classnameWindow: \"WindowEditWindow\",\n      classNameCheckbox: \"beautiful-Checkbox\",\n      nameWindow: this.nameWindow,\n      onchange: this.handlerOnChange,\n      stateData: this.state,\n      labels: this.labels,\n      placeholders: this.placeholders,\n      typeData: this.typeData,\n      onclickYesButton: this.handlerSave,\n      onclickNoButton: this.handlerClose,\n      onmouseover: this.handler,\n      onmouseleave: this.handler,\n      to: this.linkAddress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }\n    });\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditWindow_EltypeClass);","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/containers/baseEltypeClass/EditWindowEltypeClass.js"],"names":["React","connect","ComponentEditWindow_EltypeClass","saveDataStore","start_POST_RequestServer","start_PUT_RequestServer","WarningValueNotSelected","linkEltypeClass","mapDispatchToProps","mapStateToProps","state","initialProperties","createDataEltypeClass","EditWindow_EltypeClass","Component","constructor","props","handlerOnChange","event","keyName","typeInput","setState","target","value","console","log","nullStateApp","nullState","Object","keys","map","key","handlerClose","handlerSave","typeRequestServer","handler","stateData","nameWindow","labels","placeholders","typeData","typeRequest","linkAddress","componentDidMount","render","uid"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport \"../../styles/WarningValueNotSelected.scss\";\r\nimport \"../../styles/EditWindow.scss\";\r\nimport ComponentEditWindow_EltypeClass from '../../components/EditWindow/ComponentEditWindowEltypeClass';\r\nimport { saveDataStore, start_POST_RequestServer, start_PUT_RequestServer } from '../../store/EltypeClass/actions/actionEltypeClass'\r\n\r\nimport WarningValueNotSelected from '../../components/WarningWindow/WarningValueNotSelected';\r\nimport { linkEltypeClass } from '../Navigation/Main';\r\n\r\nconst mapDispatchToProps = {\r\n            saveDataStore,\r\n            start_POST_RequestServer,\r\n            start_PUT_RequestServer\r\n        }\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        initialProperties: state.createDataEltypeClass\r\n    }\r\n}\r\n\r\n\r\nclass EditWindow_EltypeClass extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = props.initialProperties.stateData;\r\n        this.nameWindow = props.initialProperties.nameWindow;\r\n        this.labels = props.initialProperties.labels;\r\n        this.placeholders = props.initialProperties.placeholders;\r\n        this.typeData = props.initialProperties.typeData;\r\n\r\n        this.saveDataStore = props.saveDataStore;\r\n        this.start_POST_RequestServer = props.start_POST_RequestServer;\r\n        this.start_PUT_RequestServer = props.start_PUT_RequestServer;\r\n\r\n        this.typeRequestServer = props.initialProperties.typeRequest;\r\n\r\n        this.linkAddress = linkEltypeClass;\r\n    }\r\n\r\n\r\n    handlerOnChange = (event, keyName, typeInput) => {\r\n        if (typeInput === \"text\") {\r\n            this.setState({ [keyName]: event.target.value });\r\n        };\r\n        if (typeInput === \"checkbox\") {\r\n            this.setState({ [keyName]: !this.state[keyName] });\r\n            console.log(\"checkbox \", !this.state[keyName]);\r\n        };\r\n    }\r\n        \r\n\r\n    nullStateApp = () => {\r\n        let nullState = {};\r\n        Object.keys(this.state).map((key) => nullState[key] = '')\r\n        this.setState({ ...nullState });\r\n    }\r\n    handlerClose = () => {\r\n        let nullState = {};\r\n        Object.keys(this.state).map((key) => nullState[key] = '');\r\n        //this.saveDataStore({ ...nullState });\r\n\r\n        this.setState({ ...nullState });\r\n    }\r\n    componentDidMount() {\r\n        if (this.typeRequestServer === 'post') {\r\n            this.nullStateApp();\r\n        }\r\n    }\r\n    handlerSave = () => {\r\n\r\n        this.saveDataStore(this.state);\r\n\r\n        if (this.typeRequestServer === 'post') {\r\n            this.start_POST_RequestServer();\r\n        } else\r\n            if (this.typeRequestServer === 'put') {\r\n                this.start_PUT_RequestServer();\r\n            }\r\n        this.handlerClose();\r\n    }\r\n\r\n    handler = () => {}\r\n\r\n    render() {\r\n        return (\r\n            (this.typeRequestServer === 'put' && this.state.uid === \"\") ?\r\n                <WarningValueNotSelected\r\n                    classnameWarningValueNotSelected='WarningValueNotSelected'\r\n                    classnameWarningHelp=\"WarningHelp\"\r\n                    classnameButtonWarningHelp=\"ButtonWarningHelp\"\r\n                    classnameButtonWarningComeBack=\"ButtonWarningComeBack\"\r\n                    classnameWrapper=\"Wrapper\"\r\n                    onclickWarning={() => console.log(\"WarningValueNotSelected\")}\r\n                    to= {this.linkAddress}\r\n                />\r\n                : <ComponentEditWindow_EltypeClass\r\n                    classnameWrapper=\"Wrapper\"\r\n                    classnameWindow=\"WindowEditWindow\"\r\n                    classNameCheckbox ='beautiful-Checkbox'\r\n\r\n                    nameWindow={this.nameWindow}\r\n\r\n                    onchange={this.handlerOnChange}\r\n                    stateData={this.state}\r\n                    labels={this.labels}\r\n                    placeholders={this.placeholders}\r\n                    typeData={this.typeData}\r\n\r\n                    onclickYesButton={this.handlerSave}\r\n                    onclickNoButton={this.handlerClose}\r\n                    onmouseover={this.handler}\r\n                    onmouseleave={this.handler}\r\n\r\n                    to={this.linkAddress}\r\n                />\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditWindow_EltypeClass)\r\n\r\n"]},"metadata":{},"sourceType":"module"}