{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\containers\\\\baseViewType\\\\ViewType.js\";\nimport React, { useEffect } from 'react';\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport ConsoleButton from '../../components/ConsoleButton/ConsoleButton';\nimport TableList from '../../components/Table/TableList';\nimport HeaderDictionary from '../../components/Header/HeaderDictionary';\nimport AwaitLoading from '../../UserInterface/AwaitLoading/AwaitLoading';\nimport { startGetRequestServer, saveDataStore, saveTypeRequest, saveNameWindow } from '../../store/serverViewType/actions/actionViewType';\nimport { linkViewTypeEditWindow } from '../Navigation/Main';\nimport \"../../styles/AwaitLoading.scss\";\n\nfunction ViewType(props) {\n  const linkAddressWindowEdit = linkViewTypeEditWindow;\n  const linkAddressWindowDelete = '';\n  const dispatch = useDispatch();\n  /* оповещение на период ожидания ответа сервера*/\n\n  const stateLoading = useSelector(state => state.stateFlags.loading);\n  /*для заполнения таблицы */\n\n  const stateTable = useSelector(state => state.stateTable);\n  /*определение по какой строке таблицы был клик */\n\n  const handlerTableRowUID = (event, data) => {\n    event.preventDefault();\n    stateTable.map((obj, index) => {\n      if (obj.uid === data) {\n        console.log(\"index \", index);\n        dispatch(saveDataStore(obj));\n      }\n    });\n  };\n\n  const openWindow = (nameWindow, typeRequest) => {\n    dispatch(saveTypeRequest(typeRequest));\n    dispatch(saveNameWindow(nameWindow));\n  };\n\n  useEffect(() => {\n    console.log(' useEffect GET ');\n    dispatch(startGetRequestServer());\n  }, []);\n  const styles = {\n    loading: \"Loading\"\n  };\n\n  if (stateLoading) {\n    return /*#__PURE__*/React.createElement(AwaitLoading, {\n      classname: styles.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(HeaderDictionary, {\n    classname: \"\",\n    nameHeader: \"\\u0412\\u044B\\u0432\\u043E\\u0434 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 View Type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ConsoleButton, {\n    classname: \"\",\n    linkWindowEdit: linkAddressWindowEdit,\n    linkWindowConfirmDeleting: linkAddressWindowDelete,\n    name1: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C\",\n    title1: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C\",\n    onclick1: () => {\n      dispatch(startGetRequestServer());\n    },\n    name2: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\",\n    title2: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\",\n    onclick2: () => openWindow(\"Новое значение\", \"post\"),\n    name3: \"\\u0412\\u043D\\u0435\\u0441\\u0442\\u0438 \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u044F\",\n    title3: \"\\u0412\\u043D\\u0435\\u0441\\u0442\\u0438 \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u044F\",\n    onclick3: () => openWindow(\"Изменить значение\", \"put\"),\n    name4: \"\\u0422\\u043E\\u043B\\u044C\\u043A\\u043E \\u0430\\u043A\\u0442\\u0438\\u0432\\u043D\\u044B\\u0435\",\n    title4: \"\\u0422\\u043E\\u043B\\u044C\\u043A\\u043E \\u0430\\u043A\\u0442\\u0438\\u0432\\u043D\\u044B\\u0435\",\n    onclick4: () => console.log('click'),\n    name5: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\",\n    title5: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\",\n    onclick5: () => console.log('click'),\n    type: \"button\",\n    tabindex: \"-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TableList, {\n    columnName: Object.keys(stateTable[0]),\n    dataTable: stateTable,\n    onclick: (event, data) => handlerTableRowUID(event, data),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }));\n}\n\nexport default connect()(ViewType);","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/containers/baseViewType/ViewType.js"],"names":["React","useEffect","connect","useDispatch","useSelector","ConsoleButton","TableList","HeaderDictionary","AwaitLoading","startGetRequestServer","saveDataStore","saveTypeRequest","saveNameWindow","linkViewTypeEditWindow","ViewType","props","linkAddressWindowEdit","linkAddressWindowDelete","dispatch","stateLoading","state","stateFlags","loading","stateTable","handlerTableRowUID","event","data","preventDefault","map","obj","index","uid","console","log","openWindow","nameWindow","typeRequest","styles","Object","keys"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport ConsoleButton from '../../components/ConsoleButton/ConsoleButton';\r\nimport TableList from '../../components/Table/TableList';\r\nimport HeaderDictionary from '../../components/Header/HeaderDictionary';\r\nimport AwaitLoading from '../../UserInterface/AwaitLoading/AwaitLoading';\r\nimport {\r\n        startGetRequestServer,\r\n        saveDataStore,\r\n        saveTypeRequest,\r\n        saveNameWindow\r\n} from '../../store/serverViewType/actions/actionViewType';\r\nimport { linkViewTypeEditWindow } from '../Navigation/Main';\r\n\r\nimport \"../../styles/AwaitLoading.scss\";\r\n\r\nfunction ViewType(props) {\r\n\r\n    const linkAddressWindowEdit = linkViewTypeEditWindow;\r\n    const linkAddressWindowDelete = '';\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    /* оповещение на период ожидания ответа сервера*/\r\n    const stateLoading = useSelector(state => state.stateFlags.loading);\r\n\r\n    /*для заполнения таблицы */\r\n    const stateTable = useSelector(state => state.stateTable);\r\n\r\n    \r\n    /*определение по какой строке таблицы был клик */\r\n    const handlerTableRowUID = (event, data)=>{\r\n        event.preventDefault();\r\n        \r\n        stateTable.map( (obj, index) => {\r\n            if (obj.uid === data){\r\n                console.log(\"index \", index);\r\n                dispatch(saveDataStore(obj));\r\n            }\r\n        })\r\n    }\r\n    const openWindow = (nameWindow, typeRequest) => {\r\n        dispatch(saveTypeRequest(typeRequest));\r\n        dispatch(saveNameWindow(nameWindow));\r\n    }\r\n\r\n useEffect(() => {\r\n     console.log(' useEffect GET ');\r\n     dispatch(startGetRequestServer());\r\n    }, [])\r\n\r\n\r\n    const styles = { loading: \"Loading\" };\r\n\r\n    if (stateLoading) {\r\n        return <AwaitLoading\r\n                    classname={styles.loading}\r\n                />\r\n    } \r\n        return (\r\n            <div>\r\n                <HeaderDictionary\r\n                    classname=\"\"\r\n                    nameHeader=\"Вывод данных View Type\"\r\n                />\r\n\r\n                <ConsoleButton\r\n                    classname=\"\"\r\n\r\n                    linkWindowEdit={linkAddressWindowEdit}\r\n                    linkWindowConfirmDeleting={linkAddressWindowDelete}\r\n\r\n                    name1=\"Обновить\"\r\n                    title1=\"Обновить\"\r\n                    onclick1={() => { dispatch(startGetRequestServer()) }}\r\n\r\n\r\n                    name2=\"Добавить\"\r\n                    title2=\"Добавить\"\r\n                    onclick2={() => openWindow(\"Новое значение\", \"post\")}\r\n\r\n                    name3=\"Внести изменения\"\r\n                    title3=\"Внести изменения\"\r\n                    onclick3={() => openWindow(\"Изменить значение\", \"put\")}\r\n\r\n                    name4=\"Только активные\"\r\n                    title4=\"Только активные\"\r\n                    onclick4={() => console.log('click')}\r\n\r\n                    name5=\"Удалить\"\r\n                    title5=\"Удалить\"\r\n                    onclick5={() => console.log('click')}\r\n\r\n                    type=\"button\"\r\n                    tabindex=\"-1\"\r\n\r\n                />\r\n\r\n                <TableList\r\n                    columnName={Object.keys(stateTable[0])}\r\n                    dataTable={stateTable}\r\n                    onclick={(event, data) => handlerTableRowUID(event, data)}\r\n                />\r\n\r\n            </div>\r\n        )\r\n\r\n}\r\n\r\nexport default connect()(ViewType)\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}