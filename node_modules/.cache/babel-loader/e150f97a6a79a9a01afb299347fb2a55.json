{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\components\\\\Table\\\\RowTable.js\";\nimport React, { useRef, useEffect, useState } from 'react';\n\nfunction RowTable(props) {\n  const rowRef = useRef(null);\n  const Keys = Object.keys(props.dataRow);\n  const uid = props.dataRow.uid;\n\n  const inputChecked = data => data ? 'checked' : false;\n\n  const [flagFocus, setFlagFocus] = useState(false);\n  const [colorRow, setColorRow] = useState({\n    color: 'black'\n  });\n\n  const hendlerClick = event => {\n    props.onclick(event, uid);\n    setFlagFocus(!flagFocus);\n    setColorRow({\n      color: 'red'\n    });\n    console.log('REF ', rowRef.current);\n  };\n\n  useEffect(() => {\n    if (flagFocus === true) {\n      rowRef.current.focus();\n      setColorRow({\n        color: 'red'\n      });\n    }\n\n    return setColorRow({\n      color: 'black'\n    });\n  }, [flagFocus]);\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, props.number <= props.CountRow ? /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, \" \", props.number) : null, Keys.map((keyObj, index) => {\n    if (props.number <= props.CountRow) {\n      if (keyObj === 'name') {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          style: colorRow,\n          ref: rowRef,\n          key: index,\n          uid: props.dataRow.uid,\n          onClick: hendlerClick,\n          onContextMenu: hendlerClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 40\n          }\n        }, props.dataRow[keyObj]);\n      }\n\n      if (keyObj === 'isDeleted' || keyObj === 'isTemplate') {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: index,\n          uid: props.dataRow.uid,\n          onClick: hendlerClick,\n          onContextMenu: hendlerClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 40\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"checkbox\",\n          checked: inputChecked(props.dataRow[keyObj]),\n          disabled: \"disabled\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 37\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"fa fa-check\",\n          \"aria-hidden\": \"true\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 39\n          }\n        }));\n      }\n    }\n  }));\n}\n\nexport default RowTable;","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/components/Table/RowTable.js"],"names":["React","useRef","useEffect","useState","RowTable","props","rowRef","Keys","Object","keys","dataRow","uid","inputChecked","data","flagFocus","setFlagFocus","colorRow","setColorRow","color","hendlerClick","event","onclick","console","log","current","focus","number","CountRow","map","keyObj","index"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState} from 'react';\r\n\r\nfunction RowTable(props) {\r\n\r\n    const rowRef = useRef(null);\r\n    \r\n    const Keys = Object.keys(props.dataRow);\r\n    const uid = props.dataRow.uid;\r\n\r\n    const inputChecked = data => data ? 'checked' : false\r\n\r\n    const [flagFocus, setFlagFocus] = useState(false);\r\n    const [colorRow, setColorRow] = useState({ color: 'black' });\r\n\r\n    const hendlerClick = (event) => {\r\n        props.onclick(event, uid);\r\n        setFlagFocus(!flagFocus);\r\n        setColorRow({ color: 'red' });\r\n        console.log('REF ', rowRef.current )\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (flagFocus === true) {\r\n            rowRef.current.focus();\r\n            setColorRow({ color: 'red' });\r\n        }\r\n        return setColorRow({ color: 'black' });\r\n    }, [flagFocus])\r\n\r\n    return(\r\n\r\n        <tr >\r\n            {\r\n                (props.number <= props.CountRow)?\r\n                    <td> {props.number}</td>\r\n                    :null\r\n            }\r\n            \r\n            {\r\n                Keys.map((keyObj, index) => {\r\n\r\n                    if (props.number <= props.CountRow) {\r\n\r\n                            if (keyObj === 'name') {\r\n                                return <td\r\n                                    style={colorRow}\r\n                                    ref={rowRef}\r\n                                    key={index}\r\n                                    uid={props.dataRow.uid}\r\n                                    onClick={hendlerClick}\r\n                                    onContextMenu={hendlerClick}\r\n\r\n\r\n                                        >\r\n                                            {props.dataRow[keyObj]}\r\n\r\n                                </td>\r\n                            }\r\n\r\n                            if (keyObj === 'isDeleted' || keyObj === 'isTemplate') {\r\n                                return <td\r\n                                        key={index}\r\n                                        uid={props.dataRow.uid}\r\n                                        onClick={hendlerClick}\r\n                                        onContextMenu={hendlerClick}\r\n\r\n                                >\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        checked={inputChecked(props.dataRow[keyObj])}\r\n                                        disabled=\"disabled\"\r\n\r\n                                    /><span className=\"fa fa-check\" aria-hidden=\"true\"></span>\r\n                                </td>\r\n                            }\r\n                    }\r\n\r\n                    \r\n                }) \r\n            }\r\n        \r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default RowTable"]},"metadata":{},"sourceType":"module"}