{"ast":null,"code":"import { GET_REQUEST, POST_REQUEST, PUT_REQUEST, START_GET_REQUEST } from \"../types\";\n\nconst getRequestServer = dataFromServer => {\n  return {\n    type: GET_REQUEST,\n    payload: dataFromServer\n  };\n};\n\nconst postRequestServer = dataFromServer => {\n  return {\n    type: POST_REQUEST,\n    payload: dataFromServer\n  };\n};\n\nconst putRequestServer = (dataFromServer, oldStateTable) => {\n  let newStateTable = [];\n  oldStateTable.map((obj, index) => {\n    if (obj.uid == dataFromServer.uid) {\n      obj = dataFromServer;\n    }\n\n    newStateTable[index] = obj;\n  });\n  return {\n    type: PUT_REQUEST,\n    payload: newStateTable\n  };\n};\n\nconst startGetRequestServer = () => {\n  return {\n    type: START_GET_REQUEST\n  };\n};\n\nexport { getRequestServer, postRequestServer, putRequestServer, startGetRequestServer };","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/store/serverViewType/actions/actionViewType.js"],"names":["GET_REQUEST","POST_REQUEST","PUT_REQUEST","START_GET_REQUEST","getRequestServer","dataFromServer","type","payload","postRequestServer","putRequestServer","oldStateTable","newStateTable","map","obj","index","uid","startGetRequestServer"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,YAArB,EAAmCC,WAAnC,EAAgDC,iBAAhD,QAAwE,UAAxE;;AAEA,MAAMC,gBAAgB,GAAIC,cAAD,IAAkB;AAEvC,SAAO;AACHC,IAAAA,IAAI,EAAEN,WADH;AAEHO,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CAND;;AAQA,MAAMG,iBAAiB,GAAIH,cAAD,IAAkB;AAExC,SAAO;AACHC,IAAAA,IAAI,EAAEL,YADH;AAEHM,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CAND;;AAQA,MAAMI,gBAAgB,GAAG,CAACJ,cAAD,EAAiBK,aAAjB,KAAiC;AAEtD,MAAIC,aAAa,GAAG,EAApB;AACID,EAAAA,aAAa,CAACE,GAAd,CAAoB,CAACC,GAAD,EAAMC,KAAN,KAAe;AACnC,QAAID,GAAG,CAACE,GAAJ,IAAWV,cAAc,CAACU,GAA9B,EAAkC;AAC9BF,MAAAA,GAAG,GAAGR,cAAN;AACH;;AACAM,IAAAA,aAAa,CAACG,KAAD,CAAb,GAAuBD,GAAvB;AACJ,GALG;AAMJ,SAAO;AACHP,IAAAA,IAAI,EAAEJ,WADH;AAEHK,IAAAA,OAAO,EAAEI;AAFN,GAAP;AAIH,CAbD;;AAeA,MAAMK,qBAAqB,GAAG,MAAI;AAE1B,SAAO;AACPV,IAAAA,IAAI,EAAEH;AADC,GAAP;AAIP,CAND;;AAQA,SAAQC,gBAAR,EAA0BI,iBAA1B,EAA6CC,gBAA7C,EAA+DO,qBAA/D","sourcesContent":["import {GET_REQUEST, POST_REQUEST, PUT_REQUEST, START_GET_REQUEST} from \"../types\";\r\n\r\nconst getRequestServer = (dataFromServer)=>{\r\n    \r\n    return {\r\n        type: GET_REQUEST,\r\n        payload: dataFromServer\r\n    }\r\n}\r\n\r\nconst postRequestServer = (dataFromServer)=>{\r\n    \r\n    return {\r\n        type: POST_REQUEST,\r\n        payload: dataFromServer\r\n    }\r\n}\r\n\r\nconst putRequestServer = (dataFromServer, oldStateTable)=>{\r\n    \r\n    let newStateTable = [];\r\n        oldStateTable.map ( (obj, index) =>{\r\n        if (obj.uid == dataFromServer.uid){\r\n            obj = dataFromServer\r\n        }\r\n         newStateTable[index] = obj;   \r\n    })\r\n    return {\r\n        type: PUT_REQUEST,\r\n        payload: newStateTable\r\n    }\r\n}\r\n\r\nconst startGetRequestServer = ()=>{\r\n    \r\n        return {\r\n        type: START_GET_REQUEST\r\n    }\r\n    \r\n}\r\n\r\nexport {getRequestServer, postRequestServer, putRequestServer, startGetRequestServer}"]},"metadata":{},"sourceType":"module"}