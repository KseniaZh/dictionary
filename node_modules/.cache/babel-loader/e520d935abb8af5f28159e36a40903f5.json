{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\components\\\\Table\\\\CompareTableEltypeClass.js\";\nimport React from 'react';\nimport { connect, useSelector } from \"react-redux\";\nimport RowCompareTable from './RowCompareTable';\nimport ButtonSmall from '../../UserInterface/Buttons/Button/ButtonSmall';\nimport withHoverDescription from '../../hoc/withHoverDescription';\nimport DescriptionButton from '../../components/Description/DescriptionButton';\n\nfunction CompareTableEltypeClass(props) {\n  const stateDescription = useSelector(state => state.stateDescription); //все подсказки\n\n  const haveDescription = true; // логика всплывающей подсказки спрятана в hoc, обертка кнопок и подсказка реализованы в ButtonConsoleTable\n\n  const ButtonSort = withHoverDescription(ButtonSmall, DescriptionButton);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.classname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 25\n    }\n  }), props.columnName.map((name, index) => {\n    if (name === 'name' || name === 'isDeleted' || name === 'isTemplate') {\n      return /*#__PURE__*/React.createElement(\"th\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 40\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 45\n        }\n      }, \" \", name, \" \"), /*#__PURE__*/React.createElement(ButtonSort, {\n        icon: \"fa fa-indent\",\n        onclick: props.onclickSortCompare,\n        data: name,\n        name: \"SortList\",\n        classnameDescription: \"DescriptionButton\",\n        aboutDescription: stateDescription,\n        haveDescription: haveDescription,\n        positionDescription: \"top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 45\n        }\n      }));\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    id: \"tablebody\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }\n  }, props.dataTable.map((data, index) => /*#__PURE__*/React.createElement(RowCompareTable, {\n    dataRow: data,\n    key: index,\n    onclick: props.onclick,\n    onclickDelete: props.onclickDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 62\n    }\n  })))));\n}\n\nexport default CompareTableEltypeClass;","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/components/Table/CompareTableEltypeClass.js"],"names":["React","connect","useSelector","RowCompareTable","ButtonSmall","withHoverDescription","DescriptionButton","CompareTableEltypeClass","props","stateDescription","state","haveDescription","ButtonSort","classname","columnName","map","name","index","onclickSortCompare","dataTable","data","onclick","onclickDelete"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,WAAP,MAAwB,gDAAxB;AACA,OAAOC,oBAAP,MAAiC,gCAAjC;AACA,OAAOC,iBAAP,MAA8B,gDAA9B;;AAEA,SAASC,uBAAT,CAAiCC,KAAjC,EAAwC;AAEpC,QAAMC,gBAAgB,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,gBAAhB,CAApC,CAFoC,CAEmC;;AACvE,QAAME,eAAe,GAAG,IAAxB,CAHoC,CAKpC;;AACA,QAAMC,UAAU,GAAGP,oBAAoB,CAACD,WAAD,EAAcE,iBAAd,CAAvC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEE,KAAK,CAACK,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOIL,KAAK,CAACM,UAAN,CAAiBC,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAClC,QAAID,IAAI,KAAK,MAAT,IAAmBA,IAAI,KAAK,WAA5B,IAA2CA,IAAI,KAAK,YAAxD,EAAsE;AAClE,0BAAO;AACK,QAAA,GAAG,EAAEC,KADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAOD,IAAP,MAHL,eAKK,oBAAC,UAAD;AACI,QAAA,IAAI,EAAC,cADT;AAEI,QAAA,OAAO,EAAER,KAAK,CAACU,kBAFnB;AAGI,QAAA,IAAI,EAAEF,IAHV;AAII,QAAA,IAAI,EAAC,UAJT;AAKI,QAAA,oBAAoB,EAAC,mBALzB;AAMI,QAAA,gBAAgB,EAAEP,gBANtB;AAOI,QAAA,eAAe,EAAEE,eAPrB;AAQI,QAAA,mBAAmB,EAAC,KARxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALL,CAAP;AAiBH;AACJ,GApBD,CAPJ,CADF,CADN,eAkCM;AAAO,IAAA,EAAE,EAAC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEMH,KAAK,CAACW,SAAN,CAAgBJ,GAAhB,CAAoB,CAACK,IAAD,EAAOH,KAAP,kBAAiB,oBAAC,eAAD;AACO,IAAA,OAAO,EAAEG,IADhB;AAEO,IAAA,GAAG,EAAEH,KAFZ;AAGO,IAAA,OAAO,EAAET,KAAK,CAACa,OAHtB;AAIO,IAAA,aAAa,EAAEb,KAAK,CAACc,aAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArC,CAFN,CAlCN,CADJ,CADJ;AAmDH;;AAED,eAAef,uBAAf","sourcesContent":["import React from 'react';\r\nimport { connect, useSelector } from \"react-redux\";\r\n\r\nimport RowCompareTable from './RowCompareTable';\r\nimport ButtonSmall from '../../UserInterface/Buttons/Button/ButtonSmall';\r\nimport withHoverDescription from '../../hoc/withHoverDescription';\r\nimport DescriptionButton from '../../components/Description/DescriptionButton';\r\n\r\nfunction CompareTableEltypeClass(props) {\r\n\r\n    const stateDescription = useSelector(state => state.stateDescription); //все подсказки\r\n    const haveDescription = true;\r\n\r\n    // логика всплывающей подсказки спрятана в hoc, обертка кнопок и подсказка реализованы в ButtonConsoleTable\r\n    const ButtonSort = withHoverDescription(ButtonSmall, DescriptionButton); \r\n    \r\n    return(\r\n        <div className={props.classname}>\r\n            <table>\r\n                  <thead>\r\n                    <tr>\r\n                        <th>\r\n\r\n                            \r\n\r\n                        </th>\r\n                    {\r\n                        props.columnName.map((name, index) => {\r\n                            if (name === 'name' || name === 'isDeleted' || name === 'isTemplate') {\r\n                                return <th\r\n                                            key={index}\r\n                                        >\r\n                                            <div> {name} </div>\r\n\r\n                                            <ButtonSort\r\n                                                icon=\"fa fa-indent\"\r\n                                                onclick={props.onclickSortCompare}\r\n                                                data={name}\r\n                                                name=\"SortList\"\r\n                                                classnameDescription='DescriptionButton'\r\n                                                aboutDescription={stateDescription}\r\n                                                haveDescription={haveDescription}\r\n                                                positionDescription=\"top\"\r\n                                    />\r\n\r\n                                        </th>\r\n                            }\r\n                        })\r\n                    }\r\n                    </tr>\r\n                  </thead>\r\n\r\n                  <tbody id=\"tablebody\">\r\n                    {\r\n                        props.dataTable.map((data, index) => <RowCompareTable\r\n                                                                    dataRow={data}\r\n                                                                    key={index}\r\n                                                                    onclick={props.onclick}\r\n                                                                    onclickDelete={props.onclickDelete}\r\n                                                            />\r\n                                            )\r\n                    }\r\n                    </tbody>\r\n            </table>\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default CompareTableEltypeClass"]},"metadata":{},"sourceType":"module"}