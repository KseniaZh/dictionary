{"ast":null,"code":"import { takeEvery, select, put, call } from 'redux-saga/effects';\nimport { postRequestServer } from '../../store/serverViewType/actions/actionViewType';\nimport { url_POST } from \"../../constans/url\";\nimport { START_POST_REQUEST } from '../../store/windowCreateNewData/types';\nconst methodRequest = 'POST';\nexport function fetchDataPost(url, method, body) {\n  return fetch(url, {\n    method: method,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  }).then(response => response.json());\n}\nexport function* workerStart_POST_RequestServer() {\n  const stateSendServer = yield select(state => state.WindowCreateNewData.stateData);\n  stateSendServer.uid = Number(stateSendServer.uid);\n\n  try {\n    const data = yield call(fetchDataPost, url_POST, methodRequest, stateSendServer);\n    yield put(postRequestServer(data));\n  } catch (error) {\n    console.log('workerStart_POST_RequestServer error ', error);\n  }\n}\nexport function* watchStart_POST_RequestServer() {\n  yield takeEvery(START_POST_REQUEST, workerStart_POST_RequestServer);\n}","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/sagas/ViewType/sagasNewDataViewType.js"],"names":["takeEvery","select","put","call","postRequestServer","url_POST","START_POST_REQUEST","methodRequest","fetchDataPost","url","method","body","fetch","headers","Accept","JSON","stringify","then","response","json","workerStart_POST_RequestServer","stateSendServer","state","WindowCreateNewData","stateData","uid","Number","data","error","console","log","watchStart_POST_RequestServer"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,GAA5B,EAAiCC,IAAjC,QAA6C,oBAA7C;AACA,SAAQC,iBAAR,QAAgC,mDAAhC;AACA,SAAQC,QAAR,QAAuB,oBAAvB;AACA,SAAQC,kBAAR,QAAiC,uCAAjC;AAGA,MAAMC,aAAa,GAAG,MAAtB;AAEA,OAAO,SAASC,aAAT,CAAuBC,GAAvB,EAA4BC,MAA5B,EAAoCC,IAApC,EAAyC;AAC5C,SAAOC,KAAK,CAAEH,GAAF,EAAM;AAENC,IAAAA,MAAM,EAAEA,MAFF;AAGNG,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX,KAHH;AAONH,IAAAA,IAAI,EAAEI,IAAI,CAACC,SAAL,CAAeL,IAAf;AAPA,GAAN,CAAL,CASMM,IATN,CASWC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EATvB,CAAP;AAUH;AAED,OAAO,UAAUC,8BAAV,GAA0C;AAE7C,QAAMC,eAAe,GAAG,MAAMpB,MAAM,CAAEqB,KAAK,IAAIA,KAAK,CAACC,mBAAN,CAA0BC,SAArC,CAApC;AAEAH,EAAAA,eAAe,CAACI,GAAhB,GAAsBC,MAAM,CAACL,eAAe,CAACI,GAAjB,CAA5B;;AAEA,MAAI;AAEA,UAAME,IAAI,GAAG,MAAMxB,IAAI,CAACK,aAAD,EAAgBH,QAAhB,EAA0BE,aAA1B,EAAyCc,eAAzC,CAAvB;AAEA,UAAMnB,GAAG,CAACE,iBAAiB,CAACuB,IAAD,CAAlB,CAAT;AAEH,GAND,CAME,OAAOC,KAAP,EAAc;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ,EAAqDF,KAArD;AACF;AAEJ;AAED,OAAO,UAAUG,6BAAV,GAAyC;AAE5C,QAAM/B,SAAS,CAACM,kBAAD,EAAqBc,8BAArB,CAAf;AAEH","sourcesContent":["import { takeEvery, select, put, call } from 'redux-saga/effects';\r\nimport {postRequestServer} from '../../store/serverViewType/actions/actionViewType';\r\nimport {url_POST} from \"../../constans/url\"\r\nimport {START_POST_REQUEST} from '../../store/windowCreateNewData/types';\r\n\r\n\r\nconst methodRequest = 'POST';\r\n\r\nexport function fetchDataPost(url, method, body){\r\n    return fetch( url,{\r\n                \r\n                method: method,\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                  },\r\n                body: JSON.stringify(body)\r\n                })\r\n                .then(response => response.json())\r\n}\r\n\r\nexport function* workerStart_POST_RequestServer(){\r\n    \r\n    const stateSendServer = yield select( state => state.WindowCreateNewData.stateData);\r\n        \r\n    stateSendServer.uid = Number(stateSendServer.uid);\r\n    \r\n    try {\r\n        \r\n        const data = yield call(fetchDataPost, url_POST, methodRequest, stateSendServer);\r\n        \r\n        yield put(postRequestServer(data));\r\n         \r\n    } catch (error) {\r\n       console.log('workerStart_POST_RequestServer error ', error);\r\n    }\r\n \r\n}\r\n\r\nexport function* watchStart_POST_RequestServer(){\r\n    \r\n    yield takeEvery(START_POST_REQUEST, workerStart_POST_RequestServer)\r\n\r\n}"]},"metadata":{},"sourceType":"module"}