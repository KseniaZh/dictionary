{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\components\\\\Table\\\\RowTable.js\";\nimport React from 'react';\n\nfunction RowTable(props) {\n  const Keys = Object.keys(props.dataRow);\n  const uid = props.dataRow.uid;\n\n  const inputChecked = data => {\n    if (data === true) {\n      return 'checked';\n    } else {\n      return false;\n    }\n\n    ;\n  };\n\n  const renderCountRow = (countRow, countList) => {\n    props.dataTable.map((data, index) => {\n      if (index < countRow) {\n        return /*#__PURE__*/React.createElement(RowTable, {\n          dataRow: data,\n          key: index,\n          number: index + 1,\n          onclick: props.onclick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 21\n          }\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \" \", props.number), Keys.map((keyObj, index) => {\n    if (keyObj === 'name') {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: index,\n        uid: props.dataRow.uid,\n        onClick: event => props.onclick(event, uid),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 32\n        }\n      }, props.dataRow[keyObj]);\n    }\n\n    if (keyObj === 'isDeleted' || keyObj === 'isTemplate') {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: index,\n        uid: props.dataRow.uid,\n        onClick: event => props.onclick(event, uid),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 32\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: inputChecked(props.dataRow[keyObj]),\n        disabled: \"disabled\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"fa fa-check\",\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 31\n        }\n      }));\n    }\n  }));\n}\n\nexport default RowTable;","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/components/Table/RowTable.js"],"names":["React","RowTable","props","Keys","Object","keys","dataRow","uid","inputChecked","data","renderCountRow","countRow","countList","dataTable","map","index","onclick","number","keyObj","event"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,CAAmBC,KAAnB,EAAyB;AAErB,QAAMC,IAAI,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAK,CAACI,OAAlB,CAAb;AACA,QAAMC,GAAG,GAAGL,KAAK,CAACI,OAAN,CAAcC,GAA1B;;AAEA,QAAMC,YAAY,GAAGC,IAAI,IAAI;AACzB,QAAIA,IAAI,KAAK,IAAb,EAAmB;AACf,aAAO,SAAP;AACH,KAFD,MAEO;AACH,aAAO,KAAP;AACH;;AAAA;AACJ,GAND;;AAOA,QAAMC,cAAc,GAAG,CAACC,QAAD,EAAWC,SAAX,KAAyB;AAC5CV,IAAAA,KAAK,CAACW,SAAN,CAAgBC,GAAhB,CAAoB,CAACL,IAAD,EAAOM,KAAP,KAAiB;AACjC,UAAIA,KAAK,GAAGJ,QAAZ,EAAsB;AAElB,4BAEI,oBAAC,QAAD;AACI,UAAA,OAAO,EAAEF,IADb;AAEI,UAAA,GAAG,EAAEM,KAFT;AAGI,UAAA,MAAM,EAAEA,KAAK,GAAG,CAHpB;AAII,UAAA,OAAO,EAAEb,KAAK,CAACc,OAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAQH;AACJ,KAZD;AAcH,GAfD;;AAiBA,sBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMd,KAAK,CAACe,MAAZ,CADJ,EAGQd,IAAI,CAACW,GAAL,CAAS,CAACI,MAAD,EAASH,KAAT,KAAmB;AAExB,QAAIG,MAAM,KAAK,MAAf,EAAuB;AACnB,0BAAO;AACK,QAAA,GAAG,EAAEH,KADV;AAEK,QAAA,GAAG,EAAEb,KAAK,CAACI,OAAN,CAAcC,GAFxB;AAGK,QAAA,OAAO,EAAGY,KAAD,IAAWjB,KAAK,CAACc,OAAN,CAAcG,KAAd,EAAqBZ,GAArB,CAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKML,KAAK,CAACI,OAAN,CAAcY,MAAd,CALN,CAAP;AAQH;;AACD,QAAIA,MAAM,KAAK,WAAX,IAA0BA,MAAM,KAAK,YAAzC,EAAuD;AACnD,0BAAO;AACH,QAAA,GAAG,EAAEH,KADF;AAEH,QAAA,GAAG,EAAEb,KAAK,CAACI,OAAN,CAAcC,GAFhB;AAGH,QAAA,OAAO,EAAGY,KAAD,IAAWjB,KAAK,CAACc,OAAN,CAAcG,KAAd,EAAqBZ,GAArB,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKH;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,OAAO,EAAEC,YAAY,CAACN,KAAK,CAACI,OAAN,CAAcY,MAAd,CAAD,CAFzB;AAGI,QAAA,QAAQ,EAAC,UAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALG,eAUD;AAAM,QAAA,SAAS,EAAC,aAAhB;AAA8B,uBAAY,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVC,CAAP;AAYH;AACJ,GA1BD,CAHR,CAFJ;AAoCH;;AAED,eAAejB,QAAf","sourcesContent":["import React from 'react';\r\n\r\nfunction RowTable (props){\r\n    \r\n    const Keys = Object.keys(props.dataRow);\r\n    const uid = props.dataRow.uid;\r\n\r\n    const inputChecked = data => {\r\n        if (data === true) {\r\n            return 'checked'\r\n        } else {\r\n            return false\r\n        };\r\n    }\r\n    const renderCountRow = (countRow, countList) => {\r\n        props.dataTable.map((data, index) => {\r\n            if (index < countRow) {\r\n\r\n                return (\r\n\r\n                    <RowTable\r\n                        dataRow={data}\r\n                        key={index}\r\n                        number={index + 1}\r\n                        onclick={props.onclick}\r\n                    />)\r\n            }\r\n        }\r\n        )\r\n    }\r\n    \r\n    return(\r\n        \r\n        <tr>\r\n            <td> {props.number}</td>\r\n            {\r\n                Keys.map((keyObj, index) => {\r\n\r\n                    if (keyObj === 'name') {\r\n                        return <td\r\n                                    key={index}\r\n                                    uid={props.dataRow.uid}\r\n                                    onClick={(event) => props.onclick(event, uid)}\r\n                                >\r\n                                    {props.dataRow[keyObj]}\r\n\r\n                        </td>\r\n                    }\r\n                    if (keyObj === 'isDeleted' || keyObj === 'isTemplate') {\r\n                        return <td\r\n                            key={index}\r\n                            uid={props.dataRow.uid}\r\n                            onClick={(event) => props.onclick(event, uid)}\r\n                        >\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                checked={inputChecked(props.dataRow[keyObj])}\r\n                                disabled=\"disabled\"\r\n\r\n                            /><span className=\"fa fa-check\" aria-hidden=\"true\"></span>\r\n                        </td>\r\n                    }\r\n                }) \r\n            }\r\n        \r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default RowTable"]},"metadata":{},"sourceType":"module"}