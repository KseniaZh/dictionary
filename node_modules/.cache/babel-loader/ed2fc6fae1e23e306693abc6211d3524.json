{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\containers\\\\User\\\\CompareUser.js\";\nimport React, { useEffect } from 'react';\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport ButtonLinkSmallNotMouse from '../../UserInterface/Buttons/Button/ButtonLinkSmallNotMouse';\nimport ConsoleButton from '../../components/ConsoleButton/ConsoleButton';\nimport HeaderCompare from '../../components/Header/HeaderCompare';\nimport CompareTableList from '../../components/Table/CompareTableList';\nimport WarningCompare from '../../components/WarningWindow/WarningCompare';\nimport ContextMenuCompare from '../../components/ContextMenuWindow/ContextMenuCompare';\nimport { saveDataStore } from '../../store/BasisReport/actions/actionFocusData';\nimport { saveTypeRequest, saveNameWindow } from '../../store/User/actions/actionEditWindowUser';\nimport { changeAdressOpenTable } from '../../store/User/actions/actionsLinksUser';\nimport { clearCompareArr, deleteDataCompareArr } from '../../store/User/actions/actionsCompareUser';\nimport { addDescription } from \"../../store/Description/actionsDescription\";\nimport { tablebodyBackgroundClear } from '../../functions/tablebodyBackgroundClear';\nimport withContextMenuWindow from '../../hoc/withContextMenuWindow';\n\nfunction CompareUser(props) {\n  const dispatch = useDispatch();\n  const compareArr = useSelector(state => state.stateCompareUser); // массив строк, избранных для сравнения\n\n  const focusData = useSelector(state => state.focusData); // фокус. запомнить данные выбранной строки\n\n  const links = useSelector(state => state.stateLinksUser); //список ссылок для переходов между окнами\n\n  const visibleNameСolumns = useSelector(state => state.stateInputEditWindowUser.nameСolumnsTableList); // наименования ключей для заполнения колонок в таблице\n\n  const typeDataColumns = useSelector(state => state.stateInputEditWindowUser.typeData); // тип данных значений, заполняющих колонки\n\n  const flagEmployDescription = useSelector(state => state.stateFlagsAll.employDescriptionAll); // разрешен ли пользователем показ подсказок\n\n  const arrDescription = useSelector(state => state.stateDescription); // массив подсказок из store (пока без кнопок консоли, заполнится после рединга)\n\n  const hendlerOpenWindow = (nameWindow, typeRequest) => {\n    dispatch(saveTypeRequest(typeRequest));\n    dispatch(saveNameWindow(nameWindow));\n  };\n\n  const hendlerClearCompareArr = () => {\n    dispatch(clearCompareArr()); // изменяем ссылку перенаправления на активную таблицу для закрытия вспомогательных окон:\n\n    dispatch(changeAdressOpenTable(links.linkBase));\n  };\n\n  const hendlerDeleteContext = () => {\n    dispatch(deleteDataCompareArr(focusData, compareArr)); // удалить из массива сравнений\n    //удаляем из списка сравнений и поэтому обнуляем хранение фокуса:\n\n    dispatch(saveDataStore({\n      uid: \"\",\n      name: \"\",\n      isDeleted: false,\n      isTemplate: false\n    }));\n    tablebodyBackgroundClear();\n  };\n\n  const hendlerCloseWindow = () => {\n    //закрываем окно и поэтому обнуляем хранение фокуса:\n    dispatch(saveDataStore({\n      uid: \"\",\n      name: \"\",\n      isDeleted: false,\n      isTemplate: false\n    })); // изменяем ссылку перенаправления на активную таблицу для закрытия вспомогательных окон:\n\n    dispatch(changeAdressOpenTable(links.linkBase));\n  };\n\n  const stateConsoleButton = [{\n    text: \"Внести изменения\",\n    name: 'edit',\n    icon: \"fa fa-pencil-square-o fa-lg\",\n    onclick: () => hendlerOpenWindow(\"Внести изменения\", \"put\"),\n    link: links.linkEditWindow\n  }, {\n    text: \"Удалить из базы данных\",\n    name: 'delete',\n    icon: \"fa fa-times fa-lg\",\n    onclick: () => {},\n    link: links.linkWindowConfirmDeleting\n  }, {\n    text: \"Убрать из сравнения\",\n    name: 'deleteList',\n    icon: \"fa fa-times-circle\",\n    onclick: hendlerDeleteContext,\n    data: focusData,\n    link: links.linkCompare\n  }, {\n    text: \"Очистить список сравнений\",\n    name: 'clear',\n    icon: \"fa fa-minus-square-o\",\n    onclick: hendlerClearCompareArr,\n    link: links.linkBase\n  }, {\n    text: \"Назад\",\n    name: 'back',\n    icon: \"fa fa-share\",\n    onclick: hendlerCloseWindow,\n    link: links.linkBase\n  }];\n\n  const haveDescription = dataStateConsoleButton => {\n    //добавляем подсказки на кнопки консоли\n    if (flagEmployDescription === true) {\n      let aboutDescription = {};\n      dataStateConsoleButton.map(obj => {\n        aboutDescription[obj.name] = [obj.text];\n      });\n      dispatch(addDescription(aboutDescription, arrDescription));\n    }\n\n    ;\n  }; //логика добавления контекстного меню через hoc\n\n\n  const CompareTableWithContextMenu = withContextMenuWindow(CompareTableList, ContextMenuCompare, stateConsoleButton, \"ContextMenuWindow\");\n  useEffect(() => {\n    haveDescription(stateConsoleButton);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"DataBase__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"DataBase__header__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ConsoleButton, {\n    classnameWrapper: \"DataBase__header__console\",\n    stateConsoleButton: stateConsoleButton,\n    classnameDescription: \"DescriptionButton\",\n    tabindex: \"-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(HeaderCompare, {\n    classname: \"DataBase__header__header\",\n    nameBase: \"\\u041A\\u043B\\u0430\\u0441\\u0441\\u044B \\u0434\\u043B\\u044F \\u0422\\u0438\\u043F\\u043E\\u0432 \\u0441\\u0432\\u044F\\u0437\\u0435\\u0439 \\u0438 \\u0422\\u0438\\u043F\\u043E\\u0432 \\u0441\\u0443\\u0449\\u043D\\u043E\\u0441\\u0442\\u0435\\u0439\",\n    nameHeader: \"\\u0421\\u0440\\u0430\\u0432\\u043D\\u0438\\u0442\\u044C \\u0438\\u0437\\u0431\\u0440\\u0430\\u043D\\u043D\\u043E\\u0435\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ButtonLinkSmallNotMouse, {\n    to: links.linkBase,\n    icon: \"fa fa-share\",\n    onclick: hendlerCloseWindow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  })), compareArr.length > 1 ? /*#__PURE__*/React.createElement(CompareTableWithContextMenu, {\n    classname: \"DataBase__table__container\",\n    dataTable: compareArr,\n    onclickDelete: hendlerDeleteContext,\n    visibleNameСolumns: visibleNameСolumns,\n    typeDataColumns: typeDataColumns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(WarningCompare, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 23\n    }\n  }));\n}\n\nexport default connect()(CompareUser);","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/containers/User/CompareUser.js"],"names":["React","useEffect","connect","useDispatch","useSelector","ButtonLinkSmallNotMouse","ConsoleButton","HeaderCompare","CompareTableList","WarningCompare","ContextMenuCompare","saveDataStore","saveTypeRequest","saveNameWindow","changeAdressOpenTable","clearCompareArr","deleteDataCompareArr","addDescription","tablebodyBackgroundClear","withContextMenuWindow","CompareUser","props","dispatch","compareArr","state","stateCompareUser","focusData","links","stateLinksUser","visibleNameСolumns","stateInputEditWindowUser","nameСolumnsTableList","typeDataColumns","typeData","flagEmployDescription","stateFlagsAll","employDescriptionAll","arrDescription","stateDescription","hendlerOpenWindow","nameWindow","typeRequest","hendlerClearCompareArr","linkBase","hendlerDeleteContext","uid","name","isDeleted","isTemplate","hendlerCloseWindow","stateConsoleButton","text","icon","onclick","link","linkEditWindow","linkWindowConfirmDeleting","data","linkCompare","haveDescription","dataStateConsoleButton","aboutDescription","map","obj","CompareTableWithContextMenu","length"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport ButtonLinkSmallNotMouse from '../../UserInterface/Buttons/Button/ButtonLinkSmallNotMouse';\r\nimport ConsoleButton from '../../components/ConsoleButton/ConsoleButton';\r\nimport HeaderCompare from '../../components/Header/HeaderCompare';\r\nimport CompareTableList from '../../components/Table/CompareTableList';\r\nimport WarningCompare from '../../components/WarningWindow/WarningCompare';\r\nimport ContextMenuCompare from '../../components/ContextMenuWindow/ContextMenuCompare';\r\n\r\nimport {\r\n    saveDataStore\r\n} from '../../store/BasisReport/actions/actionFocusData';\r\nimport {\r\n    saveTypeRequest,\r\n    saveNameWindow\r\n} from '../../store/User/actions/actionEditWindowUser';\r\n\r\nimport { changeAdressOpenTable } from '../../store/User/actions/actionsLinksUser';\r\n\r\nimport {\r\n    clearCompareArr,\r\n    deleteDataCompareArr\r\n} from '../../store/User/actions/actionsCompareUser';\r\n\r\nimport { addDescription } from \"../../store/Description/actionsDescription\";\r\n\r\nimport { tablebodyBackgroundClear } from '../../functions/tablebodyBackgroundClear';\r\n\r\nimport withContextMenuWindow from '../../hoc/withContextMenuWindow';\r\n\r\n\r\nfunction CompareUser(props) {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const compareArr = useSelector(state => state.stateCompareUser); // массив строк, избранных для сравнения\r\n\r\n    const focusData = useSelector(state => state.focusData); // фокус. запомнить данные выбранной строки\r\n\r\n    const links = useSelector(state => state.stateLinksUser); //список ссылок для переходов между окнами\r\n\r\n    const visibleNameСolumns = useSelector(state => state.stateInputEditWindowUser.nameСolumnsTableList); // наименования ключей для заполнения колонок в таблице\r\n\r\n    const typeDataColumns = useSelector(state => state.stateInputEditWindowUser.typeData); // тип данных значений, заполняющих колонки\r\n\r\n    const flagEmployDescription = useSelector(state => state.stateFlagsAll.employDescriptionAll) // разрешен ли пользователем показ подсказок\r\n\r\n    const arrDescription = useSelector(state => state.stateDescription); // массив подсказок из store (пока без кнопок консоли, заполнится после рединга)\r\n\r\n\r\n    const hendlerOpenWindow = (nameWindow, typeRequest) => {\r\n        dispatch(saveTypeRequest(typeRequest));\r\n        dispatch(saveNameWindow(nameWindow));\r\n    }\r\n\r\n    const hendlerClearCompareArr = () => {\r\n        dispatch(clearCompareArr());\r\n        // изменяем ссылку перенаправления на активную таблицу для закрытия вспомогательных окон:\r\n        dispatch(changeAdressOpenTable(links.linkBase));\r\n    }\r\n    \r\n    const hendlerDeleteContext = () => {\r\n        dispatch(deleteDataCompareArr(focusData, compareArr)); // удалить из массива сравнений\r\n        //удаляем из списка сравнений и поэтому обнуляем хранение фокуса:\r\n        dispatch(saveDataStore({\r\n                                uid: \"\",\r\n                                name: \"\",\r\n                                isDeleted: false,\r\n                                isTemplate: false\r\n                            })\r\n                            );\r\n        tablebodyBackgroundClear();\r\n    }\r\n\r\n    const hendlerCloseWindow = () => {\r\n            //закрываем окно и поэтому обнуляем хранение фокуса:\r\n            dispatch(saveDataStore({\r\n                                        uid: \"\",\r\n                                        name: \"\",\r\n                                        isDeleted: false,\r\n                                        isTemplate: false\r\n                                    })\r\n                        );\r\n            // изменяем ссылку перенаправления на активную таблицу для закрытия вспомогательных окон:\r\n            dispatch(changeAdressOpenTable(links.linkBase));\r\n    }\r\n\r\n\r\n    const stateConsoleButton = [\r\n\r\n        {\r\n            text: \"Внести изменения\",\r\n            name: 'edit',\r\n            icon: \"fa fa-pencil-square-o fa-lg\",\r\n            onclick: () => hendlerOpenWindow(\"Внести изменения\", \"put\"),\r\n            link: links.linkEditWindow\r\n        },\r\n        {\r\n            text: \"Удалить из базы данных\",\r\n            name: 'delete',\r\n            icon: \"fa fa-times fa-lg\",\r\n            onclick: () => { },\r\n            link: links.linkWindowConfirmDeleting\r\n        },\r\n        {\r\n            text: \"Убрать из сравнения\",\r\n            name: 'deleteList',\r\n            icon: \"fa fa-times-circle\",\r\n            onclick: hendlerDeleteContext,\r\n            data: focusData,\r\n            link: links.linkCompare\r\n        },\r\n        {\r\n            text: \"Очистить список сравнений\",\r\n            name: 'clear',\r\n            icon: \"fa fa-minus-square-o\",\r\n            onclick: hendlerClearCompareArr,\r\n            link: links.linkBase\r\n        },\r\n        {\r\n            text: \"Назад\",\r\n            name: 'back',\r\n            icon: \"fa fa-share\",\r\n            onclick: hendlerCloseWindow,\r\n            link: links.linkBase\r\n        }\r\n    ];\r\n\r\n    const haveDescription = (dataStateConsoleButton) => {\r\n        //добавляем подсказки на кнопки консоли\r\n        if (flagEmployDescription === true) {\r\n            let aboutDescription = {};\r\n            dataStateConsoleButton.map((obj) => {\r\n                aboutDescription[obj.name] = [obj.text];\r\n            });\r\n            dispatch(addDescription(aboutDescription, arrDescription));\r\n        };\r\n    }\r\n\r\n    //логика добавления контекстного меню через hoc\r\n    const CompareTableWithContextMenu = withContextMenuWindow(CompareTableList, ContextMenuCompare, stateConsoleButton, \"ContextMenuWindow\");\r\n\r\n    useEffect(() => {\r\n        haveDescription(stateConsoleButton);\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <div className=\"DataBase__container\">\r\n\r\n            <div className=\"DataBase__header__container\">\r\n\r\n                <ConsoleButton\r\n                    classnameWrapper=\"DataBase__header__console\"\r\n                    stateConsoleButton={stateConsoleButton}\r\n                    classnameDescription='DescriptionButton'\r\n                    tabindex=\"-1\"\r\n                />\r\n\r\n                <HeaderCompare\r\n                    classname=\"DataBase__header__header\"\r\n                    nameBase=\"Классы для Типов связей и Типов сущностей\"\r\n                    nameHeader=\"Сравнить избранное\"\r\n                />\r\n\r\n                <ButtonLinkSmallNotMouse\r\n                    to={links.linkBase}\r\n                    icon=\"fa fa-share\"\r\n                    onclick={hendlerCloseWindow}\r\n                />\r\n            </div>\r\n            {\r\n                (compareArr.length > 1) ?\r\n                    <CompareTableWithContextMenu\r\n                        classname=\"DataBase__table__container\"\r\n                        dataTable={compareArr}\r\n                        onclickDelete={hendlerDeleteContext}\r\n                        visibleNameСolumns={visibleNameСolumns}\r\n                        typeDataColumns={typeDataColumns}\r\n                    />\r\n                    : <WarningCompare />\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect()(CompareUser)"]},"metadata":{},"sourceType":"module"}