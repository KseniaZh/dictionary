{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\UserInterface\\\\InputAuth\\\\InputAuth.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport ButtonSmall from '../Buttons/Button/ButtonSmall';\n\nfunction InputAuth(props) {\n  const ref = useRef(props.value);\n  const autoFocus = props.autofocus;\n  const nameInput = props.id;\n  const flagInput = props.flagInput;\n  useEffect(() => {\n    if (autoFocus === true) {\n      ref.current.focus();\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, props.label), /*#__PURE__*/React.createElement(\"input\", {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: event => props.onchange(event, nameInput),\n    onFocus: () => props.onfocus(nameInput, flagInput),\n    value: props.value,\n    tabIndex: props.tabindex,\n    disabled: props.disabled,\n    ref: ref,\n    autoComplete: \"off\",\n    style: props.styles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ButtonSmall, {\n    onclick: props.onclick,\n    data: nameInput,\n    icon: \"fa fa-times\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default InputAuth;","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/UserInterface/InputAuth/InputAuth.js"],"names":["React","useEffect","useRef","useState","ButtonSmall","InputAuth","props","ref","value","autoFocus","autofocus","nameInput","id","flagInput","current","focus","label","type","placeholder","event","onchange","onfocus","tabindex","disabled","styles","onclick"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAkD,OAAlD;AACA,OAAOC,WAAP,MAAwB,+BAAxB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAAyB;AAErB,QAAMC,GAAG,GAAGL,MAAM,CAACI,KAAK,CAACE,KAAP,CAAlB;AACA,QAAMC,SAAS,GAAGH,KAAK,CAACI,SAAxB;AACA,QAAMC,SAAS,GAAGL,KAAK,CAACM,EAAxB;AACA,QAAMC,SAAS,GAAGP,KAAK,CAACO,SAAxB;AAGAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,SAAS,KAAK,IAAlB,EAAwB;AACpBF,MAAAA,GAAG,CAACO,OAAJ,CAAYC,KAAZ;AACH;AACJ,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AACQ,IAAA,OAAO,EAAET,KAAK,CAACM,EADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKN,KAAK,CAACU,KAHX,CAFJ,eAQI;AACI,IAAA,EAAE,EAAEV,KAAK,CAACM,EADd;AAEI,IAAA,IAAI,EAAEN,KAAK,CAACW,IAFhB;AAGI,IAAA,WAAW,EAAEX,KAAK,CAACY,WAHvB;AAII,IAAA,QAAQ,EAAGC,KAAD,IAAWb,KAAK,CAACc,QAAN,CAAeD,KAAf,EAAsBR,SAAtB,CAJzB;AAKI,IAAA,OAAO,EAAE,MAAML,KAAK,CAACe,OAAN,CAAcV,SAAd,EAAyBE,SAAzB,CALnB;AAMI,IAAA,KAAK,EAAEP,KAAK,CAACE,KANjB;AAOI,IAAA,QAAQ,EAAEF,KAAK,CAACgB,QAPpB;AAQI,IAAA,QAAQ,EAAEhB,KAAK,CAACiB,QARpB;AASI,IAAA,GAAG,EAAEhB,GATT;AAUI,IAAA,YAAY,EAAC,KAVjB;AAWI,IAAA,KAAK,EAAED,KAAK,CAACkB,MAXjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,eAsBI,oBAAC,WAAD;AACI,IAAA,OAAO,EAAElB,KAAK,CAACmB,OADnB;AAEI,IAAA,IAAI,EAAEd,SAFV;AAGI,IAAA,IAAI,EAAC,aAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBJ,CADJ;AA+BH;;AAED,eAAeN,SAAf","sourcesContent":["import React, { useEffect, useRef, useState} from 'react';\r\nimport ButtonSmall from '../Buttons/Button/ButtonSmall';\r\n\r\nfunction InputAuth(props){\r\n    \r\n    const ref = useRef(props.value);\r\n    const autoFocus = props.autofocus;\r\n    const nameInput = props.id;\r\n    const flagInput = props.flagInput;\r\n\r\n\r\n    useEffect(() => {\r\n        if (autoFocus === true) {\r\n            ref.current.focus();\r\n        }\r\n    }, []);\r\n        \r\n    return(\r\n        <div>\r\n        \r\n            <label \r\n                    htmlFor={props.id}\r\n            >\r\n                {props.label}\r\n            </label>\r\n        \r\n            <input\r\n                id={props.id}\r\n                type={props.type}\r\n                placeholder={props.placeholder}\r\n                onChange={(event) => props.onchange(event, nameInput)}\r\n                onFocus={() => props.onfocus(nameInput, flagInput)}\r\n                value={props.value}\r\n                tabIndex={props.tabindex}\r\n                disabled={props.disabled}\r\n                ref={ref}\r\n                autoComplete='off'\r\n                style={props.styles}\r\n            />\r\n\r\n            <ButtonSmall\r\n                onclick={props.onclick}\r\n                data={nameInput}\r\n                icon=\"fa fa-times\"\r\n            />\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputAuth"]},"metadata":{},"sourceType":"module"}