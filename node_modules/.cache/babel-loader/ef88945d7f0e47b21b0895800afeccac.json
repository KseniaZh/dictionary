{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\components\\\\FooterTable\\\\CountRowForPage.js\";\nimport React from 'react';\nimport ButtonSmall from '../../UserInterface/Buttons/Button/ButtonSmall';\nimport withHoverDescription from '../../hoc/withHoverDescription';\nimport DescriptionButton from '../../components/Description/DescriptionButton';\nimport Input from '../../UserInterface/Input/Input';\n\nfunction CountRowForPage(props) {\n  // логика всплывающей подсказки спрятана в hoc, обертка кнопок и подсказка реализованы в ButtonConsoleTable\n  const ButtonWithHoverDescription = withHoverDescription(ButtonSmall, DescriptionButton);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, props.dataButtonOpenInput.flag ? /*#__PURE__*/React.createElement(Input, {\n    id: \"inputCountRow\",\n    type: \"number\",\n    label: \"\\u0421\\u0442\\u0440\\u043E\\u043A \\u043D\\u0430 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0435 : \",\n    onchange: props.onchangeInputValue,\n    value: props.inputValue,\n    tabindex: \"-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 27\n    }\n  }, \" \\u0421\\u0442\\u0440\\u043E\\u043A \\u043D\\u0430 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0435 : \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 53\n    }\n  }, \" \", props.CountRow, \" \"), \" \\u0438\\u0437 \", props.length)), /*#__PURE__*/React.createElement(ButtonWithHoverDescription, {\n    className: props.classname,\n    onclick: props.onclickButtonInputOpen,\n    tabindex: \"-1\",\n    icon: props.dataButtonOpenInput.icon,\n    name: props.dataButtonOpenInput.name,\n    classnameDescription: \"DescriptionButton\",\n    positionDescription: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }));\n}\n\nexport default CountRowForPage;","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/components/FooterTable/CountRowForPage.js"],"names":["React","ButtonSmall","withHoverDescription","DescriptionButton","Input","CountRowForPage","props","ButtonWithHoverDescription","dataButtonOpenInput","flag","onchangeInputValue","inputValue","CountRow","length","classname","onclickButtonInputOpen","icon","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,gDAAxB;AACA,OAAOC,oBAAP,MAAiC,gCAAjC;AACA,OAAOC,iBAAP,MAA8B,gDAA9B;AACA,OAAOC,KAAP,MAAkB,iCAAlB;;AAGA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAE5B;AACA,QAAMC,0BAA0B,GAAGL,oBAAoB,CAACD,WAAD,EAAcE,iBAAd,CAAvD;AAEA,sBAEI,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEUG,KAAK,CAACE,mBAAN,CAA0BC,IAA1B,gBACI,oBAAC,KAAD;AACI,IAAA,EAAE,EAAC,eADP;AAEI,IAAA,IAAI,EAAC,QAFT;AAGI,IAAA,KAAK,EAAC,iGAHV;AAII,IAAA,QAAQ,EAAEH,KAAK,CAACI,kBAJpB;AAKI,IAAA,KAAK,EAAEJ,KAAK,CAACK,UALjB;AAMI,IAAA,QAAQ,EAAC,IANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,gBASM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sHAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAQL,KAAK,CAACM,QAAd,MAA1B,oBAA8DN,KAAK,CAACO,MAApE,CAXhB,CADF,eAgBY,oBAAC,0BAAD;AACI,IAAA,SAAS,EAAEP,KAAK,CAACQ,SADrB;AAEI,IAAA,OAAO,EAAER,KAAK,CAACS,sBAFnB;AAGI,IAAA,QAAQ,EAAC,IAHb;AAII,IAAA,IAAI,EAAET,KAAK,CAACE,mBAAN,CAA0BQ,IAJpC;AAKI,IAAA,IAAI,EAAEV,KAAK,CAACE,mBAAN,CAA0BS,IALpC;AAMI,IAAA,oBAAoB,EAAC,mBANzB;AAOI,IAAA,mBAAmB,EAAC,KAPxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBZ,CAFJ;AAgCH;;AAED,eAAeZ,eAAf","sourcesContent":["import React from 'react';\r\n\r\nimport ButtonSmall from '../../UserInterface/Buttons/Button/ButtonSmall';\r\nimport withHoverDescription from '../../hoc/withHoverDescription';\r\nimport DescriptionButton from '../../components/Description/DescriptionButton';\r\nimport Input from '../../UserInterface/Input/Input';\r\n\r\n\r\nfunction CountRowForPage(props) {\r\n\r\n    // логика всплывающей подсказки спрятана в hoc, обертка кнопок и подсказка реализованы в ButtonConsoleTable\r\n    const ButtonWithHoverDescription = withHoverDescription(ButtonSmall, DescriptionButton);\r\n\r\n    return (\r\n\r\n        <>\r\n          <div>\r\n                {\r\n                    props.dataButtonOpenInput.flag ?\r\n                        <Input\r\n                            id=\"inputCountRow\"\r\n                            type=\"number\"\r\n                            label=\"Строк на странице : \"\r\n                            onchange={props.onchangeInputValue}\r\n                            value={props.inputValue}\r\n                            tabindex=\"-1\"\r\n                        />\r\n                        : <div> Строк на странице : <span> {props.CountRow} </span> из {props.length}</div>\r\n                }\r\n           </div>\r\n\r\n                    <ButtonWithHoverDescription\r\n                        className={props.classname}\r\n                        onclick={props.onclickButtonInputOpen}\r\n                        tabindex='-1'\r\n                        icon={props.dataButtonOpenInput.icon}\r\n                        name={props.dataButtonOpenInput.name}\r\n                        classnameDescription='DescriptionButton'\r\n                        positionDescription=\"top\"\r\n                    />\r\n\r\n            \r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default CountRowForPage"]},"metadata":{},"sourceType":"module"}