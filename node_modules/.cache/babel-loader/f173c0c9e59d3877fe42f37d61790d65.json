{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\containers\\\\ViewType\\\\CompareViewType.js\";\nimport React from 'react';\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport BasisCompare from '../Basis/BasisCompare';\nimport { saveDataStore } from '../../store/BasisReport/actions/actionFocusData';\nimport { saveTypeRequest, saveNameWindow } from '../../store/ViewType/actions/actionEditWindowViewType';\nimport { changeAdressOpenTable } from '../../store/ViewType/actions/actionsLinksViewType';\nimport { clearCompareArr, deleteDataCompareArr } from '../../store/ViewType/actions/actionsCompareViewType';\nimport { changeFlagOpenCompareWindow } from '../../store/ViewType/actions/actionsFlagsViewType';\n\nfunction CompareViewType(props) {\n  const dispatch = useDispatch();\n  const compareArr = useSelector(state => state.stateCompareViewType); // массив строк, избранных для сравнения\n\n  const visibleNameСolumns = useSelector(state => state.stateInputEditWindowViewType.nameСolumnsTableList); // наименования ключей для заполнения колонок в таблице\n\n  const typeDataColumns = useSelector(state => state.stateInputEditWindowViewType.typeData); // тип данных значений, заполняющих колонки\n\n  const sortСolumns = useSelector(state => state.stateInputEditWindowViewType.sortСolumns); // объект с разрешением отображения сортировки в колонках в таблице\n\n  const focusData = useSelector(state => state.focusData); // фокус. запомнить данные выбранной строки\n\n  const links = useSelector(state => state.stateLinksViewType); //список ссылок для переходов между окнами\n\n  const flagOpenCompareWindow = useSelector(state => state.stateFlagsViewType.flagOpenCompareWindow); // флаг открытия таблицы сравнения\n  //переключение цветового решения приложения\n\n  const stateStylesAll = useSelector(state => state.stateStyle.stylesAll);\n  const staleSelect = useSelector(state => state.stateStyle.styleSelect);\n  const classRowTable = stateStylesAll[staleSelect].viewTypeRowTable;\n\n  const focusNull = () => {\n    dispatch(saveDataStore({\n      \"uid\": \"\",\n      \"name\": \"\",\n      \"comment\": \"\",\n      \"classViewProperty\": \"\",\n      \"dbTable\": \"\"\n    }));\n  };\n\n  const hendlerOpenWindow = (nameWindow, typeRequest) => {\n    dispatch(saveTypeRequest(typeRequest));\n    dispatch(saveNameWindow(nameWindow));\n  };\n\n  const hendlerClearCompareArr = () => {\n    dispatch(clearCompareArr());\n    dispatch(changeFlagOpenCompareWindow(false)); // изменяем ссылку перенаправления на активную таблицу для закрытия вспомогательных окон:\n\n    dispatch(changeAdressOpenTable(links.linkBase));\n  };\n\n  const hendlerDeleteContext = () => {\n    dispatch(deleteDataCompareArr(focusData, compareArr)); // удалить из массива сравнений\n    //удаляем из списка сравнений и поэтому обнуляем хранение фокуса:\n\n    focusNull();\n  };\n\n  const hendlerButtonRowClickDeleteCompareData = data => {\n    if ([data].uid === '' || [data] === null || [data] === undefined) {\n      return;\n    }\n\n    ;\n    dispatch(deleteDataCompareArr(data, compareArr));\n  };\n\n  const hendlerCloseWindow = () => {\n    dispatch(changeFlagOpenCompareWindow(false)); //закрываем окно и поэтому обнуляем хранение фокуса:\n\n    focusNull(); // изменяем ссылку перенаправления на активную таблицу для закрытия вспомогательных окон:\n\n    dispatch(changeAdressOpenTable(links.linkBase));\n  };\n\n  const stateConsoleButton = [{\n    text: \"Внести изменения\",\n    name: 'edit',\n    icon: \"fa fa-pencil-square-o fa-lg\",\n    onclick: () => hendlerOpenWindow(\"Внести изменения\", \"put\"),\n    link: links.linkEditWindow\n  }, {\n    text: \"Убрать из сравнения\",\n    name: 'deleteList',\n    icon: \"fa fa-times-circle\",\n    onclick: hendlerDeleteContext,\n    data: focusData,\n    link: links.linkCompare\n  }, {\n    text: \"Очистить список сравнений\",\n    name: 'clear',\n    icon: \"fa fa-minus-square-o\",\n    onclick: hendlerClearCompareArr,\n    link: links.linkBase\n  }, {\n    text: \"Назад\",\n    name: 'back',\n    icon: \"fa fa-share\",\n    onclick: hendlerCloseWindow,\n    link: links.linkBase\n  }];\n  return /*#__PURE__*/React.createElement(BasisCompare, {\n    compareArr: compareArr,\n    stateConsoleButton: stateConsoleButton,\n    flagOpenCompareWindow: flagOpenCompareWindow,\n    sortСolumns: sortСolumns,\n    focusNull: focusNull,\n    hendlerButtonRowClickDeleteCompareData: hendlerButtonRowClickDeleteCompareData,\n    hendlerCloseWindow: hendlerCloseWindow,\n    linkBack: links.linkBase,\n    nameBase: \"\\u0422\\u0438\\u043F\\u044B \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\",\n    nameHeader: \"\\u0421\\u0440\\u0430\\u0432\\u043D\\u0438\\u0442\\u044C \\u0438\\u0437\\u0431\\u0440\\u0430\\u043D\\u043D\\u043E\\u0435\",\n    classRowTable: classRowTable,\n    visibleNameСolumns: visibleNameСolumns,\n    typeDataColumns: typeDataColumns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  });\n}\n\nexport default connect()(CompareViewType);","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/containers/ViewType/CompareViewType.js"],"names":["React","connect","useDispatch","useSelector","BasisCompare","saveDataStore","saveTypeRequest","saveNameWindow","changeAdressOpenTable","clearCompareArr","deleteDataCompareArr","changeFlagOpenCompareWindow","CompareViewType","props","dispatch","compareArr","state","stateCompareViewType","visibleNameСolumns","stateInputEditWindowViewType","nameСolumnsTableList","typeDataColumns","typeData","sortСolumns","focusData","links","stateLinksViewType","flagOpenCompareWindow","stateFlagsViewType","stateStylesAll","stateStyle","stylesAll","staleSelect","styleSelect","classRowTable","viewTypeRowTable","focusNull","hendlerOpenWindow","nameWindow","typeRequest","hendlerClearCompareArr","linkBase","hendlerDeleteContext","hendlerButtonRowClickDeleteCompareData","data","uid","undefined","hendlerCloseWindow","stateConsoleButton","text","name","icon","onclick","link","linkEditWindow","linkCompare"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport BasisCompare from '../Basis/BasisCompare';\r\n\r\nimport { saveDataStore } from '../../store/BasisReport/actions/actionFocusData';\r\nimport {\r\n    saveTypeRequest,\r\n    saveNameWindow\r\n} from '../../store/ViewType/actions/actionEditWindowViewType';\r\nimport { changeAdressOpenTable } from '../../store/ViewType/actions/actionsLinksViewType';\r\nimport {\r\n    clearCompareArr,\r\n    deleteDataCompareArr\r\n} from '../../store/ViewType/actions/actionsCompareViewType';\r\nimport { changeFlagOpenCompareWindow } from '../../store/ViewType/actions/actionsFlagsViewType';\r\n\r\n\r\n\r\nfunction CompareViewType(props) {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const compareArr = useSelector(state => state.stateCompareViewType); // массив строк, избранных для сравнения\r\n\r\n    const visibleNameСolumns = useSelector(state => state.stateInputEditWindowViewType.nameСolumnsTableList); // наименования ключей для заполнения колонок в таблице\r\n\r\n    const typeDataColumns = useSelector(state => state.stateInputEditWindowViewType.typeData); // тип данных значений, заполняющих колонки\r\n\r\n    const sortСolumns = useSelector(state => state.stateInputEditWindowViewType.sortСolumns); // объект с разрешением отображения сортировки в колонках в таблице\r\n\r\n    const focusData = useSelector(state => state.focusData); // фокус. запомнить данные выбранной строки\r\n\r\n    const links = useSelector(state => state.stateLinksViewType); //список ссылок для переходов между окнами\r\n\r\n    const flagOpenCompareWindow = useSelector(state => state.stateFlagsViewType.flagOpenCompareWindow); // флаг открытия таблицы сравнения\r\n\r\n    //переключение цветового решения приложения\r\n    const stateStylesAll = useSelector(state => state.stateStyle.stylesAll);\r\n    const staleSelect = useSelector(state => state.stateStyle.styleSelect);\r\n\r\n    const classRowTable = stateStylesAll[staleSelect].viewTypeRowTable;\r\n\r\n    const focusNull = () => {\r\n        dispatch(saveDataStore({\r\n            \"uid\": \"\",\r\n            \"name\": \"\",\r\n            \"comment\": \"\",\r\n            \"classViewProperty\": \"\",\r\n            \"dbTable\": \"\"\r\n        }));\r\n    }\r\n\r\n    const hendlerOpenWindow = (nameWindow, typeRequest) => {\r\n        dispatch(saveTypeRequest(typeRequest));\r\n        dispatch(saveNameWindow(nameWindow));\r\n    }\r\n\r\n    const hendlerClearCompareArr = () => {\r\n        dispatch(clearCompareArr());\r\n        dispatch(changeFlagOpenCompareWindow(false));\r\n        // изменяем ссылку перенаправления на активную таблицу для закрытия вспомогательных окон:\r\n        dispatch(changeAdressOpenTable(links.linkBase));\r\n    }\r\n    \r\n    const hendlerDeleteContext = () => {\r\n        dispatch(deleteDataCompareArr(focusData, compareArr)); // удалить из массива сравнений\r\n        //удаляем из списка сравнений и поэтому обнуляем хранение фокуса:\r\n        focusNull();\r\n    }\r\n    const hendlerButtonRowClickDeleteCompareData = (data) => {\r\n        if ([data].uid === '' || [data] === null || [data] === undefined) {\r\n            return\r\n        };\r\n        dispatch(deleteDataCompareArr(data, compareArr));\r\n    }\r\n\r\n    const hendlerCloseWindow = () => {\r\n            dispatch(changeFlagOpenCompareWindow(false));\r\n            //закрываем окно и поэтому обнуляем хранение фокуса:\r\n            focusNull();\r\n            // изменяем ссылку перенаправления на активную таблицу для закрытия вспомогательных окон:\r\n            dispatch(changeAdressOpenTable(links.linkBase));\r\n    }\r\n\r\n\r\n    const stateConsoleButton = [\r\n\r\n        {\r\n            text: \"Внести изменения\",\r\n            name: 'edit',\r\n            icon: \"fa fa-pencil-square-o fa-lg\",\r\n            onclick: () => hendlerOpenWindow(\"Внести изменения\", \"put\"),\r\n            link: links.linkEditWindow\r\n        },\r\n        {\r\n            text: \"Убрать из сравнения\",\r\n            name: 'deleteList',\r\n            icon: \"fa fa-times-circle\",\r\n            onclick: hendlerDeleteContext,\r\n            data: focusData,\r\n            link: links.linkCompare\r\n        },\r\n        {\r\n            text: \"Очистить список сравнений\",\r\n            name: 'clear',\r\n            icon: \"fa fa-minus-square-o\",\r\n            onclick: hendlerClearCompareArr,\r\n            link: links.linkBase\r\n        },\r\n        {\r\n            text: \"Назад\",\r\n            name: 'back',\r\n            icon: \"fa fa-share\",\r\n            onclick: hendlerCloseWindow,\r\n            link: links.linkBase\r\n        }\r\n    ];\r\n\r\n\r\n    return (\r\n        <BasisCompare\r\n            compareArr={compareArr}\r\n            stateConsoleButton={stateConsoleButton}\r\n            flagOpenCompareWindow={flagOpenCompareWindow}\r\n            sortСolumns={sortСolumns}\r\n            focusNull={focusNull}\r\n            hendlerButtonRowClickDeleteCompareData={hendlerButtonRowClickDeleteCompareData}\r\n            hendlerCloseWindow={hendlerCloseWindow}\r\n            linkBack={links.linkBase}\r\n            nameBase=\"Типы данных\"\r\n            nameHeader=\"Сравнить избранное\"\r\n            classRowTable={classRowTable}\r\n            visibleNameСolumns={visibleNameСolumns}\r\n            typeDataColumns={typeDataColumns}\r\n        />\r\n    )\r\n}\r\n\r\nexport default connect()(CompareViewType)"]},"metadata":{},"sourceType":"module"}