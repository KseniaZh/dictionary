{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\components\\\\Table\\\\TableListUser.js\";\nimport React from 'react';\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport TableBody from './TableBody';\nimport ButtonSmall from '../../UserInterface/Buttons/Button/ButtonSmall';\nimport withHoverDescription from '../../hoc/withHoverDescription';\nimport withClickSaveFocus from '../../hoc/withClickSaveFocus';\nimport withSort from '../../hoc/withSort';\nimport DescriptionButton from '../../components/Description/DescriptionButton';\nimport FooterTable from '../../containers/FooterTable/FooterTable';\n\nfunction TableList(props) {\n  const flagOpenCompareWindow = useSelector(state => state.stateFlagsUser.flagOpenCompareWindow);\n  const haveDescription = true; // логика сортировка в hoc\n\n  const ButtonSortBase = withSort(ButtonSmall, props.stateTable, \"SortAll\");\n  const ButtonSortList = withSort(ButtonSmall, props.dataTable, \"SortActivList\");\n  const ButtonSortCompare = withSort(ButtonSmall, props.dataTable, \"SortCompareTable\", props.funcSorting); // логика всплывающей подсказки в hoc, обертка кнопки в доп div с подсказкой\n\n  const ButtonSortBaseDescription = withHoverDescription(ButtonSortBase, DescriptionButton);\n  const ButtonSortListDescription = withHoverDescription(ButtonSortList, DescriptionButton); //логика выделения фокуса в hoc\n\n  const TableBodyWithSaveFocus = withClickSaveFocus(TableBody, props.dataTable);\n  const columnName = Object.keys(props.dataTable[0]).filter(key => key !== \"uid\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"tableListBaseWrapper\",\n    className: props.classname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, \"\\u2116\"), columnName.map((name, index) => {\n    if (name === props.visibleNameСolumns[index]) {\n      return /*#__PURE__*/React.createElement(\"th\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 48\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 53\n        }\n      }, name), flagOpenCompareWindow ? /*#__PURE__*/React.createElement(ButtonSortCompare, {\n        icon: \"fa fa-arrow-down\",\n        data: name,\n        name: \"SortBase\",\n        classnameDescription: \"DescriptionButton\",\n        haveDescription: haveDescription,\n        positionDescription: \"top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 57\n        }\n      }) : /*#__PURE__*/React.createElement(ButtonSortBaseDescription, {\n        icon: \"fa fa-arrow-down\",\n        data: name,\n        name: \"SortBase\",\n        classnameDescription: \"DescriptionButton\",\n        haveDescription: haveDescription,\n        positionDescription: \"top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 59\n        }\n      }), flagOpenCompareWindow ? null : /*#__PURE__*/React.createElement(ButtonSortListDescription, {\n        icon: \"fa fa-indent\",\n        data: name,\n        name: \"SortList\",\n        classnameDescription: \"DescriptionButton\",\n        haveDescription: haveDescription,\n        positionDescription: \"top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 58\n        }\n      }));\n    }\n  }))), /*#__PURE__*/React.createElement(TableBodyWithSaveFocus, {\n    dataTable: props.dataTable,\n    onclickDelete: props.onclickDelete,\n    CountRow: props.CountRow,\n    visibleNameСolumns: props.visibleNameСolumns,\n    typeDataColumns: props.typeDataColumns,\n    flagOpenCompareWindow: flagOpenCompareWindow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 19\n    }\n  })), flagOpenCompareWindow ? null : /*#__PURE__*/React.createElement(FooterTable, {\n    classname: props.classnameConsoleCountRow,\n    classnameButtonConsoleCountRow: props.classnameButtonConsoleCountPow,\n    func: props.func,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 22\n    }\n  }));\n}\n\nexport default connect()(TableList);","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/components/Table/TableListUser.js"],"names":["React","connect","useDispatch","useSelector","TableBody","ButtonSmall","withHoverDescription","withClickSaveFocus","withSort","DescriptionButton","FooterTable","TableList","props","flagOpenCompareWindow","state","stateFlagsUser","haveDescription","ButtonSortBase","stateTable","ButtonSortList","dataTable","ButtonSortCompare","funcSorting","ButtonSortBaseDescription","ButtonSortListDescription","TableBodyWithSaveFocus","columnName","Object","keys","filter","key","classname","map","name","index","visibleNameСolumns","onclickDelete","CountRow","typeDataColumns","classnameConsoleCountRow","classnameButtonConsoleCountPow","func"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport TableBody from './TableBody';\r\nimport ButtonSmall from '../../UserInterface/Buttons/Button/ButtonSmall';\r\nimport withHoverDescription from '../../hoc/withHoverDescription';\r\nimport withClickSaveFocus from '../../hoc/withClickSaveFocus';\r\nimport withSort from '../../hoc/withSort';\r\nimport DescriptionButton from '../../components/Description/DescriptionButton';\r\nimport FooterTable from '../../containers/FooterTable/FooterTable';\r\n\r\n\r\nfunction TableList(props) {\r\n\r\n    const flagOpenCompareWindow = useSelector(state => state.stateFlagsUser.flagOpenCompareWindow); \r\n\r\n    const haveDescription = true;\r\n\r\n    // логика сортировка в hoc\r\n    const ButtonSortBase = withSort(ButtonSmall, props.stateTable, \"SortAll\");\r\n    const ButtonSortList = withSort(ButtonSmall, props.dataTable, \"SortActivList\");\r\n    const ButtonSortCompare = withSort(ButtonSmall, props.dataTable, \"SortCompareTable\", props.funcSorting);\r\n\r\n    // логика всплывающей подсказки в hoc, обертка кнопки в доп div с подсказкой\r\n    const ButtonSortBaseDescription = withHoverDescription(ButtonSortBase, DescriptionButton);\r\n    const ButtonSortListDescription = withHoverDescription(ButtonSortList, DescriptionButton);\r\n\r\n    //логика выделения фокуса в hoc\r\n    const TableBodyWithSaveFocus = withClickSaveFocus(TableBody, props.dataTable);\r\n\r\n\r\n\r\n    const columnName = Object.keys(props.dataTable[0]).filter(key => key !== \"uid\");\r\n\r\n\r\n    return(\r\n        <div id='tableListBaseWrapper' className={props.classname}>\r\n            <table>\r\n                  <thead>\r\n                    <tr>\r\n                        <th>\r\n                            №\r\n                        </th>\r\n\r\n                    {\r\n                        columnName.map((name, index) => {\r\n                                if (name === props.visibleNameСolumns[index]) {\r\n                                        return <th\r\n                                                  key={index}\r\n                                                >\r\n                                                    <div>{name}</div>\r\n                                                {\r\n                                                    flagOpenCompareWindow ?\r\n                                                        <ButtonSortCompare\r\n                                                            icon=\"fa fa-arrow-down\"\r\n                                                            data={name}\r\n                                                            name=\"SortBase\"\r\n                                                            classnameDescription='DescriptionButton'\r\n                                                            haveDescription={haveDescription}\r\n                                                            positionDescription=\"top\"\r\n                                                        />\r\n                                                        : <ButtonSortBaseDescription\r\n                                                            icon=\"fa fa-arrow-down\"\r\n                                                            data={name}\r\n                                                            name=\"SortBase\"\r\n                                                            classnameDescription='DescriptionButton'\r\n                                                            haveDescription={haveDescription}\r\n                                                            positionDescription=\"top\"\r\n                                                        />\r\n                                                }\r\n                                                {\r\n                                                    flagOpenCompareWindow ?\r\n                                                        null\r\n                                                        :<ButtonSortListDescription\r\n                                                            icon=\"fa fa-indent\"\r\n                                                            data={name}\r\n                                                            name=\"SortList\"\r\n                                                            classnameDescription='DescriptionButton'\r\n                                                            haveDescription={haveDescription}\r\n                                                            positionDescription = \"top\"\r\n                                                        /> \r\n                                                 }\r\n                                                </th>\r\n                                    }    \r\n                        })\r\n                    }\r\n                    </tr>\r\n                  </thead>\r\n\r\n                  <TableBodyWithSaveFocus\r\n                        dataTable={props.dataTable}\r\n                        onclickDelete={props.onclickDelete}\r\n                        CountRow={props.CountRow}\r\n                        visibleNameСolumns={props.visibleNameСolumns}\r\n                        typeDataColumns={props.typeDataColumns}\r\n                        flagOpenCompareWindow={flagOpenCompareWindow}\r\n                    />\r\n                   \r\n            </table>\r\n            {\r\n                flagOpenCompareWindow ?\r\n                    null\r\n                    :<FooterTable\r\n                        classname={props.classnameConsoleCountRow}\r\n                        classnameButtonConsoleCountRow={props.classnameButtonConsoleCountPow}\r\n                        func={props.func}\r\n                    />\r\n            }\r\n            \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default connect()(TableList)"]},"metadata":{},"sourceType":"module"}