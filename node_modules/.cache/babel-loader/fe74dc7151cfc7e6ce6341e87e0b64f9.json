{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435\\\\React\\\\projects\\\\react-dictionary\\\\src\\\\components\\\\FooterTable\\\\FooterTable.js\";\nimport React from 'react';\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport CountRowForPage from './CountRowForPage';\nimport ConsoleOpenActivList from './ConsoleOpenActivList';\nimport { changeCountRowTable, getCounterPagesTable, changeNumberList, getDataPageRowTable, changeActivArrNumberPagesFooterTable } from '../../store/EltypeClass/actions/actionsFlagsEltypeClass';\n\nfunction FooterTable(props) {\n  const dispatch = useDispatch();\n  const stateTable = useSelector(state => state.stateTableEltypeClass); //ВСЯ база\n\n  const countRow = useSelector(state => state.stateFlagsEltypeClass.countRowTable); // количество строк на отображаемой странице\n\n  const counterPages = useSelector(state => state.stateFlagsEltypeClass.counterPagesTable); // количество листов в таблице всего\n\n  const numberList = useSelector(state => state.stateFlagsEltypeClass.numberList); //номер отображаемого листа\n\n  const activArrNumberPages = useSelector(state => state.stateFlagsEltypeClass.activArrNumberPagesFooterTable); //предлагаемый на выбор массив из 3х кнопок в консоли переключения отображаемых листов таблицы\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.classname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ConsoleOpenActivList, {\n    func: props.func,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CountRowForPage, {\n    func: props.func,\n    classname: props.classnameButtonConsoleCountRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default connect()(FooterTable);","map":{"version":3,"sources":["D:/Обучение/React/projects/react-dictionary/src/components/FooterTable/FooterTable.js"],"names":["React","connect","useDispatch","useSelector","CountRowForPage","ConsoleOpenActivList","changeCountRowTable","getCounterPagesTable","changeNumberList","getDataPageRowTable","changeActivArrNumberPagesFooterTable","FooterTable","props","dispatch","stateTable","state","stateTableEltypeClass","countRow","stateFlagsEltypeClass","countRowTable","counterPages","counterPagesTable","numberList","activArrNumberPages","activArrNumberPagesFooterTable","classname","func","classnameButtonConsoleCountRow"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,WAA/B,QAAkD,aAAlD;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AAEA,SACIC,mBADJ,EAEIC,oBAFJ,EAGIC,gBAHJ,EAIIC,mBAJJ,EAKIC,oCALJ,QAMO,yDANP;;AASA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAExB,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AAEA,QAAMY,UAAU,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,qBAAhB,CAA9B,CAJwB,CAI8C;;AACtE,QAAMC,QAAQ,GAAGd,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACG,qBAAN,CAA4BC,aAAtC,CAA5B,CALwB,CAK0D;;AAClF,QAAMC,YAAY,GAAGjB,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACG,qBAAN,CAA4BG,iBAAtC,CAAhC,CANwB,CAMkE;;AAC1F,QAAMC,UAAU,GAAGnB,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACG,qBAAN,CAA4BI,UAAtC,CAA9B,CAPwB,CAOyD;;AACjF,QAAMC,mBAAmB,GAAGpB,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACG,qBAAN,CAA4BM,8BAAtC,CAAvC,CARwB,CAQsF;;AAK9G,sBAEI;AAAK,IAAA,SAAS,EAAEZ,KAAK,CAACa,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,oBAAD;AACI,IAAA,IAAI,EAAEb,KAAK,CAACc,IADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAMI,oBAAC,eAAD;AACI,IAAA,IAAI,EAAEd,KAAK,CAACc,IADhB;AAEI,IAAA,SAAS,EAAEd,KAAK,CAACe,8BAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CAFJ;AAeH;;AAED,eAAe1B,OAAO,GAAGU,WAAH,CAAtB","sourcesContent":["import React from 'react';\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport CountRowForPage from './CountRowForPage';\r\nimport ConsoleOpenActivList from './ConsoleOpenActivList';\r\n\r\nimport {\r\n    changeCountRowTable,\r\n    getCounterPagesTable,\r\n    changeNumberList,\r\n    getDataPageRowTable,\r\n    changeActivArrNumberPagesFooterTable\r\n} from '../../store/EltypeClass/actions/actionsFlagsEltypeClass';\r\n\r\n\r\nfunction FooterTable(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const stateTable = useSelector(state => state.stateTableEltypeClass); //ВСЯ база\r\n    const countRow = useSelector(state => state.stateFlagsEltypeClass.countRowTable); // количество строк на отображаемой странице\r\n    const counterPages = useSelector(state => state.stateFlagsEltypeClass.counterPagesTable); // количество листов в таблице всего\r\n    const numberList = useSelector(state => state.stateFlagsEltypeClass.numberList); //номер отображаемого листа\r\n    const activArrNumberPages = useSelector(state => state.stateFlagsEltypeClass.activArrNumberPagesFooterTable); //предлагаемый на выбор массив из 3х кнопок в консоли переключения отображаемых листов таблицы\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className={props.classname}>\r\n\r\n            <ConsoleOpenActivList\r\n                func={props.func}\r\n            />\r\n               \r\n            <CountRowForPage\r\n                func={props.func}\r\n                classname={props.classnameButtonConsoleCountRow}\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect()(FooterTable)"]},"metadata":{},"sourceType":"module"}